const logger = Moralis.Cloud.getLogger();
const NFTMarketContract = {
  contractName: "NFTMarket",
  abi: [
    {
      inputs: [],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "uint256",
          name: "itemId",
          type: "uint256",
        },
        {
          indexed: true,
          internalType: "address",
          name: "nftContract",
          type: "address",
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "sellerId",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "address",
          name: "seller",
          type: "address",
        },
        {
          indexed: false,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "price",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "bool",
          name: "sold",
          type: "bool",
        },
      ],
      name: "MarketItemCreated",
      type: "event",
    },
    {
      inputs: [],
      name: "getListingPrice",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "nftContract",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "price",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "sellerId",
          type: "uint256",
        },
        {
          internalType: "bool",
          name: "isAuction",
          type: "bool",
        },
        {
          internalType: "uint256",
          name: "sellDate",
          type: "uint256",
        },
      ],
      name: "createMarketItem",
      outputs: [],
      stateMutability: "payable",
      type: "function",
      payable: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "nftContract",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "itemId",
          type: "uint256",
        },
      ],
      name: "createMarketSale",
      outputs: [],
      stateMutability: "payable",
      type: "function",
      payable: true,
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "itemId",
          type: "uint256",
        },
        {
          internalType: "uint256",
          name: "bid",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "buyer",
          type: "address",
        },
      ],
      name: "createBid",
      outputs: [
        {
          components: [
            {
              internalType: "uint256",
              name: "itemId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "bid",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          internalType: "struct NFTMarket.Bid[]",
          name: "",
          type: "tuple[]",
        },
      ],
      stateMutability: "payable",
      type: "function",
      payable: true,
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "itemId",
          type: "uint256",
        },
      ],
      name: "createBidSale",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "itemId",
          type: "uint256",
        },
      ],
      name: "fetchBids",
      outputs: [
        {
          components: [
            {
              internalType: "uint256",
              name: "itemId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "bid",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          internalType: "struct NFTMarket.Bid[]",
          name: "",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "fetchMarketItems",
      outputs: [
        {
          components: [
            {
              internalType: "uint256",
              name: "itemId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "nftContract",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "sellerId",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "seller",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isAuction",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "sellDate",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "sold",
              type: "bool",
            },
          ],
          internalType: "struct NFTMarket.MarketItem[]",
          name: "",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "fetchMyNFTs",
      outputs: [
        {
          components: [
            {
              internalType: "uint256",
              name: "itemId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "nftContract",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "sellerId",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "seller",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isAuction",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "sellDate",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "sold",
              type: "bool",
            },
          ],
          internalType: "struct NFTMarket.MarketItem[]",
          name: "",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "fetchItemsCreated",
      outputs: [
        {
          components: [
            {
              internalType: "uint256",
              name: "itemId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "nftContract",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "sellerId",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "seller",
              type: "address",
            },
            {
              internalType: "address payable",
              name: "owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isAuction",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "sellDate",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "sold",
              type: "bool",
            },
          ],
          internalType: "struct NFTMarket.MarketItem[]",
          name: "",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
  ],
  metadata:
    '{"compiler":{"version":"0.8.3+commit.8d00100c"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"itemId","type":"uint256"},{"indexed":true,"internalType":"address","name":"nftContract","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"sellerId","type":"uint256"},{"indexed":false,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"bool","name":"sold","type":"bool"}],"name":"MarketItemCreated","type":"event"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"}],"name":"createBid","outputs":[{"components":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"}],"internalType":"struct NFTMarket.Bid[]","name":"","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"}],"name":"createBidSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"sellerId","type":"uint256"},{"internalType":"bool","name":"isAuction","type":"bool"},{"internalType":"uint256","name":"sellDate","type":"uint256"}],"name":"createMarketItem","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"itemId","type":"uint256"}],"name":"createMarketSale","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"itemId","type":"uint256"}],"name":"fetchBids","outputs":[{"components":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"},{"internalType":"address","name":"buyer","type":"address"}],"internalType":"struct NFTMarket.Bid[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fetchItemsCreated","outputs":[{"components":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"sellerId","type":"uint256"},{"internalType":"address payable","name":"seller","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"isAuction","type":"bool"},{"internalType":"uint256","name":"sellDate","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"}],"internalType":"struct NFTMarket.MarketItem[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fetchMarketItems","outputs":[{"components":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"sellerId","type":"uint256"},{"internalType":"address payable","name":"seller","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"isAuction","type":"bool"},{"internalType":"uint256","name":"sellDate","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"}],"internalType":"struct NFTMarket.MarketItem[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fetchMyNFTs","outputs":[{"components":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"sellerId","type":"uint256"},{"internalType":"address payable","name":"seller","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"isAuction","type":"bool"},{"internalType":"uint256","name":"sellDate","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"}],"internalType":"struct NFTMarket.MarketItem[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getListingPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"project:/contracts/NFTMarket.sol":"NFTMarket"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"keccak256":"0x86ebc6cea2b539c2d4a79a4754f7c90c43c45c9aaf0aab32ecffb1565afc5e0b","license":"MIT","urls":["bzz-raw://1d8016f7e49bd65a14769d2c846a7e589603e51c4bf82da94315cc59f54fe2e4","dweb:/ipfs/Qmd92BAbMLEbYYfRWwN1yqDTxEuguenmQ35YFbPh3KEFuP"]},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x1ba5cf152c15dc0c785310feeb61e1f74387fc7bdc2aba5d90733f791606d4bf","license":"MIT","urls":["bzz-raw://38db14c62d6431df042a7ca07fd021ea52ccdbd03f0be2b5c4ab034a56126d38","dweb:/ipfs/QmbCHTCLP6bz8omQXrP8VuxFGdK9Hh3jqfrSTr38WNpTk4"]},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4","license":"MIT","urls":["bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de","dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv"]},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0x483b106386dd309f168672928252a19f30c30efb4d17d4b8e2b0f587ca784a11","license":"MIT","urls":["bzz-raw://189a39d066c6886ddbe86c79bb36d6cbe66e98bc6a94956e28f5503dae4ad406","dweb:/ipfs/QmT3s3PwCdXqHLJk26kcnedrRGTC9T18z52i9Be7PV9ppc"]},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x6052c25b1021f2b0e733fb52ca11948cb2f08cb66076397507243a6e8a8d7776","license":"MIT","urls":["bzz-raw://32ac4547a76b28021a007853958284aa8a15a64f1aeec83cb797b7fd60a46b56","dweb:/ipfs/QmTJWQF8j586oaYNpdZv55xnzyHVQc68XN4eBNeiLbKX8d"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656","license":"MIT","urls":["bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe","dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3","license":"MIT","urls":["bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405","dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu"]},"@openzeppelin/contracts/utils/Counters.sol":{"keccak256":"0x74f630d2664c1581a1cbd0730d4ba119b3a184ef90c65f3a934be4d16d0e58a1","license":"MIT","urls":["bzz-raw://cadad0b133129f946a53e0f61fa387803ccdc010d9c794da0738bb7fc5001b66","dweb:/ipfs/QmQdTBpUT9WgDuCm7womDFiAnksepw6Fmi5Z5vv1H17Qr1"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x5fa25f305839292fab713256214f2868e0257d29826b14282bbd7f1e34f5af38","license":"MIT","urls":["bzz-raw://b3de4074848249e00e1336db857e3fa8f78b4fe11d4a887f71050c22023b2132","dweb:/ipfs/QmbL6k2zFGndQPNPG7vCDivtjKam3quJSrEbRuVsNo4hBw"]},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"keccak256":"0x905cd0ecd91d1de79a4679d745b79cf852ca8ccda5d25d1c49c6bd17a5edc0cf","license":"MIT","urls":["bzz-raw://8dd1601fcd370546d8c06ea1902d7e7364fc490fbf0ebc3004230ef1f5db473c","dweb:/ipfs/Qmb8zbC3TjWFtcuyP3KEEaegMkPcfeKAcPrwzvkAoMR3cZ"]},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9","license":"MIT","urls":["bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93","dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT"]},"project:/contracts/NFTMarket.sol":{"keccak256":"0x24d28fc39d18b26ec6c39cd456601bf9942c9c78f75cba176899bd080a0eab0c","license":"MIT OR Apache-2.0","urls":["bzz-raw://5458c7d7788bb2af145c74db11ec616b5947725255e2ce30ba620f1741510905","dweb:/ipfs/QmaoS2fPX4GAs6vtZajFyAqdamagcZjx6mi82tVvPFa4yZ"]}},"version":1}',
  bytecode:
    "0x60806040526658d15e1762800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612b62806100746000396000f3fe6080604052600436106100865760003560e01c80637f95c99f116100595780637f95c99f14610128578063951fe56314610165578063c23b139e1461018e578063c2d3c07b146101aa578063f064c32e146101da57610086565b80630f08efe01461008b57806312e85585146100b6578063144d149c146100e1578063202e3740146100fd575b600080fd5b34801561009757600080fd5b506100a0610205565b6040516100ad9190612575565b60405180910390f35b3480156100c257600080fd5b506100cb61054b565b6040516100d891906126b7565b60405180910390f35b6100fb60048036038101906100f6919061207c565b610555565b005b34801561010957600080fd5b50610112610909565b60405161011f9190612575565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190612105565b610cd3565b60405161015c9190612553565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190612105565b610daf565b005b6101a860048036038101906101a39190612040565b611387565b005b6101c460048036038101906101bf919061212e565b611640565b6040516101d19190612553565b60405180910390f35b3480156101e657600080fd5b506101ef611b7a565b6040516101fc9190612575565b60405180910390f35b606060006102136001611f44565b905060006102216002611f44565b61022b6001611f44565b61023591906127fe565b90506000808267ffffffffffffffff81111561027a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156102b357816020015b6102a0611f68565b8152602001906001900390816102985790505b50905060005b8481101561054057600073ffffffffffffffffffffffffffffffffffffffff16600560006001846102ea91906127a8565b815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561052d57600060018261034791906127a8565b905060006005600083815260200190815260200160002090508060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff161515151581525050848681518110610510577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018561052891906127a8565b945050505b80806105389061288c565b9150506102b9565b508094505050505090565b6000600454905090565b6002600054141561059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290612657565b60405180910390fd5b6002600081905550600084116105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd90612677565b60405180910390fd5b600454341461062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190612617565b60405180910390fd5b6106346001611f52565b60006106406001611f44565b90506040518061014001604052808281526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001868152602001841515815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555061010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055509050508673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161086c9392919061251c565b600060405180830381600087803b15801561088657600080fd5b505af115801561089a573d6000803e3d6000fd5b50505050858773ffffffffffffffffffffffffffffffffffffffff16827f79f8c05bb09c0956360a67fcd99d7cd58b143c2e5965443ccf2238950961eac5873360008b60006040516108f09594939291906126d2565b60405180910390a4506001600081905550505050505050565b606060006109176001611f44565b905060008060005b838110156109c0573373ffffffffffffffffffffffffffffffffffffffff166005600060018461094f91906127a8565b815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109ad576001836109aa91906127a8565b92505b80806109b89061288c565b91505061091f565b5060008267ffffffffffffffff811115610a03577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610a3c57816020015b610a29611f68565b815260200190600190039081610a215790505b50905060005b84811015610cc8573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610a7291906127a8565b815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610cb5576000600182610acf91906127a8565b905060006005600083815260200190815260200160002090508060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff161515151581525050848681518110610c98577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185610cb091906127a8565b945050505b8080610cc09061288c565b915050610a42565b508094505050505090565b606060066000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610da4578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610d08565b505050509050919050565b600060066000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610e80578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610de4565b50505050905060006005600084815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff16151515158152505090506000151581610120015115151461105f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105690612697565b60405180910390fd5b4281610100015110156110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e906125b7565b60405180910390fd5b600082600184516110b891906127fe565b815181106110ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050816080015173ffffffffffffffffffffffffffffffffffffffff166108fc82602001519081150290604051600060405180830381858888f19350505050158015611147573d6000803e3d6000fd5b50816020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd30836040015185604001516040518463ffffffff1660e01b81526004016111919392919061251c565b600060405180830381600087803b1580156111ab57600080fd5b505af11580156111bf573d6000803e3d6000fd5b5050505080604001516005600086815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600086815260200190815260200160002060090160006101000a81548160ff0219169083151502179055506112556002611f52565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156112bf573d6000803e3d6000fd5b5060005b600284516112d191906127fe565b811015611380576000848281518110611313577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050806040015173ffffffffffffffffffffffffffffffffffffffff166108fc82602001519081150290604051600060405180830381858888f1935050505015801561136b573d6000803e3d6000fd5b505080806113789061288c565b9150506112c3565b5050505050565b600260005414156113cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c490612657565b60405180910390fd5b600260008190555060006005600083815260200190815260200160002060060154905060006005600084815260200190815260200160002060020154905081341461144d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611444906125d7565b60405180910390fd5b6005600084815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156114c9573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016115079392919061251c565b600060405180830381600087803b15801561152157600080fd5b505af1158015611535573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060090160006101000a81548160ff0219169083151502179055506115c76002611f52565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015611631573d6000803e3d6000fd5b50505060016000819055505050565b6060823414611684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167b90612597565b60405180910390fd5b600060066000868152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611755578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906116b9565b50505050905060006005600087815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff161515151581525050905060008251111561198a57816001835161190191906127fe565b81518110611938577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151602001518511611985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197c906125f7565b60405180910390fd5b6119d2565b8060c001518510156119d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c890612637565b60405180910390fd5b5b6006600087815260200190815260200160002060405180606001604052808881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060066000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611b6b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190611acf565b50505050925050509392505050565b60606000611b886001611f44565b905060008060005b83811015611c31573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611bc091906127a8565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c1e57600183611c1b91906127a8565b92505b8080611c299061288c565b915050611b90565b5060008267ffffffffffffffff811115611c74577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611cad57816020015b611c9a611f68565b815260200190600190039081611c925790505b50905060005b84811015611f39573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611ce391906127a8565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f26576000600182611d4091906127a8565b905060006005600083815260200190815260200160002090508060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff161515151581525050848681518110611f09577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611f2191906127a8565b945050505b8080611f319061288c565b915050611cb3565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b60405180610140016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152602001600081526020016000151581525090565b60008135905061201081612ae7565b92915050565b60008135905061202581612afe565b92915050565b60008135905061203a81612b15565b92915050565b6000806040838503121561205357600080fd5b600061206185828601612001565b92505060206120728582860161202b565b9150509250929050565b60008060008060008060c0878903121561209557600080fd5b60006120a389828a01612001565b96505060206120b489828a0161202b565b95505060406120c589828a0161202b565b94505060606120d689828a0161202b565b93505060806120e789828a01612016565b92505060a06120f889828a0161202b565b9150509295509295509295565b60006020828403121561211757600080fd5b60006121258482850161202b565b91505092915050565b60008060006060848603121561214357600080fd5b60006121518682870161202b565b93505060206121628682870161202b565b925050604061217386828701612001565b9150509250925092565b600061218983836123f0565b60608301905092915050565b60006121a18383612432565b6101408301905092915050565b6121b781612844565b82525050565b6121c681612832565b82525050565b6121d581612832565b82525050565b60006121e682612745565b6121f08185612775565b93506121fb83612725565b8060005b8381101561222c578151612213888261217d565b975061221e8361275b565b9250506001810190506121ff565b5085935050505092915050565b600061224482612750565b61224e8185612786565b935061225983612735565b8060005b8381101561228a5781516122718882612195565b975061227c83612768565b92505060018101905061225d565b5085935050505092915050565b6122a081612856565b82525050565b6122af81612856565b82525050565b60006122c2602483612797565b91506122cd82612904565b604082019050919050565b60006122e5601983612797565b91506122f082612953565b602082019050919050565b6000612308604083612797565b91506123138261297c565b604082019050919050565b600061232b601a83612797565b9150612336826129cb565b602082019050919050565b600061234e602483612797565b9150612359826129f4565b604082019050919050565b6000612371601b83612797565b915061237c82612a43565b602082019050919050565b6000612394601f83612797565b915061239f82612a6c565b602082019050919050565b60006123b7601c83612797565b91506123c282612a95565b602082019050919050565b60006123da601183612797565b91506123e582612abe565b602082019050919050565b60608201600082015161240660008501826124fe565b50602082015161241960208501826124fe565b50604082015161242c60408501826121bd565b50505050565b6101408201600082015161244960008501826124fe565b50602082015161245c60208501826121bd565b50604082015161246f60408501826124fe565b50606082015161248260608501826124fe565b50608082015161249560808501826121ae565b5060a08201516124a860a08501826121ae565b5060c08201516124bb60c08501826124fe565b5060e08201516124ce60e0850182612297565b506101008201516124e36101008501826124fe565b506101208201516124f8610120850182612297565b50505050565b61250781612882565b82525050565b61251681612882565b82525050565b600060608201905061253160008301866121cc565b61253e60208301856121cc565b61254b604083018461250d565b949350505050565b6000602082019050818103600083015261256d81846121db565b905092915050565b6000602082019050818103600083015261258f8184612239565b905092915050565b600060208201905081810360008301526125b0816122b5565b9050919050565b600060208201905081810360008301526125d0816122d8565b9050919050565b600060208201905081810360008301526125f0816122fb565b9050919050565b600060208201905081810360008301526126108161231e565b9050919050565b6000602082019050818103600083015261263081612341565b9050919050565b6000602082019050818103600083015261265081612364565b9050919050565b6000602082019050818103600083015261267081612387565b9050919050565b60006020820190508181036000830152612690816123aa565b9050919050565b600060208201905081810360008301526126b0816123cd565b9050919050565b60006020820190506126cc600083018461250d565b92915050565b600060a0820190506126e7600083018861250d565b6126f460208301876121cc565b61270160408301866121cc565b61270e606083018561250d565b61271b60808301846122a6565b9695505050505050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006127b382612882565b91506127be83612882565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127f3576127f26128d5565b5b828201905092915050565b600061280982612882565b915061281483612882565b925082821015612827576128266128d5565b5b828203905092915050565b600061283d82612862565b9050919050565b600061284f82612862565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061289782612882565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128ca576128c96128d5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f56616c7565206973206c657373207468616e207468652062696464696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f41756374696f6e20686173206e6f7420656e6465642079657400000000000000600082015250565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b7f426964206973206c657373207468616e206c617374206269642e000000000000600082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f426964206973206c657373207468616e206d696e2e2070726963650000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b7f4974656d20616c726561647920736f6c64000000000000000000000000000000600082015250565b612af081612832565b8114612afb57600080fd5b50565b612b0781612856565b8114612b1257600080fd5b50565b612b1e81612882565b8114612b2957600080fd5b5056fea2646970667358221220ada68e58ecd748f5749bfa79af202a8b8a67ef1f3234fe93ab5a7c34f2a5e29264736f6c63430008030033",
  deployedBytecode:
    "0x6080604052600436106100865760003560e01c80637f95c99f116100595780637f95c99f14610128578063951fe56314610165578063c23b139e1461018e578063c2d3c07b146101aa578063f064c32e146101da57610086565b80630f08efe01461008b57806312e85585146100b6578063144d149c146100e1578063202e3740146100fd575b600080fd5b34801561009757600080fd5b506100a0610205565b6040516100ad9190612575565b60405180910390f35b3480156100c257600080fd5b506100cb61054b565b6040516100d891906126b7565b60405180910390f35b6100fb60048036038101906100f6919061207c565b610555565b005b34801561010957600080fd5b50610112610909565b60405161011f9190612575565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190612105565b610cd3565b60405161015c9190612553565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190612105565b610daf565b005b6101a860048036038101906101a39190612040565b611387565b005b6101c460048036038101906101bf919061212e565b611640565b6040516101d19190612553565b60405180910390f35b3480156101e657600080fd5b506101ef611b7a565b6040516101fc9190612575565b60405180910390f35b606060006102136001611f44565b905060006102216002611f44565b61022b6001611f44565b61023591906127fe565b90506000808267ffffffffffffffff81111561027a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156102b357816020015b6102a0611f68565b8152602001906001900390816102985790505b50905060005b8481101561054057600073ffffffffffffffffffffffffffffffffffffffff16600560006001846102ea91906127a8565b815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561052d57600060018261034791906127a8565b905060006005600083815260200190815260200160002090508060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff161515151581525050848681518110610510577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018561052891906127a8565b945050505b80806105389061288c565b9150506102b9565b508094505050505090565b6000600454905090565b6002600054141561059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290612657565b60405180910390fd5b6002600081905550600084116105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd90612677565b60405180910390fd5b600454341461062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190612617565b60405180910390fd5b6106346001611f52565b60006106406001611f44565b90506040518061014001604052808281526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001868152602001841515815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555061010082015181600801556101208201518160090160006101000a81548160ff0219169083151502179055509050508673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b815260040161086c9392919061251c565b600060405180830381600087803b15801561088657600080fd5b505af115801561089a573d6000803e3d6000fd5b50505050858773ffffffffffffffffffffffffffffffffffffffff16827f79f8c05bb09c0956360a67fcd99d7cd58b143c2e5965443ccf2238950961eac5873360008b60006040516108f09594939291906126d2565b60405180910390a4506001600081905550505050505050565b606060006109176001611f44565b905060008060005b838110156109c0573373ffffffffffffffffffffffffffffffffffffffff166005600060018461094f91906127a8565b815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109ad576001836109aa91906127a8565b92505b80806109b89061288c565b91505061091f565b5060008267ffffffffffffffff811115610a03577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610a3c57816020015b610a29611f68565b815260200190600190039081610a215790505b50905060005b84811015610cc8573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610a7291906127a8565b815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610cb5576000600182610acf91906127a8565b905060006005600083815260200190815260200160002090508060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff161515151581525050848681518110610c98577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185610cb091906127a8565b945050505b8080610cc09061288c565b915050610a42565b508094505050505090565b606060066000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610da4578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610d08565b505050509050919050565b600060066000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610e80578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610de4565b50505050905060006005600084815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff16151515158152505090506000151581610120015115151461105f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105690612697565b60405180910390fd5b4281610100015110156110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e906125b7565b60405180910390fd5b600082600184516110b891906127fe565b815181106110ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050816080015173ffffffffffffffffffffffffffffffffffffffff166108fc82602001519081150290604051600060405180830381858888f19350505050158015611147573d6000803e3d6000fd5b50816020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd30836040015185604001516040518463ffffffff1660e01b81526004016111919392919061251c565b600060405180830381600087803b1580156111ab57600080fd5b505af11580156111bf573d6000803e3d6000fd5b5050505080604001516005600086815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600086815260200190815260200160002060090160006101000a81548160ff0219169083151502179055506112556002611f52565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050501580156112bf573d6000803e3d6000fd5b5060005b600284516112d191906127fe565b811015611380576000848281518110611313577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050806040015173ffffffffffffffffffffffffffffffffffffffff166108fc82602001519081150290604051600060405180830381858888f1935050505015801561136b573d6000803e3d6000fd5b505080806113789061288c565b9150506112c3565b5050505050565b600260005414156113cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c490612657565b60405180910390fd5b600260008190555060006005600083815260200190815260200160002060060154905060006005600084815260200190815260200160002060020154905081341461144d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611444906125d7565b60405180910390fd5b6005600084815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156114c9573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016115079392919061251c565b600060405180830381600087803b15801561152157600080fd5b505af1158015611535573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060090160006101000a81548160ff0219169083151502179055506115c76002611f52565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015611631573d6000803e3d6000fd5b50505060016000819055505050565b6060823414611684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167b90612597565b60405180910390fd5b600060066000868152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611755578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906116b9565b50505050905060006005600087815260200190815260200160002060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff161515151581525050905060008251111561198a57816001835161190191906127fe565b81518110611938577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151602001518511611985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197c906125f7565b60405180910390fd5b6119d2565b8060c001518510156119d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119c890612637565b60405180910390fd5b5b6006600087815260200190815260200160002060405180606001604052808881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060066000878152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611b6b578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190611acf565b50505050925050509392505050565b60606000611b886001611f44565b905060008060005b83811015611c31573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611bc091906127a8565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c1e57600183611c1b91906127a8565b92505b8080611c299061288c565b915050611b90565b5060008267ffffffffffffffff811115611c74577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611cad57816020015b611c9a611f68565b815260200190600190039081611c925790505b50905060005b84811015611f39573373ffffffffffffffffffffffffffffffffffffffff1660056000600184611ce391906127a8565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f26576000600182611d4091906127a8565b905060006005600083815260200190815260200160002090508060405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600682015481526020016007820160009054906101000a900460ff16151515158152602001600882015481526020016009820160009054906101000a900460ff161515151581525050848681518110611f09577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185611f2191906127a8565b945050505b8080611f319061288c565b915050611cb3565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b60405180610140016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152602001600081526020016000151581525090565b60008135905061201081612ae7565b92915050565b60008135905061202581612afe565b92915050565b60008135905061203a81612b15565b92915050565b6000806040838503121561205357600080fd5b600061206185828601612001565b92505060206120728582860161202b565b9150509250929050565b60008060008060008060c0878903121561209557600080fd5b60006120a389828a01612001565b96505060206120b489828a0161202b565b95505060406120c589828a0161202b565b94505060606120d689828a0161202b565b93505060806120e789828a01612016565b92505060a06120f889828a0161202b565b9150509295509295509295565b60006020828403121561211757600080fd5b60006121258482850161202b565b91505092915050565b60008060006060848603121561214357600080fd5b60006121518682870161202b565b93505060206121628682870161202b565b925050604061217386828701612001565b9150509250925092565b600061218983836123f0565b60608301905092915050565b60006121a18383612432565b6101408301905092915050565b6121b781612844565b82525050565b6121c681612832565b82525050565b6121d581612832565b82525050565b60006121e682612745565b6121f08185612775565b93506121fb83612725565b8060005b8381101561222c578151612213888261217d565b975061221e8361275b565b9250506001810190506121ff565b5085935050505092915050565b600061224482612750565b61224e8185612786565b935061225983612735565b8060005b8381101561228a5781516122718882612195565b975061227c83612768565b92505060018101905061225d565b5085935050505092915050565b6122a081612856565b82525050565b6122af81612856565b82525050565b60006122c2602483612797565b91506122cd82612904565b604082019050919050565b60006122e5601983612797565b91506122f082612953565b602082019050919050565b6000612308604083612797565b91506123138261297c565b604082019050919050565b600061232b601a83612797565b9150612336826129cb565b602082019050919050565b600061234e602483612797565b9150612359826129f4565b604082019050919050565b6000612371601b83612797565b915061237c82612a43565b602082019050919050565b6000612394601f83612797565b915061239f82612a6c565b602082019050919050565b60006123b7601c83612797565b91506123c282612a95565b602082019050919050565b60006123da601183612797565b91506123e582612abe565b602082019050919050565b60608201600082015161240660008501826124fe565b50602082015161241960208501826124fe565b50604082015161242c60408501826121bd565b50505050565b6101408201600082015161244960008501826124fe565b50602082015161245c60208501826121bd565b50604082015161246f60408501826124fe565b50606082015161248260608501826124fe565b50608082015161249560808501826121ae565b5060a08201516124a860a08501826121ae565b5060c08201516124bb60c08501826124fe565b5060e08201516124ce60e0850182612297565b506101008201516124e36101008501826124fe565b506101208201516124f8610120850182612297565b50505050565b61250781612882565b82525050565b61251681612882565b82525050565b600060608201905061253160008301866121cc565b61253e60208301856121cc565b61254b604083018461250d565b949350505050565b6000602082019050818103600083015261256d81846121db565b905092915050565b6000602082019050818103600083015261258f8184612239565b905092915050565b600060208201905081810360008301526125b0816122b5565b9050919050565b600060208201905081810360008301526125d0816122d8565b9050919050565b600060208201905081810360008301526125f0816122fb565b9050919050565b600060208201905081810360008301526126108161231e565b9050919050565b6000602082019050818103600083015261263081612341565b9050919050565b6000602082019050818103600083015261265081612364565b9050919050565b6000602082019050818103600083015261267081612387565b9050919050565b60006020820190508181036000830152612690816123aa565b9050919050565b600060208201905081810360008301526126b0816123cd565b9050919050565b60006020820190506126cc600083018461250d565b92915050565b600060a0820190506126e7600083018861250d565b6126f460208301876121cc565b61270160408301866121cc565b61270e606083018561250d565b61271b60808301846122a6565b9695505050505050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006127b382612882565b91506127be83612882565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156127f3576127f26128d5565b5b828201905092915050565b600061280982612882565b915061281483612882565b925082821015612827576128266128d5565b5b828203905092915050565b600061283d82612862565b9050919050565b600061284f82612862565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061289782612882565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128ca576128c96128d5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f56616c7565206973206c657373207468616e207468652062696464696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f41756374696f6e20686173206e6f7420656e6465642079657400000000000000600082015250565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6d706c65746520746865207075726368617365602082015250565b7f426964206973206c657373207468616e206c617374206269642e000000000000600082015250565b7f5072696365206d75737420626520657175616c20746f206c697374696e67207060008201527f7269636500000000000000000000000000000000000000000000000000000000602082015250565b7f426964206973206c657373207468616e206d696e2e2070726963650000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5072696365206d757374206265206174206c6561737420312077656900000000600082015250565b7f4974656d20616c726561647920736f6c64000000000000000000000000000000600082015250565b612af081612832565b8114612afb57600080fd5b50565b612b0781612856565b8114612b1257600080fd5b50565b612b1e81612882565b8114612b2957600080fd5b5056fea2646970667358221220ada68e58ecd748f5749bfa79af202a8b8a67ef1f3234fe93ab5a7c34f2a5e29264736f6c63430008030033",
  immutableReferences: {},
  generatedSources: [],
  deployedGeneratedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:23412:12",
        statements: [
          {
            body: {
              nodeType: "YulBlock",
              src: "59:87:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "69:29:12",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "91:6:12",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "78:12:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "78:20:12",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "69:5:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "134:5:12",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_t_address",
                      nodeType: "YulIdentifier",
                      src: "107:26:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "107:33:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "107:33:12",
                },
              ],
            },
            name: "abi_decode_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "37:6:12",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "45:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "53:5:12",
                type: "",
              },
            ],
            src: "7:139:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "201:84:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "211:29:12",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "233:6:12",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "220:12:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "220:20:12",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "211:5:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "273:5:12",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_t_bool",
                      nodeType: "YulIdentifier",
                      src: "249:23:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "249:30:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "249:30:12",
                },
              ],
            },
            name: "abi_decode_t_bool",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "179:6:12",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "187:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "195:5:12",
                type: "",
              },
            ],
            src: "152:133:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "343:87:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "353:29:12",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "375:6:12",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "362:12:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "362:20:12",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "353:5:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "418:5:12",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "391:26:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "391:33:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "391:33:12",
                },
              ],
            },
            name: "abi_decode_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "321:6:12",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "329:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "337:5:12",
                type: "",
              },
            ],
            src: "291:139:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "519:324:12",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "565:16:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "574:1:12",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "577:1:12",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "567:6:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "567:12:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "567:12:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "540:7:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "549:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "536:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "536:23:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "561:2:12",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "532:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "532:32:12",
                  },
                  nodeType: "YulIf",
                  src: "529:2:12",
                },
                {
                  nodeType: "YulBlock",
                  src: "591:117:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "606:15:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "620:1:12",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "610:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "635:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "670:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "681:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "666:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "666:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "690:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "645:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "645:53:12",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "635:6:12",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "718:118:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "733:16:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "747:2:12",
                        type: "",
                        value: "32",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "737:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "763:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "798:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "809:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "794:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "794:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "818:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "773:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "773:53:12",
                      },
                      variableNames: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "763:6:12",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "481:9:12",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "492:7:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "504:6:12",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "512:6:12",
                type: "",
              },
            ],
            src: "436:407:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "997:836:12",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1044:16:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1053:1:12",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1056:1:12",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1046:6:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1046:12:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1046:12:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1018:7:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1027:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1014:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1014:23:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1039:3:12",
                        type: "",
                        value: "192",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1010:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1010:33:12",
                  },
                  nodeType: "YulIf",
                  src: "1007:2:12",
                },
                {
                  nodeType: "YulBlock",
                  src: "1070:117:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "1085:15:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1099:1:12",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "1089:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "1114:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "1149:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "1160:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "1145:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1145:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1169:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "1124:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1124:53:12",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "1114:6:12",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "1197:118:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "1212:16:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1226:2:12",
                        type: "",
                        value: "32",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "1216:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "1242:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "1277:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "1288:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "1273:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1273:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1297:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "1252:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1252:53:12",
                      },
                      variableNames: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "1242:6:12",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "1325:118:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "1340:16:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1354:2:12",
                        type: "",
                        value: "64",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "1344:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "1370:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "1405:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "1416:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "1401:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1401:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1425:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "1380:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1380:53:12",
                      },
                      variableNames: [
                        {
                          name: "value2",
                          nodeType: "YulIdentifier",
                          src: "1370:6:12",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "1453:118:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "1468:16:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1482:2:12",
                        type: "",
                        value: "96",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "1472:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "1498:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "1533:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "1544:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "1529:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1529:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1553:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "1508:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1508:53:12",
                      },
                      variableNames: [
                        {
                          name: "value3",
                          nodeType: "YulIdentifier",
                          src: "1498:6:12",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "1581:116:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "1596:17:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1610:3:12",
                        type: "",
                        value: "128",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "1600:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "1627:60:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "1659:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "1670:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "1655:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1655:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1679:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_bool",
                          nodeType: "YulIdentifier",
                          src: "1637:17:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1637:50:12",
                      },
                      variableNames: [
                        {
                          name: "value4",
                          nodeType: "YulIdentifier",
                          src: "1627:6:12",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "1707:119:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "1722:17:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1736:3:12",
                        type: "",
                        value: "160",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "1726:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "1753:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "1788:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "1799:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "1784:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "1784:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1808:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "1763:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1763:53:12",
                      },
                      variableNames: [
                        {
                          name: "value5",
                          nodeType: "YulIdentifier",
                          src: "1753:6:12",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name:
              "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_boolt_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "927:9:12",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "938:7:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "950:6:12",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "958:6:12",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "966:6:12",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "974:6:12",
                type: "",
              },
              {
                name: "value4",
                nodeType: "YulTypedName",
                src: "982:6:12",
                type: "",
              },
              {
                name: "value5",
                nodeType: "YulTypedName",
                src: "990:6:12",
                type: "",
              },
            ],
            src: "849:984:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1905:196:12",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "1951:16:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1960:1:12",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "1963:1:12",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "1953:6:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "1953:12:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "1953:12:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "1926:7:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1935:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1922:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1922:23:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1947:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "1918:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1918:32:12",
                  },
                  nodeType: "YulIf",
                  src: "1915:2:12",
                },
                {
                  nodeType: "YulBlock",
                  src: "1977:117:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "1992:15:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2006:1:12",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "1996:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "2021:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "2056:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "2067:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "2052:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2052:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2076:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "2031:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2031:53:12",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "2021:6:12",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1875:9:12",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "1886:7:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1898:6:12",
                type: "",
              },
            ],
            src: "1839:262:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2207:452:12",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2253:16:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2262:1:12",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2265:1:12",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2255:6:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2255:12:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2255:12:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2228:7:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2237:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "2224:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2224:23:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2249:2:12",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "2220:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2220:32:12",
                  },
                  nodeType: "YulIf",
                  src: "2217:2:12",
                },
                {
                  nodeType: "YulBlock",
                  src: "2279:117:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "2294:15:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2308:1:12",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "2298:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "2323:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "2358:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "2369:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "2354:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2354:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2378:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "2333:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2333:53:12",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "2323:6:12",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "2406:118:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "2421:16:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2435:2:12",
                        type: "",
                        value: "32",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "2425:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "2451:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "2486:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "2497:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "2482:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2482:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2506:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "2461:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2461:53:12",
                      },
                      variableNames: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "2451:6:12",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "2534:118:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "2549:16:12",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2563:2:12",
                        type: "",
                        value: "64",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "2553:6:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "2579:63:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "2614:9:12",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "2625:6:12",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "2610:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2610:22:12",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2634:7:12",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "2589:20:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2589:53:12",
                      },
                      variableNames: [
                        {
                          name: "value2",
                          nodeType: "YulIdentifier",
                          src: "2579:6:12",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_uint256t_uint256t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2161:9:12",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "2172:7:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2184:6:12",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "2192:6:12",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "2200:6:12",
                type: "",
              },
            ],
            src: "2107:552:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2787:141:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "2873:6:12",
                      },
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "2881:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_struct$_Bid_$1725_memory_ptr_to_t_struct$_Bid_$1725_memory_ptr",
                      nodeType: "YulIdentifier",
                      src: "2797:75:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2797:88:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2797:88:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "2894:28:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "2912:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2917:4:12",
                        type: "",
                        value: "0x60",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "2908:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2908:14:12",
                  },
                  variableNames: [
                    {
                      name: "updatedPos",
                      nodeType: "YulIdentifier",
                      src: "2894:10:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encodeUpdatedPos_t_struct$_Bid_$1725_memory_ptr_to_t_struct$_Bid_$1725_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2760:6:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "2768:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "updatedPos",
                nodeType: "YulTypedName",
                src: "2776:10:12",
                type: "",
              },
            ],
            src: "2665:263:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3070:157:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "3170:6:12",
                      },
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "3178:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_struct$_MarketItem_$1718_memory_ptr_to_t_struct$_MarketItem_$1718_memory_ptr",
                      nodeType: "YulIdentifier",
                      src: "3080:89:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3080:102:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3080:102:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "3191:30:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "3209:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3214:6:12",
                        type: "",
                        value: "0x0140",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "3205:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3205:16:12",
                  },
                  variableNames: [
                    {
                      name: "updatedPos",
                      nodeType: "YulIdentifier",
                      src: "3191:10:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encodeUpdatedPos_t_struct$_MarketItem_$1718_memory_ptr_to_t_struct$_MarketItem_$1718_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "3043:6:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "3051:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "updatedPos",
                nodeType: "YulTypedName",
                src: "3059:10:12",
                type: "",
              },
            ],
            src: "2934:293:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3304:61:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "3321:3:12",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "3352:5:12",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_address_payable",
                          nodeType: "YulIdentifier",
                          src: "3326:25:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3326:32:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3314:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3314:45:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3314:45:12",
                },
              ],
            },
            name: "abi_encode_t_address_payable_to_t_address_payable",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "3292:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "3299:3:12",
                type: "",
              },
            ],
            src: "3233:132:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3426:53:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "3443:3:12",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "3466:5:12",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_address",
                          nodeType: "YulIdentifier",
                          src: "3448:17:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3448:24:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3436:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3436:37:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3436:37:12",
                },
              ],
            },
            name: "abi_encode_t_address_to_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "3414:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "3421:3:12",
                type: "",
              },
            ],
            src: "3371:108:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3550:53:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "3567:3:12",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "3590:5:12",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_address",
                          nodeType: "YulIdentifier",
                          src: "3572:17:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3572:24:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3560:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3560:37:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3560:37:12",
                },
              ],
            },
            name: "abi_encode_t_address_to_t_address_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "3538:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "3545:3:12",
                type: "",
              },
            ],
            src: "3485:118:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3831:734:12",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "3841:89:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "3924:5:12",
                      },
                    ],
                    functionName: {
                      name:
                        "array_length_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                      nodeType: "YulIdentifier",
                      src: "3855:68:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3855:75:12",
                  },
                  variables: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "3845:6:12",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "3939:114:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "4041:3:12",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "4046:6:12",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "3946:94:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3946:107:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "3939:3:12",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "4062:92:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "4148:5:12",
                      },
                    ],
                    functionName: {
                      name:
                        "array_dataslot_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                      nodeType: "YulIdentifier",
                      src: "4077:70:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4077:77:12",
                  },
                  variables: [
                    {
                      name: "baseRef",
                      nodeType: "YulTypedName",
                      src: "4066:7:12",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "4163:21:12",
                  value: {
                    name: "baseRef",
                    nodeType: "YulIdentifier",
                    src: "4177:7:12",
                  },
                  variables: [
                    {
                      name: "srcPtr",
                      nodeType: "YulTypedName",
                      src: "4167:6:12",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4253:287:12",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "4267:34:12",
                        value: {
                          arguments: [
                            {
                              name: "srcPtr",
                              nodeType: "YulIdentifier",
                              src: "4294:6:12",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "4288:5:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4288:13:12",
                        },
                        variables: [
                          {
                            name: "elementValue0",
                            nodeType: "YulTypedName",
                            src: "4271:13:12",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "4314:112:12",
                        value: {
                          arguments: [
                            {
                              name: "elementValue0",
                              nodeType: "YulIdentifier",
                              src: "4407:13:12",
                            },
                            {
                              name: "pos",
                              nodeType: "YulIdentifier",
                              src: "4422:3:12",
                            },
                          ],
                          functionName: {
                            name:
                              "abi_encodeUpdatedPos_t_struct$_Bid_$1725_memory_ptr_to_t_struct$_Bid_$1725_memory_ptr",
                            nodeType: "YulIdentifier",
                            src: "4321:85:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4321:105:12",
                        },
                        variableNames: [
                          {
                            name: "pos",
                            nodeType: "YulIdentifier",
                            src: "4314:3:12",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "4439:91:12",
                        value: {
                          arguments: [
                            {
                              name: "srcPtr",
                              nodeType: "YulIdentifier",
                              src: "4523:6:12",
                            },
                          ],
                          functionName: {
                            name:
                              "array_nextElement_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                            nodeType: "YulIdentifier",
                            src: "4449:73:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4449:81:12",
                        },
                        variableNames: [
                          {
                            name: "srcPtr",
                            nodeType: "YulIdentifier",
                            src: "4439:6:12",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "4215:1:12",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "4218:6:12",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "4212:2:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4212:13:12",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "4226:18:12",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "4228:14:12",
                        value: {
                          arguments: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "4237:1:12",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4240:1:12",
                              type: "",
                              value: "1",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "4233:3:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4233:9:12",
                        },
                        variableNames: [
                          {
                            name: "i",
                            nodeType: "YulIdentifier",
                            src: "4228:1:12",
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "4197:14:12",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "4199:10:12",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "4208:1:12",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "i",
                            nodeType: "YulTypedName",
                            src: "4203:1:12",
                            type: "",
                          },
                        ],
                      },
                    ],
                  },
                  src: "4193:347:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4549:10:12",
                  value: {
                    name: "pos",
                    nodeType: "YulIdentifier",
                    src: "4556:3:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "4549:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "3810:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "3817:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "3826:3:12",
                type: "",
              },
            ],
            src: "3665:900:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4821:776:12",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "4831:96:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "4921:5:12",
                      },
                    ],
                    functionName: {
                      name:
                        "array_length_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      nodeType: "YulIdentifier",
                      src: "4845:75:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4845:82:12",
                  },
                  variables: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "4835:6:12",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "4936:121:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5045:3:12",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "5050:6:12",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "4943:101:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4943:114:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "4936:3:12",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5066:99:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "5159:5:12",
                      },
                    ],
                    functionName: {
                      name:
                        "array_dataslot_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      nodeType: "YulIdentifier",
                      src: "5081:77:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5081:84:12",
                  },
                  variables: [
                    {
                      name: "baseRef",
                      nodeType: "YulTypedName",
                      src: "5070:7:12",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5174:21:12",
                  value: {
                    name: "baseRef",
                    nodeType: "YulIdentifier",
                    src: "5188:7:12",
                  },
                  variables: [
                    {
                      name: "srcPtr",
                      nodeType: "YulTypedName",
                      src: "5178:6:12",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5264:308:12",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "5278:34:12",
                        value: {
                          arguments: [
                            {
                              name: "srcPtr",
                              nodeType: "YulIdentifier",
                              src: "5305:6:12",
                            },
                          ],
                          functionName: {
                            name: "mload",
                            nodeType: "YulIdentifier",
                            src: "5299:5:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5299:13:12",
                        },
                        variables: [
                          {
                            name: "elementValue0",
                            nodeType: "YulTypedName",
                            src: "5282:13:12",
                            type: "",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "5325:126:12",
                        value: {
                          arguments: [
                            {
                              name: "elementValue0",
                              nodeType: "YulIdentifier",
                              src: "5432:13:12",
                            },
                            {
                              name: "pos",
                              nodeType: "YulIdentifier",
                              src: "5447:3:12",
                            },
                          ],
                          functionName: {
                            name:
                              "abi_encodeUpdatedPos_t_struct$_MarketItem_$1718_memory_ptr_to_t_struct$_MarketItem_$1718_memory_ptr",
                            nodeType: "YulIdentifier",
                            src: "5332:99:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5332:119:12",
                        },
                        variableNames: [
                          {
                            name: "pos",
                            nodeType: "YulIdentifier",
                            src: "5325:3:12",
                          },
                        ],
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "5464:98:12",
                        value: {
                          arguments: [
                            {
                              name: "srcPtr",
                              nodeType: "YulIdentifier",
                              src: "5555:6:12",
                            },
                          ],
                          functionName: {
                            name:
                              "array_nextElement_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                            nodeType: "YulIdentifier",
                            src: "5474:80:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5474:88:12",
                        },
                        variableNames: [
                          {
                            name: "srcPtr",
                            nodeType: "YulIdentifier",
                            src: "5464:6:12",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "5226:1:12",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "5229:6:12",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "5223:2:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5223:13:12",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "5237:18:12",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "5239:14:12",
                        value: {
                          arguments: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "5248:1:12",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5251:1:12",
                              type: "",
                              value: "1",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "5244:3:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5244:9:12",
                        },
                        variableNames: [
                          {
                            name: "i",
                            nodeType: "YulIdentifier",
                            src: "5239:1:12",
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "5208:14:12",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "5210:10:12",
                        value: {
                          kind: "number",
                          nodeType: "YulLiteral",
                          src: "5219:1:12",
                          type: "",
                          value: "0",
                        },
                        variables: [
                          {
                            name: "i",
                            nodeType: "YulTypedName",
                            src: "5214:1:12",
                            type: "",
                          },
                        ],
                      },
                    ],
                  },
                  src: "5204:368:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "5581:10:12",
                  value: {
                    name: "pos",
                    nodeType: "YulIdentifier",
                    src: "5588:3:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "5581:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "4800:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "4807:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "4816:3:12",
                type: "",
              },
            ],
            src: "4641:956:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5652:50:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5669:3:12",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "5689:5:12",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_bool",
                          nodeType: "YulIdentifier",
                          src: "5674:14:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5674:21:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5662:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5662:34:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5662:34:12",
                },
              ],
            },
            name: "abi_encode_t_bool_to_t_bool",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "5640:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "5647:3:12",
                type: "",
              },
            ],
            src: "5603:99:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5767:50:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "5784:3:12",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "5804:5:12",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_bool",
                          nodeType: "YulIdentifier",
                          src: "5789:14:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5789:21:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5777:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5777:34:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5777:34:12",
                },
              ],
            },
            name: "abi_encode_t_bool_to_t_bool_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "5755:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "5762:3:12",
                type: "",
              },
            ],
            src: "5708:109:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5969:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "5979:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6045:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6050:2:12",
                        type: "",
                        value: "36",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "5986:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5986:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "5979:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6151:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae",
                      nodeType: "YulIdentifier",
                      src: "6062:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6062:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6062:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "6164:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6175:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6180:2:12",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "6171:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6171:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "6164:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "5957:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "5965:3:12",
                type: "",
              },
            ],
            src: "5823:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6341:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "6351:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6417:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6422:2:12",
                        type: "",
                        value: "25",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "6358:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6358:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "6351:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6523:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1",
                      nodeType: "YulIdentifier",
                      src: "6434:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6434:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6434:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "6536:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6547:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6552:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "6543:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6543:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "6536:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "6329:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "6337:3:12",
                type: "",
              },
            ],
            src: "6195:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6713:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "6723:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6789:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6794:2:12",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "6730:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6730:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "6723:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6895:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564",
                      nodeType: "YulIdentifier",
                      src: "6806:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6806:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6806:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "6908:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6919:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6924:2:12",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "6915:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6915:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "6908:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "6701:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "6709:3:12",
                type: "",
              },
            ],
            src: "6567:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7085:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "7095:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7161:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7166:2:12",
                        type: "",
                        value: "26",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "7102:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7102:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "7095:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7267:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274",
                      nodeType: "YulIdentifier",
                      src: "7178:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7178:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7178:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "7280:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7291:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7296:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "7287:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7287:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "7280:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "7073:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "7081:3:12",
                type: "",
              },
            ],
            src: "6939:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7457:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "7467:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7533:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7538:2:12",
                        type: "",
                        value: "36",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "7474:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7474:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "7467:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7639:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1",
                      nodeType: "YulIdentifier",
                      src: "7550:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7550:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7550:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "7652:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7663:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7668:2:12",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "7659:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7659:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "7652:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "7445:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "7453:3:12",
                type: "",
              },
            ],
            src: "7311:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7829:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "7839:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7905:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7910:2:12",
                        type: "",
                        value: "27",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "7846:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7846:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "7839:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8011:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831",
                      nodeType: "YulIdentifier",
                      src: "7922:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7922:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7922:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8024:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8035:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8040:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "8031:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8031:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "8024:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "7817:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "7825:3:12",
                type: "",
              },
            ],
            src: "7683:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8201:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "8211:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8277:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8282:2:12",
                        type: "",
                        value: "31",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "8218:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8218:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "8211:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8383:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                      nodeType: "YulIdentifier",
                      src: "8294:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8294:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8294:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8396:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8407:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8412:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "8403:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8403:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "8396:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "8189:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "8197:3:12",
                type: "",
              },
            ],
            src: "8055:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8573:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "8583:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8649:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8654:2:12",
                        type: "",
                        value: "28",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "8590:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8590:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "8583:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8755:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                      nodeType: "YulIdentifier",
                      src: "8666:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8666:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8666:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8768:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "8779:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8784:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "8775:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8775:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "8768:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "8561:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "8569:3:12",
                type: "",
              },
            ],
            src: "8427:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8945:220:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "8955:74:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "9021:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9026:2:12",
                        type: "",
                        value: "17",
                      },
                    ],
                    functionName: {
                      name:
                        "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "8962:58:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8962:67:12",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "8955:3:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "9127:3:12",
                      },
                    ],
                    functionName: {
                      name:
                        "store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
                      nodeType: "YulIdentifier",
                      src: "9038:88:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9038:93:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "9038:93:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "9140:19:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "9151:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9156:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "9147:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9147:12:12",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "9140:3:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "8933:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "8941:3:12",
                type: "",
              },
            ],
            src: "8799:366:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9321:567:12",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "9331:26:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "9347:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9352:4:12",
                        type: "",
                        value: "0x60",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "9343:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9343:14:12",
                  },
                  variables: [
                    {
                      name: "tail",
                      nodeType: "YulTypedName",
                      src: "9335:4:12",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "9367:166:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "9404:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "9434:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9441:4:12",
                                type: "",
                                value: "0x00",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9430:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9430:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "9424:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9424:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "9408:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "9494:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "9512:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9517:4:12",
                                type: "",
                                value: "0x00",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9508:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9508:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_uint256_to_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "9460:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9460:63:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "9460:63:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "9543:163:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "9577:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "9607:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9614:4:12",
                                type: "",
                                value: "0x20",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9603:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9603:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "9597:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9597:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "9581:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "9667:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "9685:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9690:4:12",
                                type: "",
                                value: "0x20",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9681:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9681:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_uint256_to_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "9633:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9633:63:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "9633:63:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "9716:165:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "9752:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "9782:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9789:4:12",
                                type: "",
                                value: "0x40",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9778:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9778:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "9772:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9772:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "9756:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "9842:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "9860:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9865:4:12",
                                type: "",
                                value: "0x40",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9856:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9856:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_address_to_t_address",
                          nodeType: "YulIdentifier",
                          src: "9808:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9808:63:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "9808:63:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_struct$_Bid_$1725_memory_ptr_to_t_struct$_Bid_$1725_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "9308:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "9315:3:12",
                type: "",
              },
            ],
            src: "9223:665:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "10072:1842:12",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "10082:28:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "10098:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10103:6:12",
                        type: "",
                        value: "0x0140",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "10094:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10094:16:12",
                  },
                  variables: [
                    {
                      name: "tail",
                      nodeType: "YulTypedName",
                      src: "10086:4:12",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "10120:166:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "10157:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "10187:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10194:4:12",
                                type: "",
                                value: "0x00",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10183:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10183:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "10177:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10177:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "10161:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "10247:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "10265:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10270:4:12",
                                type: "",
                                value: "0x00",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10261:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10261:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_uint256_to_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "10213:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10213:63:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "10213:63:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "10296:171:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "10338:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "10368:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10375:4:12",
                                type: "",
                                value: "0x20",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10364:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10364:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "10358:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10358:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "10342:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "10428:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "10446:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10451:4:12",
                                type: "",
                                value: "0x20",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10442:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10442:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_address_to_t_address",
                          nodeType: "YulIdentifier",
                          src: "10394:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10394:63:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "10394:63:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "10477:167:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "10515:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "10545:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10552:4:12",
                                type: "",
                                value: "0x40",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10541:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10541:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "10535:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10535:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "10519:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "10605:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "10623:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10628:4:12",
                                type: "",
                                value: "0x40",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10619:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10619:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_uint256_to_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "10571:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10571:63:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "10571:63:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "10654:168:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "10693:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "10723:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10730:4:12",
                                type: "",
                                value: "0x60",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10719:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10719:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "10713:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10713:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "10697:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "10783:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "10801:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10806:4:12",
                                type: "",
                                value: "0x60",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10797:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10797:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_uint256_to_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "10749:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10749:63:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "10749:63:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "10832:182:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "10869:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "10899:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10906:4:12",
                                type: "",
                                value: "0x80",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10895:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10895:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "10889:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10889:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "10873:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "10975:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "10993:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "10998:4:12",
                                type: "",
                                value: "0x80",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10989:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10989:14:12",
                          },
                        ],
                        functionName: {
                          name:
                            "abi_encode_t_address_payable_to_t_address_payable",
                          nodeType: "YulIdentifier",
                          src: "10925:49:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10925:79:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "10925:79:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "11024:181:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "11060:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "11090:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11097:4:12",
                                type: "",
                                value: "0xa0",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11086:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11086:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "11080:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11080:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "11064:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "11166:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "11184:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11189:4:12",
                                type: "",
                                value: "0xa0",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11180:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11180:14:12",
                          },
                        ],
                        functionName: {
                          name:
                            "abi_encode_t_address_payable_to_t_address_payable",
                          nodeType: "YulIdentifier",
                          src: "11116:49:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11116:79:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "11116:79:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "11215:165:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "11251:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "11281:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11288:4:12",
                                type: "",
                                value: "0xc0",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11277:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11277:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "11271:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11271:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "11255:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "11341:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "11359:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11364:4:12",
                                type: "",
                                value: "0xc0",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11355:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11355:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_uint256_to_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "11307:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11307:63:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "11307:63:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "11390:163:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "11430:43:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "11460:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11467:4:12",
                                type: "",
                                value: "0xe0",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11456:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11456:16:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "11450:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11450:23:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "11434:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "11514:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "11532:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11537:4:12",
                                type: "",
                                value: "0xe0",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11528:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11528:14:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_bool_to_t_bool",
                          nodeType: "YulIdentifier",
                          src: "11486:27:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11486:57:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "11486:57:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "11563:172:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "11602:45:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "11632:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11639:6:12",
                                type: "",
                                value: "0x0100",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11628:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11628:18:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "11622:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11622:25:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "11606:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "11694:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "11712:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11717:6:12",
                                type: "",
                                value: "0x0100",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11708:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11708:16:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_uint256_to_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "11660:33:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11660:65:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "11660:65:12",
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "11745:162:12",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "11780:45:12",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "11810:5:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11817:6:12",
                                type: "",
                                value: "0x0120",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11806:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11806:18:12",
                          },
                        ],
                        functionName: {
                          name: "mload",
                          nodeType: "YulIdentifier",
                          src: "11800:5:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11800:25:12",
                      },
                      variables: [
                        {
                          name: "memberValue0",
                          nodeType: "YulTypedName",
                          src: "11784:12:12",
                          type: "",
                        },
                      ],
                    },
                    {
                      expression: {
                        arguments: [
                          {
                            name: "memberValue0",
                            nodeType: "YulIdentifier",
                            src: "11866:12:12",
                          },
                          {
                            arguments: [
                              {
                                name: "pos",
                                nodeType: "YulIdentifier",
                                src: "11884:3:12",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "11889:6:12",
                                type: "",
                                value: "0x0120",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "11880:3:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "11880:16:12",
                          },
                        ],
                        functionName: {
                          name: "abi_encode_t_bool_to_t_bool",
                          nodeType: "YulIdentifier",
                          src: "11838:27:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11838:59:12",
                      },
                      nodeType: "YulExpressionStatement",
                      src: "11838:59:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_t_struct$_MarketItem_$1718_memory_ptr_to_t_struct$_MarketItem_$1718_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "10059:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "10066:3:12",
                type: "",
              },
            ],
            src: "9960:1954:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "11975:53:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "11992:3:12",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "12015:5:12",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "11997:17:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11997:24:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11985:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11985:37:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11985:37:12",
                },
              ],
            },
            name: "abi_encode_t_uint256_to_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "11963:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "11970:3:12",
                type: "",
              },
            ],
            src: "11920:108:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12099:53:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "12116:3:12",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "12139:5:12",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "12121:17:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12121:24:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12109:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12109:37:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12109:37:12",
                },
              ],
            },
            name: "abi_encode_t_uint256_to_t_uint256_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "12087:5:12",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "12094:3:12",
                type: "",
              },
            ],
            src: "12034:118:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12312:288:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "12322:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "12334:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12345:2:12",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "12330:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12330:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "12322:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "12402:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12415:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12426:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12411:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12411:17:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_address_to_t_address_fromStack",
                      nodeType: "YulIdentifier",
                      src: "12358:43:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12358:71:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12358:71:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "12483:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12496:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12507:2:12",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12492:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12492:18:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_address_to_t_address_fromStack",
                      nodeType: "YulIdentifier",
                      src: "12439:43:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12439:72:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12439:72:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value2",
                        nodeType: "YulIdentifier",
                        src: "12565:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12578:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12589:2:12",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12574:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12574:18:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                      nodeType: "YulIdentifier",
                      src: "12521:43:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12521:72:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12521:72:12",
                },
              ],
            },
            name:
              "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "12268:9:12",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "12280:6:12",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "12288:6:12",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "12296:6:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "12307:4:12",
                type: "",
              },
            ],
            src: "12158:442:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12796:267:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "12806:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "12818:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12829:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "12814:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12814:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "12806:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12853:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12864:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12849:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12849:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "12872:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12878:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "12868:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12868:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12842:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12842:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12842:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "12898:158:12",
                  value: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "13042:6:12",
                      },
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "13051:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "12906:135:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12906:150:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "12898:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "12768:9:12",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "12780:6:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "12791:4:12",
                type: "",
              },
            ],
            src: "12606:457:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "13273:281:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "13283:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "13295:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13306:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "13291:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13291:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13283:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13330:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13341:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13326:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13326:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "13349:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13355:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "13345:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13345:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13319:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13319:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13319:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "13375:172:12",
                  value: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "13533:6:12",
                      },
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "13542:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "13383:149:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13383:164:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13375:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "13245:9:12",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "13257:6:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "13268:4:12",
                type: "",
              },
            ],
            src: "13069:485:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "13731:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "13741:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "13753:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13764:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "13749:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13749:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13741:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13788:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13799:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13784:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13784:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "13807:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13813:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "13803:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13803:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13777:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13777:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13777:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "13833:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "13967:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "13841:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13841:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13833:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "13711:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "13726:4:12",
                type: "",
              },
            ],
            src: "13560:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "14156:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "14166:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "14178:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14189:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "14174:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14174:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "14166:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14213:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14224:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14209:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14209:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "14232:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14238:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "14228:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14228:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14202:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14202:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14202:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "14258:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14392:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "14266:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14266:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "14258:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "14136:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "14151:4:12",
                type: "",
              },
            ],
            src: "13985:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "14581:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "14591:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "14603:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14614:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "14599:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14599:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "14591:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14638:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14649:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14634:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14634:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "14657:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14663:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "14653:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14653:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14627:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14627:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14627:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "14683:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14817:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "14691:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14691:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "14683:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "14561:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "14576:4:12",
                type: "",
              },
            ],
            src: "14410:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "15006:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "15016:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15028:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15039:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "15024:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15024:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15016:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15063:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15074:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15059:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15059:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "15082:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15088:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "15078:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15078:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15052:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15052:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15052:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "15108:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "15242:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "15116:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15116:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15108:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "14986:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "15001:4:12",
                type: "",
              },
            ],
            src: "14835:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "15431:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "15441:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15453:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15464:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "15449:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15449:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15441:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15488:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15499:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15484:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15484:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "15507:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15513:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "15503:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15503:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15477:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15477:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15477:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "15533:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "15667:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "15541:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15541:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15533:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "15411:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "15426:4:12",
                type: "",
              },
            ],
            src: "15260:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "15856:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "15866:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15878:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15889:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "15874:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15874:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15866:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15913:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15924:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15909:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15909:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "15932:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15938:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "15928:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15928:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15902:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15902:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15902:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "15958:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "16092:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "15966:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15966:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15958:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "15836:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "15851:4:12",
                type: "",
              },
            ],
            src: "15685:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "16281:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "16291:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "16303:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16314:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "16299:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16299:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "16291:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16338:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16349:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16334:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16334:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "16357:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16363:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "16353:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16353:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16327:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16327:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16327:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "16383:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "16517:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "16391:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16391:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "16383:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "16261:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "16276:4:12",
                type: "",
              },
            ],
            src: "16110:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "16706:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "16716:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "16728:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16739:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "16724:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16724:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "16716:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16763:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16774:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16759:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16759:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "16782:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16788:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "16778:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16778:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16752:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16752:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16752:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "16808:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "16942:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "16816:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16816:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "16808:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "16686:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "16701:4:12",
                type: "",
              },
            ],
            src: "16535:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17131:248:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "17141:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17153:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17164:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "17149:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17149:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17141:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17188:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17199:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17184:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17184:17:12",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "17207:4:12",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17213:9:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "17203:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17203:20:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17177:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17177:47:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17177:47:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "17233:139:12",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "17367:4:12",
                      },
                    ],
                    functionName: {
                      name:
                        "abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "17241:124:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17241:131:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17233:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "abi_encode_tuple_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "17111:9:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "17126:4:12",
                type: "",
              },
            ],
            src: "16960:419:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17483:124:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "17493:26:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17505:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17516:2:12",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "17501:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17501:18:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17493:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "17573:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17586:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17597:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17582:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17582:17:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                      nodeType: "YulIdentifier",
                      src: "17529:43:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17529:71:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17529:71:12",
                },
              ],
            },
            name:
              "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "17455:9:12",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "17467:6:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "17478:4:12",
                type: "",
              },
            ],
            src: "17385:222:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17817:448:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "17827:27:12",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17839:9:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17850:3:12",
                        type: "",
                        value: "160",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "17835:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17835:19:12",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17827:4:12",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "17908:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17921:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17932:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17917:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17917:17:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                      nodeType: "YulIdentifier",
                      src: "17864:43:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17864:71:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17864:71:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value1",
                        nodeType: "YulIdentifier",
                        src: "17989:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "18002:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "18013:2:12",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17998:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17998:18:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_address_to_t_address_fromStack",
                      nodeType: "YulIdentifier",
                      src: "17945:43:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17945:72:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17945:72:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value2",
                        nodeType: "YulIdentifier",
                        src: "18071:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "18084:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "18095:2:12",
                            type: "",
                            value: "64",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "18080:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18080:18:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_address_to_t_address_fromStack",
                      nodeType: "YulIdentifier",
                      src: "18027:43:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18027:72:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "18027:72:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value3",
                        nodeType: "YulIdentifier",
                        src: "18153:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "18166:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "18177:2:12",
                            type: "",
                            value: "96",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "18162:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18162:18:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                      nodeType: "YulIdentifier",
                      src: "18109:43:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18109:72:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "18109:72:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value4",
                        nodeType: "YulIdentifier",
                        src: "18229:6:12",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "18242:9:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "18253:3:12",
                            type: "",
                            value: "128",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "18238:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18238:19:12",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_bool_to_t_bool_fromStack",
                      nodeType: "YulIdentifier",
                      src: "18191:37:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18191:67:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "18191:67:12",
                },
              ],
            },
            name:
              "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_bool__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "17757:9:12",
                type: "",
              },
              {
                name: "value4",
                nodeType: "YulTypedName",
                src: "17769:6:12",
                type: "",
              },
              {
                name: "value3",
                nodeType: "YulTypedName",
                src: "17777:6:12",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "17785:6:12",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "17793:6:12",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "17801:6:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "17812:4:12",
                type: "",
              },
            ],
            src: "17613:652:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18364:60:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18374:11:12",
                  value: {
                    name: "ptr",
                    nodeType: "YulIdentifier",
                    src: "18382:3:12",
                  },
                  variableNames: [
                    {
                      name: "data",
                      nodeType: "YulIdentifier",
                      src: "18374:4:12",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "18395:22:12",
                  value: {
                    arguments: [
                      {
                        name: "ptr",
                        nodeType: "YulIdentifier",
                        src: "18407:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "18412:4:12",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "18403:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18403:14:12",
                  },
                  variableNames: [
                    {
                      name: "data",
                      nodeType: "YulIdentifier",
                      src: "18395:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "array_dataslot_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "ptr",
                nodeType: "YulTypedName",
                src: "18351:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "data",
                nodeType: "YulTypedName",
                src: "18359:4:12",
                type: "",
              },
            ],
            src: "18271:153:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18530:60:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18540:11:12",
                  value: {
                    name: "ptr",
                    nodeType: "YulIdentifier",
                    src: "18548:3:12",
                  },
                  variableNames: [
                    {
                      name: "data",
                      nodeType: "YulIdentifier",
                      src: "18540:4:12",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "18561:22:12",
                  value: {
                    arguments: [
                      {
                        name: "ptr",
                        nodeType: "YulIdentifier",
                        src: "18573:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "18578:4:12",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "18569:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18569:14:12",
                  },
                  variableNames: [
                    {
                      name: "data",
                      nodeType: "YulIdentifier",
                      src: "18561:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "array_dataslot_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "ptr",
                nodeType: "YulTypedName",
                src: "18517:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "data",
                nodeType: "YulTypedName",
                src: "18525:4:12",
                type: "",
              },
            ],
            src: "18430:160:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18691:40:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18702:22:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "18718:5:12",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "18712:5:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18712:12:12",
                  },
                  variableNames: [
                    {
                      name: "length",
                      nodeType: "YulIdentifier",
                      src: "18702:6:12",
                    },
                  ],
                },
              ],
            },
            name:
              "array_length_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "18674:5:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "18684:6:12",
                type: "",
              },
            ],
            src: "18596:135:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18839:40:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18850:22:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "18866:5:12",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "18860:5:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18860:12:12",
                  },
                  variableNames: [
                    {
                      name: "length",
                      nodeType: "YulIdentifier",
                      src: "18850:6:12",
                    },
                  ],
                },
              ],
            },
            name:
              "array_length_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "18822:5:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "18832:6:12",
                type: "",
              },
            ],
            src: "18737:142:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18981:38:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18991:22:12",
                  value: {
                    arguments: [
                      {
                        name: "ptr",
                        nodeType: "YulIdentifier",
                        src: "19003:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19008:4:12",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "18999:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18999:14:12",
                  },
                  variableNames: [
                    {
                      name: "next",
                      nodeType: "YulIdentifier",
                      src: "18991:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "array_nextElement_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "ptr",
                nodeType: "YulTypedName",
                src: "18968:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "next",
                nodeType: "YulTypedName",
                src: "18976:4:12",
                type: "",
              },
            ],
            src: "18885:134:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19128:38:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "19138:22:12",
                  value: {
                    arguments: [
                      {
                        name: "ptr",
                        nodeType: "YulIdentifier",
                        src: "19150:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19155:4:12",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "19146:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19146:14:12",
                  },
                  variableNames: [
                    {
                      name: "next",
                      nodeType: "YulIdentifier",
                      src: "19138:4:12",
                    },
                  ],
                },
              ],
            },
            name:
              "array_nextElement_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "ptr",
                nodeType: "YulTypedName",
                src: "19115:3:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "next",
                nodeType: "YulTypedName",
                src: "19123:4:12",
                type: "",
              },
            ],
            src: "19025:141:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19304:73:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19321:3:12",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "19326:6:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19314:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19314:19:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19314:19:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "19342:29:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19361:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19366:4:12",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "19357:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19357:14:12",
                  },
                  variableNames: [
                    {
                      name: "updated_pos",
                      nodeType: "YulIdentifier",
                      src: "19342:11:12",
                    },
                  ],
                },
              ],
            },
            name:
              "array_storeLengthForEncoding_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "19276:3:12",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "19281:6:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "updated_pos",
                nodeType: "YulTypedName",
                src: "19292:11:12",
                type: "",
              },
            ],
            src: "19172:205:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19522:73:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19539:3:12",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "19544:6:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19532:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19532:19:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19532:19:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "19560:29:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19579:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19584:4:12",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "19575:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19575:14:12",
                  },
                  variableNames: [
                    {
                      name: "updated_pos",
                      nodeType: "YulIdentifier",
                      src: "19560:11:12",
                    },
                  ],
                },
              ],
            },
            name:
              "array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "19494:3:12",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "19499:6:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "updated_pos",
                nodeType: "YulTypedName",
                src: "19510:11:12",
                type: "",
              },
            ],
            src: "19383:212:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19697:73:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19714:3:12",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "19719:6:12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19707:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19707:19:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19707:19:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "19735:29:12",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19754:3:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19759:4:12",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "19750:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19750:14:12",
                  },
                  variableNames: [
                    {
                      name: "updated_pos",
                      nodeType: "YulIdentifier",
                      src: "19735:11:12",
                    },
                  ],
                },
              ],
            },
            name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "19669:3:12",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "19674:6:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "updated_pos",
                nodeType: "YulTypedName",
                src: "19685:11:12",
                type: "",
              },
            ],
            src: "19601:169:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19820:261:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "19830:25:12",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "19853:1:12",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "19835:17:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19835:20:12",
                  },
                  variableNames: [
                    {
                      name: "x",
                      nodeType: "YulIdentifier",
                      src: "19830:1:12",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "19864:25:12",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "19887:1:12",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "19869:17:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19869:20:12",
                  },
                  variableNames: [
                    {
                      name: "y",
                      nodeType: "YulIdentifier",
                      src: "19864:1:12",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "20027:22:12",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "20029:16:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "20029:18:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "20029:18:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "19948:1:12",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19955:66:12",
                            type: "",
                            value:
                              "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                          },
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "20023:1:12",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "19951:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19951:74:12",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "19945:2:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19945:81:12",
                  },
                  nodeType: "YulIf",
                  src: "19942:2:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "20059:16:12",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "20070:1:12",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "20073:1:12",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "20066:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20066:9:12",
                  },
                  variableNames: [
                    {
                      name: "sum",
                      nodeType: "YulIdentifier",
                      src: "20059:3:12",
                    },
                  ],
                },
              ],
            },
            name: "checked_add_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "19807:1:12",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "19810:1:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "sum",
                nodeType: "YulTypedName",
                src: "19816:3:12",
                type: "",
              },
            ],
            src: "19776:305:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20132:146:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20142:25:12",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "20165:1:12",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "20147:17:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20147:20:12",
                  },
                  variableNames: [
                    {
                      name: "x",
                      nodeType: "YulIdentifier",
                      src: "20142:1:12",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "20176:25:12",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "20199:1:12",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "20181:17:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20181:20:12",
                  },
                  variableNames: [
                    {
                      name: "y",
                      nodeType: "YulIdentifier",
                      src: "20176:1:12",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "20223:22:12",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "20225:16:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "20225:18:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "20225:18:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "20217:1:12",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "20220:1:12",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "20214:2:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20214:8:12",
                  },
                  nodeType: "YulIf",
                  src: "20211:2:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "20255:17:12",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "20267:1:12",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "20270:1:12",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "20263:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20263:9:12",
                  },
                  variableNames: [
                    {
                      name: "diff",
                      nodeType: "YulIdentifier",
                      src: "20255:4:12",
                    },
                  ],
                },
              ],
            },
            name: "checked_sub_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "20118:1:12",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "20121:1:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "diff",
                nodeType: "YulTypedName",
                src: "20127:4:12",
                type: "",
              },
            ],
            src: "20087:191:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20329:51:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20339:35:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "20368:5:12",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint160",
                      nodeType: "YulIdentifier",
                      src: "20350:17:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20350:24:12",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "20339:7:12",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20311:5:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "20321:7:12",
                type: "",
              },
            ],
            src: "20284:96:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20439:51:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20449:35:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "20478:5:12",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint160",
                      nodeType: "YulIdentifier",
                      src: "20460:17:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20460:24:12",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "20449:7:12",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_address_payable",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20421:5:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "20431:7:12",
                type: "",
              },
            ],
            src: "20386:104:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20538:48:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20548:32:12",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "20573:5:12",
                          },
                        ],
                        functionName: {
                          name: "iszero",
                          nodeType: "YulIdentifier",
                          src: "20566:6:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "20566:13:12",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "20559:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20559:21:12",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "20548:7:12",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_bool",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20520:5:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "20530:7:12",
                type: "",
              },
            ],
            src: "20496:90:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20637:81:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20647:65:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "20662:5:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "20669:42:12",
                        type: "",
                        value: "0xffffffffffffffffffffffffffffffffffffffff",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "20658:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20658:54:12",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "20647:7:12",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_uint160",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20619:5:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "20629:7:12",
                type: "",
              },
            ],
            src: "20592:126:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20769:32:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20779:16:12",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "20790:5:12",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "20779:7:12",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20751:5:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "20761:7:12",
                type: "",
              },
            ],
            src: "20724:77:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20850:190:12",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20860:33:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "20887:5:12",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "20869:17:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20869:24:12",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "20860:5:12",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "20983:22:12",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "20985:16:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "20985:18:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "20985:18:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "20908:5:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "20915:66:12",
                        type: "",
                        value:
                          "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                      },
                    ],
                    functionName: {
                      name: "eq",
                      nodeType: "YulIdentifier",
                      src: "20905:2:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20905:77:12",
                  },
                  nodeType: "YulIf",
                  src: "20902:2:12",
                },
                {
                  nodeType: "YulAssignment",
                  src: "21014:20:12",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "21025:5:12",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21032:1:12",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "21021:3:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21021:13:12",
                  },
                  variableNames: [
                    {
                      name: "ret",
                      nodeType: "YulIdentifier",
                      src: "21014:3:12",
                    },
                  ],
                },
              ],
            },
            name: "increment_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20836:5:12",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "ret",
                nodeType: "YulTypedName",
                src: "20846:3:12",
                type: "",
              },
            ],
            src: "20807:233:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "21074:152:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21091:1:12",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21094:77:12",
                        type: "",
                        value:
                          "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21084:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21084:88:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21084:88:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21188:1:12",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21191:4:12",
                        type: "",
                        value: "0x11",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21181:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21181:15:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21181:15:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21212:1:12",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21215:4:12",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "21205:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21205:15:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21205:15:12",
                },
              ],
            },
            name: "panic_error_0x11",
            nodeType: "YulFunctionDefinition",
            src: "21046:180:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "21338:117:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "21360:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "21368:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "21356:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "21356:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "21372:34:12",
                        type: "",
                        value: "Value is less than the bidding p",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21349:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21349:58:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21349:58:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "21428:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "21436:2:12",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "21424:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "21424:15:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "21441:6:12",
                        type: "",
                        value: "rice",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21417:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21417:31:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21417:31:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "21330:6:12",
                type: "",
              },
            ],
            src: "21232:223:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "21567:69:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "21589:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "21597:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "21585:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "21585:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "21601:27:12",
                        type: "",
                        value: "Auction has not ended yet",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21578:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21578:51:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21578:51:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "21559:6:12",
                type: "",
              },
            ],
            src: "21461:175:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "21748:145:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "21770:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "21778:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "21766:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "21766:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "21782:34:12",
                        type: "",
                        value: "Please submit the asking price i",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21759:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21759:58:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21759:58:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "21838:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "21846:2:12",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "21834:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "21834:15:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "21851:34:12",
                        type: "",
                        value: "n order to complete the purchase",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21827:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21827:59:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21827:59:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "21740:6:12",
                type: "",
              },
            ],
            src: "21642:251:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22005:70:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22027:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22035:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22023:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22023:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "22039:28:12",
                        type: "",
                        value: "Bid is less than last bid.",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22016:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22016:52:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22016:52:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "21997:6:12",
                type: "",
              },
            ],
            src: "21899:176:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22187:117:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22209:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22217:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22205:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22205:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "22221:34:12",
                        type: "",
                        value: "Price must be equal to listing p",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22198:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22198:58:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22198:58:12",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22277:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22285:2:12",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22273:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22273:15:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "22290:6:12",
                        type: "",
                        value: "rice",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22266:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22266:31:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22266:31:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "22179:6:12",
                type: "",
              },
            ],
            src: "22081:223:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22416:71:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22438:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22446:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22434:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22434:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "22450:29:12",
                        type: "",
                        value: "Bid is less than min. price",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22427:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22427:53:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22427:53:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "22408:6:12",
                type: "",
              },
            ],
            src: "22310:177:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22599:75:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22621:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22629:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22617:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22617:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "22633:33:12",
                        type: "",
                        value: "ReentrancyGuard: reentrant call",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22610:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22610:57:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22610:57:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "22591:6:12",
                type: "",
              },
            ],
            src: "22493:181:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22786:72:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22808:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22816:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22804:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22804:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "22820:30:12",
                        type: "",
                        value: "Price must be at least 1 wei",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22797:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22797:54:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22797:54:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "22778:6:12",
                type: "",
              },
            ],
            src: "22680:178:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22970:61:12",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22992:6:12",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "23000:1:12",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22988:3:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22988:14:12",
                      },
                      {
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "23004:19:12",
                        type: "",
                        value: "Item already sold",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22981:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22981:43:12",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22981:43:12",
                },
              ],
            },
            name:
              "store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "22962:6:12",
                type: "",
              },
            ],
            src: "22864:167:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "23080:79:12",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "23137:16:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23146:1:12",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23149:1:12",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "23139:6:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "23139:12:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "23139:12:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "23103:5:12",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "23128:5:12",
                              },
                            ],
                            functionName: {
                              name: "cleanup_t_address",
                              nodeType: "YulIdentifier",
                              src: "23110:17:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "23110:24:12",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "23100:2:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "23100:35:12",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "23093:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23093:43:12",
                  },
                  nodeType: "YulIf",
                  src: "23090:2:12",
                },
              ],
            },
            name: "validator_revert_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "23073:5:12",
                type: "",
              },
            ],
            src: "23037:122:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "23205:76:12",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "23259:16:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23268:1:12",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23271:1:12",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "23261:6:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "23261:12:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "23261:12:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "23228:5:12",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "23250:5:12",
                              },
                            ],
                            functionName: {
                              name: "cleanup_t_bool",
                              nodeType: "YulIdentifier",
                              src: "23235:14:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "23235:21:12",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "23225:2:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "23225:32:12",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "23218:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23218:40:12",
                  },
                  nodeType: "YulIf",
                  src: "23215:2:12",
                },
              ],
            },
            name: "validator_revert_t_bool",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "23198:5:12",
                type: "",
              },
            ],
            src: "23165:116:12",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "23330:79:12",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "23387:16:12",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23396:1:12",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "23399:1:12",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "23389:6:12",
                          },
                          nodeType: "YulFunctionCall",
                          src: "23389:12:12",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "23389:12:12",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "23353:5:12",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "23378:5:12",
                              },
                            ],
                            functionName: {
                              name: "cleanup_t_uint256",
                              nodeType: "YulIdentifier",
                              src: "23360:17:12",
                            },
                            nodeType: "YulFunctionCall",
                            src: "23360:24:12",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "23350:2:12",
                        },
                        nodeType: "YulFunctionCall",
                        src: "23350:35:12",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "23343:6:12",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23343:43:12",
                  },
                  nodeType: "YulIf",
                  src: "23340:2:12",
                },
              ],
            },
            name: "validator_revert_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "23323:5:12",
                type: "",
              },
            ],
            src: "23287:122:12",
          },
        ],
      },
      contents:
        '{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_boolt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Bid_$1725_memory_ptr_to_t_struct$_Bid_$1725_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Bid_$1725_memory_ptr_to_t_struct$_Bid_$1725_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_MarketItem_$1718_memory_ptr_to_t_struct$_MarketItem_$1718_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_MarketItem_$1718_memory_ptr_to_t_struct$_MarketItem_$1718_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x0140)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct NFTMarket.Bid[] -> struct NFTMarket.Bid[]\n    function abi_encode_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Bid_$1725_memory_ptr_to_t_struct$_Bid_$1725_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct NFTMarket.MarketItem[] -> struct NFTMarket.MarketItem[]\n    function abi_encode_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_MarketItem_$1718_memory_ptr_to_t_struct$_MarketItem_$1718_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f(pos)\n        end := add(pos, 32)\n    }\n\n    // struct NFTMarket.Bid -> struct NFTMarket.Bid\n    function abi_encode_t_struct$_Bid_$1725_memory_ptr_to_t_struct$_Bid_$1725_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // itemId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // bid\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // buyer\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    // struct NFTMarket.MarketItem -> struct NFTMarket.MarketItem\n    function abi_encode_t_struct$_MarketItem_$1718_memory_ptr_to_t_struct$_MarketItem_$1718_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // itemId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // nftContract\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // sellerId\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // isAuction\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // sellDate\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // sold\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0120))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae(memPtr) {\n\n        mstore(add(memPtr, 0), "Value is less than the bidding p")\n\n        mstore(add(memPtr, 32), "rice")\n\n    }\n\n    function store_literal_in_memory_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1(memPtr) {\n\n        mstore(add(memPtr, 0), "Auction has not ended yet")\n\n    }\n\n    function store_literal_in_memory_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564(memPtr) {\n\n        mstore(add(memPtr, 0), "Please submit the asking price i")\n\n        mstore(add(memPtr, 32), "n order to complete the purchase")\n\n    }\n\n    function store_literal_in_memory_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274(memPtr) {\n\n        mstore(add(memPtr, 0), "Bid is less than last bid.")\n\n    }\n\n    function store_literal_in_memory_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1(memPtr) {\n\n        mstore(add(memPtr, 0), "Price must be equal to listing p")\n\n        mstore(add(memPtr, 32), "rice")\n\n    }\n\n    function store_literal_in_memory_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831(memPtr) {\n\n        mstore(add(memPtr, 0), "Bid is less than min. price")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), "ReentrancyGuard: reentrant call")\n\n    }\n\n    function store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(memPtr) {\n\n        mstore(add(memPtr, 0), "Price must be at least 1 wei")\n\n    }\n\n    function store_literal_in_memory_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f(memPtr) {\n\n        mstore(add(memPtr, 0), "Item already sold")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n',
      id: 12,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  sourceMap:
    "246:7335:11:-:0;;;462:11;439:34;;480:58;;;;;;;;;;1701:1:0;1806:7;:22;;;;520:10:11;504:5;;:27;;;;;;;;;;;;;;;;;;246:7335;;;;;;",
  deployedSourceMap:
    "246:7335:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5193:670;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1339:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1491:1064;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5925:796;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5036:109;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4060:970;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2686:699;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3391:663;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6775:804;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5193:670;5242:19;5273:17;5293:18;:8;:16;:18::i;:::-;5273:38;;5321:23;5368:20;:10;:18;:20::i;:::-;5347:18;:8;:16;:18::i;:::-;:41;;;;:::i;:::-;5321:67;;5398:20;5433:25;5478:15;5461:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5433:61;;5509:9;5504:331;5528:9;5524:1;:13;5504:331;;;5601:1;5562:41;;:14;:21;5581:1;5577;:5;;;;:::i;:::-;5562:21;;;;;;;;;;;:27;;;;;;;;;;;;:41;;;5558:267;;;5623:17;5647:1;5643;:5;;;;:::i;:::-;5623:25;;5666:30;5699:14;:25;5714:9;5699:25;;;;;;;;;;;5666:58;;5764:11;5742:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;5748:12;5742:19;;;;;;;;;;;;;;;;;;;;;:33;;;;5809:1;5793:17;;;;;:::i;:::-;;;5558:267;;;5539:3;;;;;:::i;:::-;;;;5504:331;;;;5851:5;5844:12;;;;;;5193:670;:::o;1339:93::-;1387:7;1413:12;;1406:19;;1339:93;:::o;1491:1064::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1730:1:11::1;1722:5;:9;1714:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1808:12;;1795:9;:25;1774:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;1893:20;:8;:18;:20::i;:::-;1923:14;1940:18;:8;:16;:18::i;:::-;1923:35;;1994:257;;;;;;;;2018:6;1994:257;;;;2038:11;1994:257;;;;;;2063:7;1994:257;;;;2084:8;1994:257;;;;2114:10;1994:257;;;;;;2155:1;1994:257;;;;;;2172:5;1994:257;;;;2191:9;1994:257;;;;;;2214:8;1994:257;;;;2236:5;1994:257;;;;::::0;1969:14:::1;:22;1984:6;1969:22;;;;;;;;;;;:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2270:11;2262:33;;;2296:10;2316:4;2323:7;2262:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2423:7;2398:11;2347:201;;2378:6;2347:201;2444:8;2466:10;2498:1;2514:5;2533;2347:201;;;;;;;;;;:::i;:::-;;;;;;;;2484:1:0;1701::::0;2628:7;:22;;;;1491:1064:11;;;;;;:::o;5925:796::-;5969:19;6000:22;6025:18;:8;:16;:18::i;:::-;6000:43;;6053:17;6084:20;6124:9;6119:163;6143:14;6139:1;:18;6119:163;;;6213:10;6182:41;;:14;:21;6201:1;6197;:5;;;;:::i;:::-;6182:21;;;;;;;;;;;:27;;;;;;;;;;;;:41;;;6178:94;;;6256:1;6243:14;;;;;:::i;:::-;;;6178:94;6159:3;;;;;:::i;:::-;;;;6119:163;;;;6292:25;6337:9;6320:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6292:55;;6362:9;6357:336;6381:14;6377:1;:18;6357:336;;;6451:10;6420:41;;:14;:21;6439:1;6435;:5;;;;:::i;:::-;6420:21;;;;;;;;;;;:27;;;;;;;;;;;;:41;;;6416:267;;;6481:17;6505:1;6501;:5;;;;:::i;:::-;6481:25;;6524:30;6557:14;:25;6572:9;6557:25;;;;;;;;;;;6524:58;;6622:11;6600:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;6606:12;6600:19;;;;;;;;;;;;;;;;;;;;;:33;;;;6667:1;6651:17;;;;;:::i;:::-;;;6416:267;;;6397:3;;;;;:::i;:::-;;;;6357:336;;;;6709:5;6702:12;;;;;;5925:796;:::o;5036:109::-;5092:12;5123:7;:15;5131:6;5123:15;;;;;;;;;;;5116:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5036:109;;;:::o;4060:970::-;4116:17;4136:7;:15;4144:6;4136:15;;;;;;;;;;;4116:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4161:22;4186:14;:22;4201:6;4186:22;;;;;;;;;;;4161:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4239:5;4226:18;;:4;:9;;;:18;;;4218:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;4301:15;4284:4;:13;;;:32;;4276:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4390:21;4414:4;4433:1;4419:4;:11;:15;;;;:::i;:::-;4414:21;;;;;;;;;;;;;;;;;;;;;;4390:45;;4445:4;:11;;;:20;;:36;4466:10;:14;;;4445:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4499:4;:16;;;4491:38;;;4551:4;4570:10;:16;;;4600:4;:12;;;4491:131;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4671:10;:16;;;4632:14;:22;4647:6;4632:22;;;;;;;;;;;:28;;;:56;;;;;;;;;;;;;;;;;;4728:4;4698:14;:22;4713:6;4698:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;4742:22;:10;:20;:22::i;:::-;4782:5;;;;;;;;;;;4774:23;;:37;4798:12;;4774:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4872:9;4867:157;4905:1;4891:4;:11;:15;;;;:::i;:::-;4887:1;:19;4867:157;;;4927:18;4948:4;4953:1;4948:7;;;;;;;;;;;;;;;;;;;;;;4927:28;;4977:7;:13;;;4969:31;;:44;5001:7;:11;;;4969:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4867:157;4908:3;;;;;:::i;:::-;;;;4867:157;;;;4060:970;;;;:::o;2686:699::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2815:13:11::1;2831:14;:22;2846:6;2831:22;;;;;;;;;;;:28;;;2815:44;;2869:15;2887:14;:22;2902:6;2887:22;;;;;;;;;;;:30;;;2869:48;;2961:5;2948:9;:18;2927:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;3067:14;:22;3082:6;3067:22;;;;;;;;;;;:29;;;;;;;;;;;;:38;;:49;3106:9;3067:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3134:11;3126:33;;;3168:4;3175:10;3187:7;3126:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3244:10;3205:14;:22;3220:6;3205:22;;;;;;;;;;;:28;;;:50;;;;;;;;;;;;;;;;;;3295:4;3265:14;:22;3280:6;3265:22;;;;;;;;;;;:27;;;:34;;;;;;;;;;;;;;;;;;3309:22;:10;:20;:22::i;:::-;3349:5;;;;;;;;;;;3341:23;;:37;3365:12;;3341:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2484:1:0;;1701::::0;2628:7;:22;;;;2686:699:11;;:::o;3391:663::-;3508:12;3553:3;3540:9;:16;3532:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3607:17;3627:7;:15;3635:6;3627:15;;;;;;;;;;;3607:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3652:22;3677:14;:22;3692:6;3677:22;;;;;;;;;;;3652:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3727:1;3713:4;:11;:15;3709:250;;;3775:4;3794:1;3780:4;:11;:15;;;;:::i;:::-;3775:21;;;;;;;;;;;;;;;;;;;;;;:25;;;3769:3;:31;3744:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;3709:250;;;3906:4;:10;;;3899:3;:17;;3891:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3709:250;3969:7;:15;3977:6;3969:15;;;;;;;;;;;3990:23;;;;;;;;3994:6;3990:23;;;;4002:3;3990:23;;;;4007:5;3990:23;;;;;3969:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4032:7;:15;4040:6;4032:15;;;;;;;;;;;4025:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3391:663;;;;;:::o;6775:804::-;6825:19;6856:22;6881:18;:8;:16;:18::i;:::-;6856:43;;6909:17;6940:20;6980:9;6975:164;6999:14;6995:1;:18;6975:164;;;7070:10;7038:42;;:14;:21;7057:1;7053;:5;;;;:::i;:::-;7038:21;;;;;;;;;;;:28;;;;;;;;;;;;:42;;;7034:95;;;7113:1;7100:14;;;;;:::i;:::-;;;7034:95;7015:3;;;;;:::i;:::-;;;;6975:164;;;;7149:25;7194:9;7177:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7149:55;;7219:9;7214:337;7238:14;7234:1;:18;7214:337;;;7309:10;7277:42;;:14;:21;7296:1;7292;:5;;;;:::i;:::-;7277:21;;;;;;;;;;;:28;;;;;;;;;;;;:42;;;7273:268;;;7339:17;7363:1;7359;:5;;;;:::i;:::-;7339:25;;7382:30;7415:14;:25;7430:9;7415:25;;;;;;;;;;;7382:58;;7480:11;7458:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;7464:12;7458:19;;;;;;;;;;;;;;;;;;;;;:33;;;;7525:1;7509:17;;;;;:::i;:::-;;;7273:268;;;7254:3;;;;;:::i;:::-;;;;7214:337;;;;7567:5;7560:12;;;;;;6775:804;:::o;827:112:7:-;892:7;918;:14;;;911:21;;827:112;;;:::o;945:123::-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:12:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:139::-;;375:6;362:20;353:29;;391:33;418:5;391:33;:::i;:::-;343:87;;;;:::o;436:407::-;;;561:2;549:9;540:7;536:23;532:32;529:2;;;577:1;574;567:12;529:2;620:1;645:53;690:7;681:6;670:9;666:22;645:53;:::i;:::-;635:63;;591:117;747:2;773:53;818:7;809:6;798:9;794:22;773:53;:::i;:::-;763:63;;718:118;519:324;;;;;:::o;849:984::-;;;;;;;1039:3;1027:9;1018:7;1014:23;1010:33;1007:2;;;1056:1;1053;1046:12;1007:2;1099:1;1124:53;1169:7;1160:6;1149:9;1145:22;1124:53;:::i;:::-;1114:63;;1070:117;1226:2;1252:53;1297:7;1288:6;1277:9;1273:22;1252:53;:::i;:::-;1242:63;;1197:118;1354:2;1380:53;1425:7;1416:6;1405:9;1401:22;1380:53;:::i;:::-;1370:63;;1325:118;1482:2;1508:53;1553:7;1544:6;1533:9;1529:22;1508:53;:::i;:::-;1498:63;;1453:118;1610:3;1637:50;1679:7;1670:6;1659:9;1655:22;1637:50;:::i;:::-;1627:60;;1581:116;1736:3;1763:53;1808:7;1799:6;1788:9;1784:22;1763:53;:::i;:::-;1753:63;;1707:119;997:836;;;;;;;;:::o;1839:262::-;;1947:2;1935:9;1926:7;1922:23;1918:32;1915:2;;;1963:1;1960;1953:12;1915:2;2006:1;2031:53;2076:7;2067:6;2056:9;2052:22;2031:53;:::i;:::-;2021:63;;1977:117;1905:196;;;;:::o;2107:552::-;;;;2249:2;2237:9;2228:7;2224:23;2220:32;2217:2;;;2265:1;2262;2255:12;2217:2;2308:1;2333:53;2378:7;2369:6;2358:9;2354:22;2333:53;:::i;:::-;2323:63;;2279:117;2435:2;2461:53;2506:7;2497:6;2486:9;2482:22;2461:53;:::i;:::-;2451:63;;2406:118;2563:2;2589:53;2634:7;2625:6;2614:9;2610:22;2589:53;:::i;:::-;2579:63;;2534:118;2207:452;;;;;:::o;2665:263::-;;2797:88;2881:3;2873:6;2797:88;:::i;:::-;2917:4;2912:3;2908:14;2894:28;;2787:141;;;;:::o;2934:293::-;;3080:102;3178:3;3170:6;3080:102;:::i;:::-;3214:6;3209:3;3205:16;3191:30;;3070:157;;;;:::o;3233:132::-;3326:32;3352:5;3326:32;:::i;:::-;3321:3;3314:45;3304:61;;:::o;3371:108::-;3448:24;3466:5;3448:24;:::i;:::-;3443:3;3436:37;3426:53;;:::o;3485:118::-;3572:24;3590:5;3572:24;:::i;:::-;3567:3;3560:37;3550:53;;:::o;3665:900::-;;3855:75;3924:5;3855:75;:::i;:::-;3946:107;4046:6;4041:3;3946:107;:::i;:::-;3939:114;;4077:77;4148:5;4077:77;:::i;:::-;4177:7;4208:1;4193:347;4218:6;4215:1;4212:13;4193:347;;;4294:6;4288:13;4321:105;4422:3;4407:13;4321:105;:::i;:::-;4314:112;;4449:81;4523:6;4449:81;:::i;:::-;4439:91;;4253:287;4240:1;4237;4233:9;4228:14;;4193:347;;;4197:14;4556:3;4549:10;;3831:734;;;;;;;:::o;4641:956::-;;4845:82;4921:5;4845:82;:::i;:::-;4943:114;5050:6;5045:3;4943:114;:::i;:::-;4936:121;;5081:84;5159:5;5081:84;:::i;:::-;5188:7;5219:1;5204:368;5229:6;5226:1;5223:13;5204:368;;;5305:6;5299:13;5332:119;5447:3;5432:13;5332:119;:::i;:::-;5325:126;;5474:88;5555:6;5474:88;:::i;:::-;5464:98;;5264:308;5251:1;5248;5244:9;5239:14;;5204:368;;;5208:14;5588:3;5581:10;;4821:776;;;;;;;:::o;5603:99::-;5674:21;5689:5;5674:21;:::i;:::-;5669:3;5662:34;5652:50;;:::o;5708:109::-;5789:21;5804:5;5789:21;:::i;:::-;5784:3;5777:34;5767:50;;:::o;5823:366::-;;5986:67;6050:2;6045:3;5986:67;:::i;:::-;5979:74;;6062:93;6151:3;6062:93;:::i;:::-;6180:2;6175:3;6171:12;6164:19;;5969:220;;;:::o;6195:366::-;;6358:67;6422:2;6417:3;6358:67;:::i;:::-;6351:74;;6434:93;6523:3;6434:93;:::i;:::-;6552:2;6547:3;6543:12;6536:19;;6341:220;;;:::o;6567:366::-;;6730:67;6794:2;6789:3;6730:67;:::i;:::-;6723:74;;6806:93;6895:3;6806:93;:::i;:::-;6924:2;6919:3;6915:12;6908:19;;6713:220;;;:::o;6939:366::-;;7102:67;7166:2;7161:3;7102:67;:::i;:::-;7095:74;;7178:93;7267:3;7178:93;:::i;:::-;7296:2;7291:3;7287:12;7280:19;;7085:220;;;:::o;7311:366::-;;7474:67;7538:2;7533:3;7474:67;:::i;:::-;7467:74;;7550:93;7639:3;7550:93;:::i;:::-;7668:2;7663:3;7659:12;7652:19;;7457:220;;;:::o;7683:366::-;;7846:67;7910:2;7905:3;7846:67;:::i;:::-;7839:74;;7922:93;8011:3;7922:93;:::i;:::-;8040:2;8035:3;8031:12;8024:19;;7829:220;;;:::o;8055:366::-;;8218:67;8282:2;8277:3;8218:67;:::i;:::-;8211:74;;8294:93;8383:3;8294:93;:::i;:::-;8412:2;8407:3;8403:12;8396:19;;8201:220;;;:::o;8427:366::-;;8590:67;8654:2;8649:3;8590:67;:::i;:::-;8583:74;;8666:93;8755:3;8666:93;:::i;:::-;8784:2;8779:3;8775:12;8768:19;;8573:220;;;:::o;8799:366::-;;8962:67;9026:2;9021:3;8962:67;:::i;:::-;8955:74;;9038:93;9127:3;9038:93;:::i;:::-;9156:2;9151:3;9147:12;9140:19;;8945:220;;;:::o;9223:665::-;9352:4;9347:3;9343:14;9441:4;9434:5;9430:16;9424:23;9460:63;9517:4;9512:3;9508:14;9494:12;9460:63;:::i;:::-;9367:166;9614:4;9607:5;9603:16;9597:23;9633:63;9690:4;9685:3;9681:14;9667:12;9633:63;:::i;:::-;9543:163;9789:4;9782:5;9778:16;9772:23;9808:63;9865:4;9860:3;9856:14;9842:12;9808:63;:::i;:::-;9716:165;9321:567;;;:::o;9960:1954::-;10103:6;10098:3;10094:16;10194:4;10187:5;10183:16;10177:23;10213:63;10270:4;10265:3;10261:14;10247:12;10213:63;:::i;:::-;10120:166;10375:4;10368:5;10364:16;10358:23;10394:63;10451:4;10446:3;10442:14;10428:12;10394:63;:::i;:::-;10296:171;10552:4;10545:5;10541:16;10535:23;10571:63;10628:4;10623:3;10619:14;10605:12;10571:63;:::i;:::-;10477:167;10730:4;10723:5;10719:16;10713:23;10749:63;10806:4;10801:3;10797:14;10783:12;10749:63;:::i;:::-;10654:168;10906:4;10899:5;10895:16;10889:23;10925:79;10998:4;10993:3;10989:14;10975:12;10925:79;:::i;:::-;10832:182;11097:4;11090:5;11086:16;11080:23;11116:79;11189:4;11184:3;11180:14;11166:12;11116:79;:::i;:::-;11024:181;11288:4;11281:5;11277:16;11271:23;11307:63;11364:4;11359:3;11355:14;11341:12;11307:63;:::i;:::-;11215:165;11467:4;11460:5;11456:16;11450:23;11486:57;11537:4;11532:3;11528:14;11514:12;11486:57;:::i;:::-;11390:163;11639:6;11632:5;11628:18;11622:25;11660:65;11717:6;11712:3;11708:16;11694:12;11660:65;:::i;:::-;11563:172;11817:6;11810:5;11806:18;11800:25;11838:59;11889:6;11884:3;11880:16;11866:12;11838:59;:::i;:::-;11745:162;10072:1842;;;:::o;11920:108::-;11997:24;12015:5;11997:24;:::i;:::-;11992:3;11985:37;11975:53;;:::o;12034:118::-;12121:24;12139:5;12121:24;:::i;:::-;12116:3;12109:37;12099:53;;:::o;12158:442::-;;12345:2;12334:9;12330:18;12322:26;;12358:71;12426:1;12415:9;12411:17;12402:6;12358:71;:::i;:::-;12439:72;12507:2;12496:9;12492:18;12483:6;12439:72;:::i;:::-;12521;12589:2;12578:9;12574:18;12565:6;12521:72;:::i;:::-;12312:288;;;;;;:::o;12606:457::-;;12829:2;12818:9;12814:18;12806:26;;12878:9;12872:4;12868:20;12864:1;12853:9;12849:17;12842:47;12906:150;13051:4;13042:6;12906:150;:::i;:::-;12898:158;;12796:267;;;;:::o;13069:485::-;;13306:2;13295:9;13291:18;13283:26;;13355:9;13349:4;13345:20;13341:1;13330:9;13326:17;13319:47;13383:164;13542:4;13533:6;13383:164;:::i;:::-;13375:172;;13273:281;;;;:::o;13560:419::-;;13764:2;13753:9;13749:18;13741:26;;13813:9;13807:4;13803:20;13799:1;13788:9;13784:17;13777:47;13841:131;13967:4;13841:131;:::i;:::-;13833:139;;13731:248;;;:::o;13985:419::-;;14189:2;14178:9;14174:18;14166:26;;14238:9;14232:4;14228:20;14224:1;14213:9;14209:17;14202:47;14266:131;14392:4;14266:131;:::i;:::-;14258:139;;14156:248;;;:::o;14410:419::-;;14614:2;14603:9;14599:18;14591:26;;14663:9;14657:4;14653:20;14649:1;14638:9;14634:17;14627:47;14691:131;14817:4;14691:131;:::i;:::-;14683:139;;14581:248;;;:::o;14835:419::-;;15039:2;15028:9;15024:18;15016:26;;15088:9;15082:4;15078:20;15074:1;15063:9;15059:17;15052:47;15116:131;15242:4;15116:131;:::i;:::-;15108:139;;15006:248;;;:::o;15260:419::-;;15464:2;15453:9;15449:18;15441:26;;15513:9;15507:4;15503:20;15499:1;15488:9;15484:17;15477:47;15541:131;15667:4;15541:131;:::i;:::-;15533:139;;15431:248;;;:::o;15685:419::-;;15889:2;15878:9;15874:18;15866:26;;15938:9;15932:4;15928:20;15924:1;15913:9;15909:17;15902:47;15966:131;16092:4;15966:131;:::i;:::-;15958:139;;15856:248;;;:::o;16110:419::-;;16314:2;16303:9;16299:18;16291:26;;16363:9;16357:4;16353:20;16349:1;16338:9;16334:17;16327:47;16391:131;16517:4;16391:131;:::i;:::-;16383:139;;16281:248;;;:::o;16535:419::-;;16739:2;16728:9;16724:18;16716:26;;16788:9;16782:4;16778:20;16774:1;16763:9;16759:17;16752:47;16816:131;16942:4;16816:131;:::i;:::-;16808:139;;16706:248;;;:::o;16960:419::-;;17164:2;17153:9;17149:18;17141:26;;17213:9;17207:4;17203:20;17199:1;17188:9;17184:17;17177:47;17241:131;17367:4;17241:131;:::i;:::-;17233:139;;17131:248;;;:::o;17385:222::-;;17516:2;17505:9;17501:18;17493:26;;17529:71;17597:1;17586:9;17582:17;17573:6;17529:71;:::i;:::-;17483:124;;;;:::o;17613:652::-;;17850:3;17839:9;17835:19;17827:27;;17864:71;17932:1;17921:9;17917:17;17908:6;17864:71;:::i;:::-;17945:72;18013:2;18002:9;17998:18;17989:6;17945:72;:::i;:::-;18027;18095:2;18084:9;18080:18;18071:6;18027:72;:::i;:::-;18109;18177:2;18166:9;18162:18;18153:6;18109:72;:::i;:::-;18191:67;18253:3;18242:9;18238:19;18229:6;18191:67;:::i;:::-;17817:448;;;;;;;;:::o;18271:153::-;;18382:3;18374:11;;18412:4;18407:3;18403:14;18395:22;;18364:60;;;:::o;18430:160::-;;18548:3;18540:11;;18578:4;18573:3;18569:14;18561:22;;18530:60;;;:::o;18596:135::-;;18718:5;18712:12;18702:22;;18691:40;;;:::o;18737:142::-;;18866:5;18860:12;18850:22;;18839:40;;;:::o;18885:134::-;;19008:4;19003:3;18999:14;18991:22;;18981:38;;;:::o;19025:141::-;;19155:4;19150:3;19146:14;19138:22;;19128:38;;;:::o;19172:205::-;;19326:6;19321:3;19314:19;19366:4;19361:3;19357:14;19342:29;;19304:73;;;;:::o;19383:212::-;;19544:6;19539:3;19532:19;19584:4;19579:3;19575:14;19560:29;;19522:73;;;;:::o;19601:169::-;;19719:6;19714:3;19707:19;19759:4;19754:3;19750:14;19735:29;;19697:73;;;;:::o;19776:305::-;;19835:20;19853:1;19835:20;:::i;:::-;19830:25;;19869:20;19887:1;19869:20;:::i;:::-;19864:25;;20023:1;19955:66;19951:74;19948:1;19945:81;19942:2;;;20029:18;;:::i;:::-;19942:2;20073:1;20070;20066:9;20059:16;;19820:261;;;;:::o;20087:191::-;;20147:20;20165:1;20147:20;:::i;:::-;20142:25;;20181:20;20199:1;20181:20;:::i;:::-;20176:25;;20220:1;20217;20214:8;20211:2;;;20225:18;;:::i;:::-;20211:2;20270:1;20267;20263:9;20255:17;;20132:146;;;;:::o;20284:96::-;;20350:24;20368:5;20350:24;:::i;:::-;20339:35;;20329:51;;;:::o;20386:104::-;;20460:24;20478:5;20460:24;:::i;:::-;20449:35;;20439:51;;;:::o;20496:90::-;;20573:5;20566:13;20559:21;20548:32;;20538:48;;;:::o;20592:126::-;;20669:42;20662:5;20658:54;20647:65;;20637:81;;;:::o;20724:77::-;;20790:5;20779:16;;20769:32;;;:::o;20807:233::-;;20869:24;20887:5;20869:24;:::i;:::-;20860:33;;20915:66;20908:5;20905:77;20902:2;;;20985:18;;:::i;:::-;20902:2;21032:1;21025:5;21021:13;21014:20;;20850:190;;;:::o;21046:180::-;21094:77;21091:1;21084:88;21191:4;21188:1;21181:15;21215:4;21212:1;21205:15;21232:223;21372:34;21368:1;21360:6;21356:14;21349:58;21441:6;21436:2;21428:6;21424:15;21417:31;21338:117;:::o;21461:175::-;21601:27;21597:1;21589:6;21585:14;21578:51;21567:69;:::o;21642:251::-;21782:34;21778:1;21770:6;21766:14;21759:58;21851:34;21846:2;21838:6;21834:15;21827:59;21748:145;:::o;21899:176::-;22039:28;22035:1;22027:6;22023:14;22016:52;22005:70;:::o;22081:223::-;22221:34;22217:1;22209:6;22205:14;22198:58;22290:6;22285:2;22277:6;22273:15;22266:31;22187:117;:::o;22310:177::-;22450:29;22446:1;22438:6;22434:14;22427:53;22416:71;:::o;22493:181::-;22633:33;22629:1;22621:6;22617:14;22610:57;22599:75;:::o;22680:178::-;22820:30;22816:1;22808:6;22804:14;22797:54;22786:72;:::o;22864:167::-;23004:19;23000:1;22992:6;22988:14;22981:43;22970:61;:::o;23037:122::-;23110:24;23128:5;23110:24;:::i;:::-;23103:5;23100:35;23090:2;;23149:1;23146;23139:12;23090:2;23080:79;:::o;23165:116::-;23235:21;23250:5;23235:21;:::i;:::-;23228:5;23225:32;23215:2;;23271:1;23268;23261:12;23215:2;23205:76;:::o;23287:122::-;23360:24;23378:5;23360:24;:::i;:::-;23353:5;23350:35;23340:2;;23399:1;23396;23389:12;23340:2;23330:79;:::o",
  source:
    '// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity ^0.8.3;\n\nimport "@openzeppelin/contracts/utils/Counters.sol";\nimport "@openzeppelin/contracts/security/ReentrancyGuard.sol";\nimport "@openzeppelin/contracts/token/ERC721/ERC721.sol";\n\ncontract NFTMarket is ReentrancyGuard {\n    using Counters for Counters.Counter;\n    Counters.Counter private _itemIds;\n    Counters.Counter private _itemsSold;\n\n    address payable owner;\n    uint256 listingPrice = 0.025 ether;\n\n    constructor() {\n        owner = payable(msg.sender);\n    }\n\n    struct MarketItem {\n        uint256 itemId;\n        address nftContract;\n        uint256 tokenId;\n        uint256 sellerId;\n        address payable seller;\n        address payable owner;\n        uint256 price;\n        bool isAuction;\n        uint256 sellDate;\n        bool sold;\n    }\n\n    struct Bid {\n        uint256 itemId;\n        uint256 bid;\n        address buyer;\n    }\n\n    mapping(uint256 => MarketItem) private idToMarketItem;\n\n    mapping(uint256 => Bid[]) private idToBid;\n\n    event MarketItemCreated(\n        uint256 indexed itemId,\n        address indexed nftContract,\n        uint256 indexed tokenId,\n        uint256 sellerId,\n        address seller,\n        address owner,\n        uint256 price,\n        bool sold\n    );\n\n    /* Returns the listing price of the contract */\n    function getListingPrice() public view returns (uint256) {\n        return listingPrice;\n    }\n\n    /* Places an item for sale on the marketplace */\n    function createMarketItem(\n        address nftContract,\n        uint256 tokenId,\n        uint256 price,\n        uint256 sellerId,\n        bool isAuction,\n        uint256 sellDate\n    ) public payable nonReentrant {\n        require(price > 0, "Price must be at least 1 wei");\n        require(\n            msg.value == listingPrice,\n            "Price must be equal to listing price"\n        );\n\n        _itemIds.increment();\n        uint256 itemId = _itemIds.current();\n\n        idToMarketItem[itemId] = MarketItem(\n            itemId,\n            nftContract,\n            tokenId,\n            sellerId,\n            payable(msg.sender),\n            payable(address(0)),\n            price,\n            isAuction,\n            sellDate,\n            false\n        );\n\n        IERC721(nftContract).transferFrom(msg.sender, address(this), tokenId);\n\n        emit MarketItemCreated(\n            itemId,\n            nftContract,\n            tokenId,\n            sellerId,\n            msg.sender,\n            address(0),\n            price,\n            false\n        );\n    }\n\n    /* Creates the sale of a marketplace item */\n    /* Transfers ownership of the item, as well as funds between parties */\n    function createMarketSale(address nftContract, uint256 itemId)\n        public\n        payable\n        nonReentrant\n    {\n        uint256 price = idToMarketItem[itemId].price;\n        uint256 tokenId = idToMarketItem[itemId].tokenId;\n        require(\n            msg.value == price,\n            "Please submit the asking price in order to complete the purchase"\n        );\n\n        idToMarketItem[itemId].seller.transfer(msg.value);\n        IERC721(nftContract).transferFrom(address(this), msg.sender, tokenId);\n        idToMarketItem[itemId].owner = payable(msg.sender);\n        idToMarketItem[itemId].sold = true;\n        _itemsSold.increment();\n        payable(owner).transfer(listingPrice);\n    }\n\n    function createBid(\n        uint256 itemId,\n        uint256 bid,\n        address buyer\n    ) public payable returns (Bid[] memory) {\n        require(msg.value == bid, "Value is less than the bidding price");\n        Bid[] memory bids = idToBid[itemId];\n        MarketItem memory item = idToMarketItem[itemId];\n        if (bids.length > 0) {\n            require(\n                bid > bids[bids.length - 1].bid,\n                "Bid is less than last bid."\n            );\n        } else {\n            require(bid >= item.price, "Bid is less than min. price");\n        }\n\n        idToBid[itemId].push(Bid(itemId, bid, buyer));\n\n        return idToBid[itemId];\n    }\n\n    function createBidSale(uint256 itemId) public {\n        Bid[] memory bids = idToBid[itemId];\n        MarketItem memory item = idToMarketItem[itemId];\n        require(item.sold == false, "Item already sold");\n        require(item.sellDate >= block.timestamp, "Auction has not ended yet");\n        // sell to highest bidder\n        Bid memory highestBid = bids[bids.length - 1];\n        item.seller.transfer(highestBid.bid);\n        IERC721(item.nftContract).transferFrom(\n            address(this),\n            highestBid.buyer,\n            item.tokenId\n        );\n        idToMarketItem[itemId].owner = payable(highestBid.buyer);\n        idToMarketItem[itemId].sold = true;\n        _itemsSold.increment();\n        payable(owner).transfer(listingPrice);\n\n        // return the money to other bidders\n        for (uint256 i = 0; i < bids.length - 2; i++) {\n            Bid memory currBid = bids[i];\n            payable(currBid.buyer).transfer(currBid.bid);\n        }\n    }\n\n    function fetchBids(uint256 itemId) public view returns (Bid[] memory) {\n        return idToBid[itemId];\n    }\n\n    /* Returns all unsold market items */\n    function fetchMarketItems() public view returns (MarketItem[] memory) {\n        uint256 itemCount = _itemIds.current();\n        uint256 unsoldItemCount = _itemIds.current() - _itemsSold.current();\n        uint256 currentIndex = 0;\n\n        MarketItem[] memory items = new MarketItem[](unsoldItemCount);\n        for (uint256 i = 0; i < itemCount; i++) {\n            if (idToMarketItem[i + 1].owner == address(0)) {\n                uint256 currentId = i + 1;\n                MarketItem storage currentItem = idToMarketItem[currentId];\n                items[currentIndex] = currentItem;\n                currentIndex += 1;\n            }\n        }\n        return items;\n    }\n\n    /* Returns onlyl items that a user has purchased */\n    function fetchMyNFTs() public view returns (MarketItem[] memory) {\n        uint256 totalItemCount = _itemIds.current();\n        uint256 itemCount = 0;\n        uint256 currentIndex = 0;\n\n        for (uint256 i = 0; i < totalItemCount; i++) {\n            if (idToMarketItem[i + 1].owner == msg.sender) {\n                itemCount += 1;\n            }\n        }\n\n        MarketItem[] memory items = new MarketItem[](itemCount);\n        for (uint256 i = 0; i < totalItemCount; i++) {\n            if (idToMarketItem[i + 1].owner == msg.sender) {\n                uint256 currentId = i + 1;\n                MarketItem storage currentItem = idToMarketItem[currentId];\n                items[currentIndex] = currentItem;\n                currentIndex += 1;\n            }\n        }\n        return items;\n    }\n\n    /* Returns only items a user has created */\n    function fetchItemsCreated() public view returns (MarketItem[] memory) {\n        uint256 totalItemCount = _itemIds.current();\n        uint256 itemCount = 0;\n        uint256 currentIndex = 0;\n\n        for (uint256 i = 0; i < totalItemCount; i++) {\n            if (idToMarketItem[i + 1].seller == msg.sender) {\n                itemCount += 1;\n            }\n        }\n\n        MarketItem[] memory items = new MarketItem[](itemCount);\n        for (uint256 i = 0; i < totalItemCount; i++) {\n            if (idToMarketItem[i + 1].seller == msg.sender) {\n                uint256 currentId = i + 1;\n                MarketItem storage currentItem = idToMarketItem[currentId];\n                items[currentIndex] = currentItem;\n                currentIndex += 1;\n            }\n        }\n        return items;\n    }\n}\n',
  sourcePath:
    "/Users/i516376/Misc./ethereum-react-native-boilerplate/contracts/NFTMarket.sol",
  ast: {
    absolutePath: "project:/contracts/NFTMarket.sol",
    exportedSymbols: {
      Address: [1328],
      Context: [1350],
      Counters: [1424],
      ERC165: [1651],
      ERC721: [870],
      IERC165: [1663],
      IERC721: [986],
      IERC721Metadata: [1031],
      IERC721Receiver: [1004],
      NFTMarket: [2486],
      ReentrancyGuard: [39],
      Strings: [1627],
    },
    id: 2487,
    license: "MIT OR Apache-2.0",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 1665,
        literals: ["solidity", "^", "0.8", ".3"],
        nodeType: "PragmaDirective",
        src: "46:23:11",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/Counters.sol",
        file: "@openzeppelin/contracts/utils/Counters.sol",
        id: 1666,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 2487,
        sourceUnit: 1425,
        src: "71:52:11",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        file: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        id: 1667,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 2487,
        sourceUnit: 40,
        src: "124:62:11",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        file: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        id: 1668,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 2487,
        sourceUnit: 871,
        src: "187:57:11",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 1669,
              name: "ReentrancyGuard",
              nodeType: "IdentifierPath",
              referencedDeclaration: 39,
              src: "268:15:11",
            },
            id: 1670,
            nodeType: "InheritanceSpecifier",
            src: "268:15:11",
          },
        ],
        contractDependencies: [39],
        contractKind: "contract",
        fullyImplemented: true,
        id: 2486,
        linearizedBaseContracts: [2486, 39],
        name: "NFTMarket",
        nameLocation: "255:9:11",
        nodeType: "ContractDefinition",
        nodes: [
          {
            id: 1674,
            libraryName: {
              id: 1671,
              name: "Counters",
              nodeType: "IdentifierPath",
              referencedDeclaration: 1424,
              src: "296:8:11",
            },
            nodeType: "UsingForDirective",
            src: "290:36:11",
            typeName: {
              id: 1673,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 1672,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 1356,
                src: "309:16:11",
              },
              referencedDeclaration: 1356,
              src: "309:16:11",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$1356_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
          },
          {
            constant: false,
            id: 1677,
            mutability: "mutable",
            name: "_itemIds",
            nameLocation: "356:8:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "331:33:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$1356_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 1676,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 1675,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 1356,
                src: "331:16:11",
              },
              referencedDeclaration: 1356,
              src: "331:16:11",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$1356_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            id: 1680,
            mutability: "mutable",
            name: "_itemsSold",
            nameLocation: "395:10:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "370:35:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$1356_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 1679,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 1678,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 1356,
                src: "370:16:11",
              },
              referencedDeclaration: 1356,
              src: "370:16:11",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$1356_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            id: 1682,
            mutability: "mutable",
            name: "owner",
            nameLocation: "428:5:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "412:21:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address_payable",
              typeString: "address payable",
            },
            typeName: {
              id: 1681,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "412:15:11",
              stateMutability: "payable",
              typeDescriptions: {
                typeIdentifier: "t_address_payable",
                typeString: "address payable",
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 1685,
            mutability: "mutable",
            name: "listingPrice",
            nameLocation: "447:12:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "439:34:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 1683,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "439:7:11",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "302e303235",
              id: 1684,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "462:11:11",
              subdenomination: "ether",
              typeDescriptions: {
                typeIdentifier: "t_rational_25000000000000000_by_1",
                typeString: "int_const 25000000000000000",
              },
              value: "0.025",
            },
            visibility: "internal",
          },
          {
            body: {
              id: 1696,
              nodeType: "Block",
              src: "494:44:11",
              statements: [
                {
                  expression: {
                    id: 1694,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 1688,
                      name: "owner",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1682,
                      src: "504:5:11",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          expression: {
                            id: 1691,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "520:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1692,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "520:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 1690,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "512:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_payable_$",
                          typeString: "type(address payable)",
                        },
                        typeName: {
                          id: 1689,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "512:8:11",
                          stateMutability: "payable",
                          typeDescriptions: {},
                        },
                      },
                      id: 1693,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "512:19:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "504:27:11",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 1695,
                  nodeType: "ExpressionStatement",
                  src: "504:27:11",
                },
              ],
            },
            id: 1697,
            implemented: true,
            kind: "constructor",
            modifiers: [],
            name: "",
            nameLocation: "-1:-1:-1",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1686,
              nodeType: "ParameterList",
              parameters: [],
              src: "491:2:11",
            },
            returnParameters: {
              id: 1687,
              nodeType: "ParameterList",
              parameters: [],
              src: "494:0:11",
            },
            scope: 2486,
            src: "480:58:11",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            canonicalName: "NFTMarket.MarketItem",
            id: 1718,
            members: [
              {
                constant: false,
                id: 1699,
                mutability: "mutable",
                name: "itemId",
                nameLocation: "580:6:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "572:14:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1698,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "572:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1701,
                mutability: "mutable",
                name: "nftContract",
                nameLocation: "604:11:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "596:19:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
                typeName: {
                  id: 1700,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "596:7:11",
                  stateMutability: "nonpayable",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1703,
                mutability: "mutable",
                name: "tokenId",
                nameLocation: "633:7:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "625:15:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1702,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "625:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1705,
                mutability: "mutable",
                name: "sellerId",
                nameLocation: "658:8:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "650:16:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1704,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "650:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1707,
                mutability: "mutable",
                name: "seller",
                nameLocation: "692:6:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "676:22:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address_payable",
                  typeString: "address payable",
                },
                typeName: {
                  id: 1706,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "676:15:11",
                  stateMutability: "payable",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1709,
                mutability: "mutable",
                name: "owner",
                nameLocation: "724:5:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "708:21:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address_payable",
                  typeString: "address payable",
                },
                typeName: {
                  id: 1708,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "708:15:11",
                  stateMutability: "payable",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1711,
                mutability: "mutable",
                name: "price",
                nameLocation: "747:5:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "739:13:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1710,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "739:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1713,
                mutability: "mutable",
                name: "isAuction",
                nameLocation: "767:9:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "762:14:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
                typeName: {
                  id: 1712,
                  name: "bool",
                  nodeType: "ElementaryTypeName",
                  src: "762:4:11",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1715,
                mutability: "mutable",
                name: "sellDate",
                nameLocation: "794:8:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "786:16:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1714,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "786:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1717,
                mutability: "mutable",
                name: "sold",
                nameLocation: "817:4:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "812:9:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
                typeName: {
                  id: 1716,
                  name: "bool",
                  nodeType: "ElementaryTypeName",
                  src: "812:4:11",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "MarketItem",
            nameLocation: "551:10:11",
            nodeType: "StructDefinition",
            scope: 2486,
            src: "544:284:11",
            visibility: "public",
          },
          {
            canonicalName: "NFTMarket.Bid",
            id: 1725,
            members: [
              {
                constant: false,
                id: 1720,
                mutability: "mutable",
                name: "itemId",
                nameLocation: "863:6:11",
                nodeType: "VariableDeclaration",
                scope: 1725,
                src: "855:14:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1719,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "855:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1722,
                mutability: "mutable",
                name: "bid",
                nameLocation: "887:3:11",
                nodeType: "VariableDeclaration",
                scope: 1725,
                src: "879:11:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1721,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "879:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1724,
                mutability: "mutable",
                name: "buyer",
                nameLocation: "908:5:11",
                nodeType: "VariableDeclaration",
                scope: 1725,
                src: "900:13:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
                typeName: {
                  id: 1723,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "900:7:11",
                  stateMutability: "nonpayable",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "Bid",
            nameLocation: "841:3:11",
            nodeType: "StructDefinition",
            scope: 2486,
            src: "834:86:11",
            visibility: "public",
          },
          {
            constant: false,
            id: 1730,
            mutability: "mutable",
            name: "idToMarketItem",
            nameLocation: "965:14:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "926:53:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier:
                "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
              typeString: "mapping(uint256 => struct NFTMarket.MarketItem)",
            },
            typeName: {
              id: 1729,
              keyType: {
                id: 1726,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "934:7:11",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "926:30:11",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                typeString: "mapping(uint256 => struct NFTMarket.MarketItem)",
              },
              valueType: {
                id: 1728,
                nodeType: "UserDefinedTypeName",
                pathNode: {
                  id: 1727,
                  name: "MarketItem",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 1718,
                  src: "945:10:11",
                },
                referencedDeclaration: 1718,
                src: "945:10:11",
                typeDescriptions: {
                  typeIdentifier: "t_struct$_MarketItem_$1718_storage_ptr",
                  typeString: "struct NFTMarket.MarketItem",
                },
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            id: 1736,
            mutability: "mutable",
            name: "idToBid",
            nameLocation: "1020:7:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "986:41:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier:
                "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
              typeString: "mapping(uint256 => struct NFTMarket.Bid[])",
            },
            typeName: {
              id: 1735,
              keyType: {
                id: 1731,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "994:7:11",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "986:25:11",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                typeString: "mapping(uint256 => struct NFTMarket.Bid[])",
              },
              valueType: {
                baseType: {
                  id: 1733,
                  nodeType: "UserDefinedTypeName",
                  pathNode: {
                    id: 1732,
                    name: "Bid",
                    nodeType: "IdentifierPath",
                    referencedDeclaration: 1725,
                    src: "1005:3:11",
                  },
                  referencedDeclaration: 1725,
                  src: "1005:3:11",
                  typeDescriptions: {
                    typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                    typeString: "struct NFTMarket.Bid",
                  },
                },
                id: 1734,
                nodeType: "ArrayTypeName",
                src: "1005:5:11",
                typeDescriptions: {
                  typeIdentifier:
                    "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                  typeString: "struct NFTMarket.Bid[]",
                },
              },
            },
            visibility: "private",
          },
          {
            anonymous: false,
            id: 1754,
            name: "MarketItemCreated",
            nameLocation: "1040:17:11",
            nodeType: "EventDefinition",
            parameters: {
              id: 1753,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1738,
                  indexed: true,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "1083:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1067:22:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1737,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1067:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1740,
                  indexed: true,
                  mutability: "mutable",
                  name: "nftContract",
                  nameLocation: "1115:11:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1099:27:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1739,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1099:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1742,
                  indexed: true,
                  mutability: "mutable",
                  name: "tokenId",
                  nameLocation: "1152:7:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1136:23:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1741,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1136:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1744,
                  indexed: false,
                  mutability: "mutable",
                  name: "sellerId",
                  nameLocation: "1177:8:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1169:16:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1743,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1169:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1746,
                  indexed: false,
                  mutability: "mutable",
                  name: "seller",
                  nameLocation: "1203:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1195:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1745,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1195:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1748,
                  indexed: false,
                  mutability: "mutable",
                  name: "owner",
                  nameLocation: "1227:5:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1219:13:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1747,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1219:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1750,
                  indexed: false,
                  mutability: "mutable",
                  name: "price",
                  nameLocation: "1250:5:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1242:13:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1749,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1242:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1752,
                  indexed: false,
                  mutability: "mutable",
                  name: "sold",
                  nameLocation: "1270:4:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1265:9:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 1751,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "1265:4:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1057:223:11",
            },
            src: "1034:247:11",
          },
          {
            body: {
              id: 1761,
              nodeType: "Block",
              src: "1396:36:11",
              statements: [
                {
                  expression: {
                    id: 1759,
                    name: "listingPrice",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 1685,
                    src: "1413:12:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 1758,
                  id: 1760,
                  nodeType: "Return",
                  src: "1406:19:11",
                },
              ],
            },
            functionSelector: "12e85585",
            id: 1762,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getListingPrice",
            nameLocation: "1348:15:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1755,
              nodeType: "ParameterList",
              parameters: [],
              src: "1363:2:11",
            },
            returnParameters: {
              id: 1758,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1757,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1762,
                  src: "1387:7:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1756,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1387:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1386:9:11",
            },
            scope: 2486,
            src: "1339:93:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1860,
              nodeType: "Block",
              src: "1704:851:11",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1782,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 1780,
                          name: "price",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1768,
                          src: "1722:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">",
                        rightExpression: {
                          hexValue: "30",
                          id: 1781,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1730:1:11",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "1722:9:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "5072696365206d757374206265206174206c65617374203120776569",
                        id: 1783,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1733:30:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                          typeString:
                            'literal_string "Price must be at least 1 wei"',
                        },
                        value: "Price must be at least 1 wei",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                          typeString:
                            'literal_string "Price must be at least 1 wei"',
                        },
                      ],
                      id: 1779,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "1714:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1784,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1714:50:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1785,
                  nodeType: "ExpressionStatement",
                  src: "1714:50:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1790,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 1787,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "1795:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1788,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "1795:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          id: 1789,
                          name: "listingPrice",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1685,
                          src: "1808:12:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "1795:25:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "5072696365206d75737420626520657175616c20746f206c697374696e67207072696365",
                        id: 1791,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1834:38:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1",
                          typeString:
                            'literal_string "Price must be equal to listing price"',
                        },
                        value: "Price must be equal to listing price",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1",
                          typeString:
                            'literal_string "Price must be equal to listing price"',
                        },
                      ],
                      id: 1786,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "1774:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1792,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1774:108:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1793,
                  nodeType: "ExpressionStatement",
                  src: "1774:108:11",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 1794,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "1893:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 1796,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "increment",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1382,
                      src: "1893:18:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_struct$_Counter_$1356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer)",
                      },
                    },
                    id: 1797,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1893:20:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1798,
                  nodeType: "ExpressionStatement",
                  src: "1893:20:11",
                },
                {
                  assignments: [1800],
                  declarations: [
                    {
                      constant: false,
                      id: 1800,
                      mutability: "mutable",
                      name: "itemId",
                      nameLocation: "1931:6:11",
                      nodeType: "VariableDeclaration",
                      scope: 1860,
                      src: "1923:14:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 1799,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "1923:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1804,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 1801,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "1940:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 1802,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1368,
                      src: "1940:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 1803,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1940:18:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "1923:35:11",
                },
                {
                  expression: {
                    id: 1830,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 1805,
                        name: "idToMarketItem",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1730,
                        src: "1969:14:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                          typeString:
                            "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                        },
                      },
                      id: 1807,
                      indexExpression: {
                        id: 1806,
                        name: "itemId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1800,
                        src: "1984:6:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1969:22:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                        typeString: "struct NFTMarket.MarketItem storage ref",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          id: 1809,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1800,
                          src: "2018:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          id: 1810,
                          name: "nftContract",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1764,
                          src: "2038:11:11",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 1811,
                          name: "tokenId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1766,
                          src: "2063:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          id: 1812,
                          name: "sellerId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1770,
                          src: "2084:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          arguments: [
                            {
                              expression: {
                                id: 1815,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "2114:3:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 1816,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "2114:10:11",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            id: 1814,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "2106:8:11",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_payable_$",
                              typeString: "type(address payable)",
                            },
                            typeName: {
                              id: 1813,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "2106:8:11",
                              stateMutability: "payable",
                              typeDescriptions: {},
                            },
                          },
                          id: 1817,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2106:19:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                        {
                          arguments: [
                            {
                              arguments: [
                                {
                                  hexValue: "30",
                                  id: 1822,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "2155:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_0_by_1",
                                    typeString: "int_const 0",
                                  },
                                  value: "0",
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_rational_0_by_1",
                                    typeString: "int_const 0",
                                  },
                                ],
                                id: 1821,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: "ElementaryTypeNameExpression",
                                src: "2147:7:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_type$_t_address_$",
                                  typeString: "type(address)",
                                },
                                typeName: {
                                  id: 1820,
                                  name: "address",
                                  nodeType: "ElementaryTypeName",
                                  src: "2147:7:11",
                                  typeDescriptions: {},
                                },
                              },
                              id: 1823,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "typeConversion",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "2147:10:11",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            id: 1819,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "2139:8:11",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_payable_$",
                              typeString: "type(address payable)",
                            },
                            typeName: {
                              id: 1818,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "2139:8:11",
                              stateMutability: "payable",
                              typeDescriptions: {},
                            },
                          },
                          id: 1824,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2139:19:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                        {
                          id: 1825,
                          name: "price",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1768,
                          src: "2172:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          id: 1826,
                          name: "isAuction",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1772,
                          src: "2191:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          id: 1827,
                          name: "sellDate",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1774,
                          src: "2214:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          hexValue: "66616c7365",
                          id: 1828,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "bool",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "2236:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          value: "false",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                          {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        ],
                        id: 1808,
                        name: "MarketItem",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1718,
                        src: "1994:10:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_struct$_MarketItem_$1718_storage_ptr_$",
                          typeString:
                            "type(struct NFTMarket.MarketItem storage pointer)",
                        },
                      },
                      id: 1829,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "structConstructorCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1994:257:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem memory",
                      },
                    },
                    src: "1969:282:11",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                      typeString: "struct NFTMarket.MarketItem storage ref",
                    },
                  },
                  id: 1831,
                  nodeType: "ExpressionStatement",
                  src: "1969:282:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 1836,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "2296:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1837,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "2296:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        arguments: [
                          {
                            id: 1840,
                            name: "this",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967268,
                            src: "2316:4:11",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          ],
                          id: 1839,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "2308:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 1838,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "2308:7:11",
                            typeDescriptions: {},
                          },
                        },
                        id: 1841,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "2308:13:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1842,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1766,
                        src: "2323:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 1833,
                            name: "nftContract",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1764,
                            src: "2270:11:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 1832,
                          name: "IERC721",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 986,
                          src: "2262:7:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_type$_t_contract$_IERC721_$986_$",
                            typeString: "type(contract IERC721)",
                          },
                        },
                        id: 1834,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "2262:20:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC721_$986",
                          typeString: "contract IERC721",
                        },
                      },
                      id: 1835,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transferFrom",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 939,
                      src: "2262:33:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256) external",
                      },
                    },
                    id: 1843,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2262:69:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1844,
                  nodeType: "ExpressionStatement",
                  src: "2262:69:11",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 1846,
                        name: "itemId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1800,
                        src: "2378:6:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 1847,
                        name: "nftContract",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1764,
                        src: "2398:11:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1848,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1766,
                        src: "2423:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 1849,
                        name: "sellerId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1770,
                        src: "2444:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 1850,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "2466:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1851,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "2466:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        arguments: [
                          {
                            hexValue: "30",
                            id: 1854,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "2498:1:11",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                          ],
                          id: 1853,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "2490:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 1852,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "2490:7:11",
                            typeDescriptions: {},
                          },
                        },
                        id: 1855,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "2490:10:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1856,
                        name: "price",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1768,
                        src: "2514:5:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        hexValue: "66616c7365",
                        id: 1857,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "bool",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2533:5:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        value: "false",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      ],
                      id: 1845,
                      name: "MarketItemCreated",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1754,
                      src: "2347:17:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        typeString:
                          "function (uint256,address,uint256,uint256,address,address,uint256,bool)",
                      },
                    },
                    id: 1858,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2347:201:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1859,
                  nodeType: "EmitStatement",
                  src: "2342:206:11",
                },
              ],
            },
            functionSelector: "144d149c",
            id: 1861,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 1777,
                kind: "modifierInvocation",
                modifierName: {
                  id: 1776,
                  name: "nonReentrant",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 38,
                  src: "1691:12:11",
                },
                nodeType: "ModifierInvocation",
                src: "1691:12:11",
              },
            ],
            name: "createMarketItem",
            nameLocation: "1500:16:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1775,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1764,
                  mutability: "mutable",
                  name: "nftContract",
                  nameLocation: "1534:11:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1526:19:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1763,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1526:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1766,
                  mutability: "mutable",
                  name: "tokenId",
                  nameLocation: "1563:7:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1555:15:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1765,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1555:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1768,
                  mutability: "mutable",
                  name: "price",
                  nameLocation: "1588:5:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1580:13:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1767,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1580:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1770,
                  mutability: "mutable",
                  name: "sellerId",
                  nameLocation: "1611:8:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1603:16:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1769,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1603:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1772,
                  mutability: "mutable",
                  name: "isAuction",
                  nameLocation: "1634:9:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1629:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 1771,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "1629:4:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1774,
                  mutability: "mutable",
                  name: "sellDate",
                  nameLocation: "1661:8:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1653:16:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1773,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1653:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1516:159:11",
            },
            returnParameters: {
              id: 1778,
              nodeType: "ParameterList",
              parameters: [],
              src: "1704:0:11",
            },
            scope: 2486,
            src: "1491:1064:11",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1945,
              nodeType: "Block",
              src: "2805:580:11",
              statements: [
                {
                  assignments: [1871],
                  declarations: [
                    {
                      constant: false,
                      id: 1871,
                      mutability: "mutable",
                      name: "price",
                      nameLocation: "2823:5:11",
                      nodeType: "VariableDeclaration",
                      scope: 1945,
                      src: "2815:13:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 1870,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2815:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1876,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 1872,
                        name: "idToMarketItem",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1730,
                        src: "2831:14:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                          typeString:
                            "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                        },
                      },
                      id: 1874,
                      indexExpression: {
                        id: 1873,
                        name: "itemId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1865,
                        src: "2846:6:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "2831:22:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                        typeString: "struct NFTMarket.MarketItem storage ref",
                      },
                    },
                    id: 1875,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "price",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 1711,
                    src: "2831:28:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2815:44:11",
                },
                {
                  assignments: [1878],
                  declarations: [
                    {
                      constant: false,
                      id: 1878,
                      mutability: "mutable",
                      name: "tokenId",
                      nameLocation: "2877:7:11",
                      nodeType: "VariableDeclaration",
                      scope: 1945,
                      src: "2869:15:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 1877,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2869:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1883,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 1879,
                        name: "idToMarketItem",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1730,
                        src: "2887:14:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                          typeString:
                            "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                        },
                      },
                      id: 1881,
                      indexExpression: {
                        id: 1880,
                        name: "itemId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1865,
                        src: "2902:6:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "2887:22:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                        typeString: "struct NFTMarket.MarketItem storage ref",
                      },
                    },
                    id: 1882,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "tokenId",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 1703,
                    src: "2887:30:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2869:48:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1888,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 1885,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "2948:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1886,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "2948:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          id: 1887,
                          name: "price",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1871,
                          src: "2961:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "2948:18:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "506c65617365207375626d6974207468652061736b696e6720707269636520696e206f7264657220746f20636f6d706c65746520746865207075726368617365",
                        id: 1889,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2980:66:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564",
                          typeString:
                            'literal_string "Please submit the asking price in order to complete the purchase"',
                        },
                        value:
                          "Please submit the asking price in order to complete the purchase",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564",
                          typeString:
                            'literal_string "Please submit the asking price in order to complete the purchase"',
                        },
                      ],
                      id: 1884,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "2927:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1890,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2927:129:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1891,
                  nodeType: "ExpressionStatement",
                  src: "2927:129:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 1897,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "3106:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1898,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "value",
                        nodeType: "MemberAccess",
                        src: "3106:9:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        expression: {
                          baseExpression: {
                            id: 1892,
                            name: "idToMarketItem",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1730,
                            src: "3067:14:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                              typeString:
                                "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                            },
                          },
                          id: 1894,
                          indexExpression: {
                            id: 1893,
                            name: "itemId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1865,
                            src: "3082:6:11",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "3067:22:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage",
                            typeString:
                              "struct NFTMarket.MarketItem storage ref",
                          },
                        },
                        id: 1895,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "seller",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1707,
                        src: "3067:29:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 1896,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "3067:38:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 1899,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3067:49:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1900,
                  nodeType: "ExpressionStatement",
                  src: "3067:49:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 1907,
                            name: "this",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967268,
                            src: "3168:4:11",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          ],
                          id: 1906,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "3160:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 1905,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "3160:7:11",
                            typeDescriptions: {},
                          },
                        },
                        id: 1908,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3160:13:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 1909,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "3175:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1910,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "3175:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1911,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1878,
                        src: "3187:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 1902,
                            name: "nftContract",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1863,
                            src: "3134:11:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 1901,
                          name: "IERC721",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 986,
                          src: "3126:7:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_type$_t_contract$_IERC721_$986_$",
                            typeString: "type(contract IERC721)",
                          },
                        },
                        id: 1903,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3126:20:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC721_$986",
                          typeString: "contract IERC721",
                        },
                      },
                      id: 1904,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transferFrom",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 939,
                      src: "3126:33:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256) external",
                      },
                    },
                    id: 1912,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3126:69:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1913,
                  nodeType: "ExpressionStatement",
                  src: "3126:69:11",
                },
                {
                  expression: {
                    id: 1923,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 1914,
                          name: "idToMarketItem",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1730,
                          src: "3205:14:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                          },
                        },
                        id: 1916,
                        indexExpression: {
                          id: 1915,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1865,
                          src: "3220:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3205:22:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                          typeString: "struct NFTMarket.MarketItem storage ref",
                        },
                      },
                      id: 1917,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "owner",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1709,
                      src: "3205:28:11",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          expression: {
                            id: 1920,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "3244:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1921,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "3244:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 1919,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "3236:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_payable_$",
                          typeString: "type(address payable)",
                        },
                        typeName: {
                          id: 1918,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "3236:8:11",
                          stateMutability: "payable",
                          typeDescriptions: {},
                        },
                      },
                      id: 1922,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3236:19:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "3205:50:11",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 1924,
                  nodeType: "ExpressionStatement",
                  src: "3205:50:11",
                },
                {
                  expression: {
                    id: 1930,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 1925,
                          name: "idToMarketItem",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1730,
                          src: "3265:14:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                          },
                        },
                        id: 1927,
                        indexExpression: {
                          id: 1926,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1865,
                          src: "3280:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3265:22:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                          typeString: "struct NFTMarket.MarketItem storage ref",
                        },
                      },
                      id: 1928,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "sold",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1717,
                      src: "3265:27:11",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "74727565",
                      id: 1929,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3295:4:11",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    src: "3265:34:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 1931,
                  nodeType: "ExpressionStatement",
                  src: "3265:34:11",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 1932,
                        name: "_itemsSold",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1680,
                        src: "3309:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 1934,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "increment",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1382,
                      src: "3309:20:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_struct$_Counter_$1356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer)",
                      },
                    },
                    id: 1935,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3309:22:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1936,
                  nodeType: "ExpressionStatement",
                  src: "3309:22:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 1942,
                        name: "listingPrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1685,
                        src: "3365:12:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 1939,
                            name: "owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1682,
                            src: "3349:5:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          ],
                          id: 1938,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "3341:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 1937,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "3341:8:11",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 1940,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3341:14:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 1941,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "3341:23:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 1943,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3341:37:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1944,
                  nodeType: "ExpressionStatement",
                  src: "3341:37:11",
                },
              ],
            },
            functionSelector: "c23b139e",
            id: 1946,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 1868,
                kind: "modifierInvocation",
                modifierName: {
                  id: 1867,
                  name: "nonReentrant",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 38,
                  src: "2788:12:11",
                },
                nodeType: "ModifierInvocation",
                src: "2788:12:11",
              },
            ],
            name: "createMarketSale",
            nameLocation: "2695:16:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1866,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1863,
                  mutability: "mutable",
                  name: "nftContract",
                  nameLocation: "2720:11:11",
                  nodeType: "VariableDeclaration",
                  scope: 1946,
                  src: "2712:19:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1862,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "2712:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1865,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "2741:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 1946,
                  src: "2733:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1864,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2733:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2711:37:11",
            },
            returnParameters: {
              id: 1869,
              nodeType: "ParameterList",
              parameters: [],
              src: "2805:0:11",
            },
            scope: 2486,
            src: "2686:699:11",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2026,
              nodeType: "Block",
              src: "3522:532:11",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1963,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 1960,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "3540:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1961,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "3540:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          id: 1962,
                          name: "bid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1950,
                          src: "3553:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "3540:16:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "56616c7565206973206c657373207468616e207468652062696464696e67207072696365",
                        id: 1964,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3558:38:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae",
                          typeString:
                            'literal_string "Value is less than the bidding price"',
                        },
                        value: "Value is less than the bidding price",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae",
                          typeString:
                            'literal_string "Value is less than the bidding price"',
                        },
                      ],
                      id: 1959,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "3532:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1965,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3532:65:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1966,
                  nodeType: "ExpressionStatement",
                  src: "3532:65:11",
                },
                {
                  assignments: [1971],
                  declarations: [
                    {
                      constant: false,
                      id: 1971,
                      mutability: "mutable",
                      name: "bids",
                      nameLocation: "3620:4:11",
                      nodeType: "VariableDeclaration",
                      scope: 2026,
                      src: "3607:17:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.Bid[]",
                      },
                      typeName: {
                        baseType: {
                          id: 1969,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 1968,
                            name: "Bid",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1725,
                            src: "3607:3:11",
                          },
                          referencedDeclaration: 1725,
                          src: "3607:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                            typeString: "struct NFTMarket.Bid",
                          },
                        },
                        id: 1970,
                        nodeType: "ArrayTypeName",
                        src: "3607:5:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.Bid[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1975,
                  initialValue: {
                    baseExpression: {
                      id: 1972,
                      name: "idToBid",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1736,
                      src: "3627:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                      },
                    },
                    id: 1974,
                    indexExpression: {
                      id: 1973,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1948,
                      src: "3635:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "3627:15:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                      typeString:
                        "struct NFTMarket.Bid storage ref[] storage ref",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3607:35:11",
                },
                {
                  assignments: [1978],
                  declarations: [
                    {
                      constant: false,
                      id: 1978,
                      mutability: "mutable",
                      name: "item",
                      nameLocation: "3670:4:11",
                      nodeType: "VariableDeclaration",
                      scope: 2026,
                      src: "3652:22:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                      typeName: {
                        id: 1977,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 1976,
                          name: "MarketItem",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 1718,
                          src: "3652:10:11",
                        },
                        referencedDeclaration: 1718,
                        src: "3652:10:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_MarketItem_$1718_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1982,
                  initialValue: {
                    baseExpression: {
                      id: 1979,
                      name: "idToMarketItem",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1730,
                      src: "3677:14:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                      },
                    },
                    id: 1981,
                    indexExpression: {
                      id: 1980,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1948,
                      src: "3692:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "3677:22:11",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                      typeString: "struct NFTMarket.MarketItem storage ref",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3652:47:11",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 1986,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 1983,
                        name: "bids",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1971,
                        src: "3713:4:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                          typeString: "struct NFTMarket.Bid memory[] memory",
                        },
                      },
                      id: 1984,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "length",
                      nodeType: "MemberAccess",
                      src: "3713:11:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      hexValue: "30",
                      id: 1985,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3727:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "3713:15:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 2009,
                    nodeType: "Block",
                    src: "3877:82:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 2005,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                id: 2002,
                                name: "bid",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1950,
                                src: "3899:3:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: ">=",
                              rightExpression: {
                                expression: {
                                  id: 2003,
                                  name: "item",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 1978,
                                  src: "3906:4:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_memory_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem memory",
                                  },
                                },
                                id: 2004,
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "price",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 1711,
                                src: "3906:10:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "3899:17:11",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                            {
                              hexValue:
                                "426964206973206c657373207468616e206d696e2e207072696365",
                              id: 2006,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "3918:29:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831",
                                typeString:
                                  'literal_string "Bid is less than min. price"',
                              },
                              value: "Bid is less than min. price",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831",
                                typeString:
                                  'literal_string "Bid is less than min. price"',
                              },
                            ],
                            id: 2001,
                            name: "require",
                            nodeType: "Identifier",
                            overloadedDeclarations: [4294967278, 4294967278],
                            referencedDeclaration: 4294967278,
                            src: "3891:7:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              typeString: "function (bool,string memory) pure",
                            },
                          },
                          id: 2007,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3891:57:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2008,
                        nodeType: "ExpressionStatement",
                        src: "3891:57:11",
                      },
                    ],
                  },
                  id: 2010,
                  nodeType: "IfStatement",
                  src: "3709:250:11",
                  trueBody: {
                    id: 2000,
                    nodeType: "Block",
                    src: "3730:141:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 1996,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                id: 1988,
                                name: "bid",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1950,
                                src: "3769:3:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: ">",
                              rightExpression: {
                                expression: {
                                  baseExpression: {
                                    id: 1989,
                                    name: "bids",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 1971,
                                    src: "3775:4:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                                      typeString:
                                        "struct NFTMarket.Bid memory[] memory",
                                    },
                                  },
                                  id: 1994,
                                  indexExpression: {
                                    commonType: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    id: 1993,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    leftExpression: {
                                      expression: {
                                        id: 1990,
                                        name: "bids",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 1971,
                                        src: "3780:4:11",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                                          typeString:
                                            "struct NFTMarket.Bid memory[] memory",
                                        },
                                      },
                                      id: 1991,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      memberName: "length",
                                      nodeType: "MemberAccess",
                                      src: "3780:11:11",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                    nodeType: "BinaryOperation",
                                    operator: "-",
                                    rightExpression: {
                                      hexValue: "31",
                                      id: 1992,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      kind: "number",
                                      lValueRequested: false,
                                      nodeType: "Literal",
                                      src: "3794:1:11",
                                      typeDescriptions: {
                                        typeIdentifier: "t_rational_1_by_1",
                                        typeString: "int_const 1",
                                      },
                                      value: "1",
                                    },
                                    src: "3780:15:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: false,
                                  nodeType: "IndexAccess",
                                  src: "3775:21:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_Bid_$1725_memory_ptr",
                                    typeString: "struct NFTMarket.Bid memory",
                                  },
                                },
                                id: 1995,
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "bid",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 1722,
                                src: "3775:25:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "3769:31:11",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                            {
                              hexValue:
                                "426964206973206c657373207468616e206c617374206269642e",
                              id: 1997,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "3818:28:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274",
                                typeString:
                                  'literal_string "Bid is less than last bid."',
                              },
                              value: "Bid is less than last bid.",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274",
                                typeString:
                                  'literal_string "Bid is less than last bid."',
                              },
                            ],
                            id: 1987,
                            name: "require",
                            nodeType: "Identifier",
                            overloadedDeclarations: [4294967278, 4294967278],
                            referencedDeclaration: 4294967278,
                            src: "3744:7:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              typeString: "function (bool,string memory) pure",
                            },
                          },
                          id: 1998,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3744:116:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 1999,
                        nodeType: "ExpressionStatement",
                        src: "3744:116:11",
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 2016,
                            name: "itemId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1948,
                            src: "3994:6:11",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          {
                            id: 2017,
                            name: "bid",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1950,
                            src: "4002:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          {
                            id: 2018,
                            name: "buyer",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1952,
                            src: "4007:5:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2015,
                          name: "Bid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1725,
                          src: "3990:3:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_type$_t_struct$_Bid_$1725_storage_ptr_$",
                            typeString:
                              "type(struct NFTMarket.Bid storage pointer)",
                          },
                        },
                        id: 2019,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "structConstructorCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3990:23:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                          typeString: "struct NFTMarket.Bid memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                          typeString: "struct NFTMarket.Bid memory",
                        },
                      ],
                      expression: {
                        baseExpression: {
                          id: 2011,
                          name: "idToBid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1736,
                          src: "3969:7:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                          },
                        },
                        id: 2013,
                        indexExpression: {
                          id: 2012,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1948,
                          src: "3977:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3969:15:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                          typeString:
                            "struct NFTMarket.Bid storage ref[] storage ref",
                        },
                      },
                      id: 2014,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "push",
                      nodeType: "MemberAccess",
                      src: "3969:20:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_arraypush_nonpayable$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr_$_t_struct$_Bid_$1725_storage_$returns$__$bound_to$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr_$",
                        typeString:
                          "function (struct NFTMarket.Bid storage ref[] storage pointer,struct NFTMarket.Bid storage ref)",
                      },
                    },
                    id: 2020,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3969:45:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2021,
                  nodeType: "ExpressionStatement",
                  src: "3969:45:11",
                },
                {
                  expression: {
                    baseExpression: {
                      id: 2022,
                      name: "idToBid",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1736,
                      src: "4032:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                      },
                    },
                    id: 2024,
                    indexExpression: {
                      id: 2023,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1948,
                      src: "4040:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "4032:15:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                      typeString:
                        "struct NFTMarket.Bid storage ref[] storage ref",
                    },
                  },
                  functionReturnParameters: 1958,
                  id: 2025,
                  nodeType: "Return",
                  src: "4025:22:11",
                },
              ],
            },
            functionSelector: "c2d3c07b",
            id: 2027,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "createBid",
            nameLocation: "3400:9:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1953,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1948,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "3427:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 2027,
                  src: "3419:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1947,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3419:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1950,
                  mutability: "mutable",
                  name: "bid",
                  nameLocation: "3451:3:11",
                  nodeType: "VariableDeclaration",
                  scope: 2027,
                  src: "3443:11:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1949,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3443:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1952,
                  mutability: "mutable",
                  name: "buyer",
                  nameLocation: "3472:5:11",
                  nodeType: "VariableDeclaration",
                  scope: 2027,
                  src: "3464:13:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1951,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3464:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3409:74:11",
            },
            returnParameters: {
              id: 1958,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1957,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2027,
                  src: "3508:12:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.Bid[]",
                  },
                  typeName: {
                    baseType: {
                      id: 1955,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 1954,
                        name: "Bid",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1725,
                        src: "3508:3:11",
                      },
                      referencedDeclaration: 1725,
                      src: "3508:3:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                        typeString: "struct NFTMarket.Bid",
                      },
                    },
                    id: 1956,
                    nodeType: "ArrayTypeName",
                    src: "3508:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.Bid[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3507:14:11",
            },
            scope: 2486,
            src: "3391:663:11",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2162,
              nodeType: "Block",
              src: "4106:924:11",
              statements: [
                {
                  assignments: [2036],
                  declarations: [
                    {
                      constant: false,
                      id: 2036,
                      mutability: "mutable",
                      name: "bids",
                      nameLocation: "4129:4:11",
                      nodeType: "VariableDeclaration",
                      scope: 2162,
                      src: "4116:17:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.Bid[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2034,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2033,
                            name: "Bid",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1725,
                            src: "4116:3:11",
                          },
                          referencedDeclaration: 1725,
                          src: "4116:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                            typeString: "struct NFTMarket.Bid",
                          },
                        },
                        id: 2035,
                        nodeType: "ArrayTypeName",
                        src: "4116:5:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.Bid[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2040,
                  initialValue: {
                    baseExpression: {
                      id: 2037,
                      name: "idToBid",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1736,
                      src: "4136:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                      },
                    },
                    id: 2039,
                    indexExpression: {
                      id: 2038,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2029,
                      src: "4144:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "4136:15:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                      typeString:
                        "struct NFTMarket.Bid storage ref[] storage ref",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4116:35:11",
                },
                {
                  assignments: [2043],
                  declarations: [
                    {
                      constant: false,
                      id: 2043,
                      mutability: "mutable",
                      name: "item",
                      nameLocation: "4179:4:11",
                      nodeType: "VariableDeclaration",
                      scope: 2162,
                      src: "4161:22:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                      typeName: {
                        id: 2042,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 2041,
                          name: "MarketItem",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 1718,
                          src: "4161:10:11",
                        },
                        referencedDeclaration: 1718,
                        src: "4161:10:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_MarketItem_$1718_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2047,
                  initialValue: {
                    baseExpression: {
                      id: 2044,
                      name: "idToMarketItem",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1730,
                      src: "4186:14:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                      },
                    },
                    id: 2046,
                    indexExpression: {
                      id: 2045,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2029,
                      src: "4201:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "4186:22:11",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                      typeString: "struct NFTMarket.MarketItem storage ref",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4161:47:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 2052,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 2049,
                            name: "item",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2043,
                            src: "4226:4:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_MarketItem_$1718_memory_ptr",
                              typeString: "struct NFTMarket.MarketItem memory",
                            },
                          },
                          id: 2050,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sold",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 1717,
                          src: "4226:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          hexValue: "66616c7365",
                          id: 2051,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "bool",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4239:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          value: "false",
                        },
                        src: "4226:18:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue: "4974656d20616c726561647920736f6c64",
                        id: 2053,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4246:19:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
                          typeString: 'literal_string "Item already sold"',
                        },
                        value: "Item already sold",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
                          typeString: 'literal_string "Item already sold"',
                        },
                      ],
                      id: 2048,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4218:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2054,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4218:48:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2055,
                  nodeType: "ExpressionStatement",
                  src: "4218:48:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2061,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 2057,
                            name: "item",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2043,
                            src: "4284:4:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_MarketItem_$1718_memory_ptr",
                              typeString: "struct NFTMarket.MarketItem memory",
                            },
                          },
                          id: 2058,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sellDate",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 1715,
                          src: "4284:13:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">=",
                        rightExpression: {
                          expression: {
                            id: 2059,
                            name: "block",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967292,
                            src: "4301:5:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_block",
                              typeString: "block",
                            },
                          },
                          id: 2060,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "timestamp",
                          nodeType: "MemberAccess",
                          src: "4301:15:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4284:32:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "41756374696f6e20686173206e6f7420656e64656420796574",
                        id: 2062,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4318:27:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1",
                          typeString:
                            'literal_string "Auction has not ended yet"',
                        },
                        value: "Auction has not ended yet",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1",
                          typeString:
                            'literal_string "Auction has not ended yet"',
                        },
                      ],
                      id: 2056,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4276:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2063,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4276:70:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2064,
                  nodeType: "ExpressionStatement",
                  src: "4276:70:11",
                },
                {
                  assignments: [2067],
                  declarations: [
                    {
                      constant: false,
                      id: 2067,
                      mutability: "mutable",
                      name: "highestBid",
                      nameLocation: "4401:10:11",
                      nodeType: "VariableDeclaration",
                      scope: 2162,
                      src: "4390:21:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                        typeString: "struct NFTMarket.Bid",
                      },
                      typeName: {
                        id: 2066,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 2065,
                          name: "Bid",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 1725,
                          src: "4390:3:11",
                        },
                        referencedDeclaration: 1725,
                        src: "4390:3:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                          typeString: "struct NFTMarket.Bid",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2074,
                  initialValue: {
                    baseExpression: {
                      id: 2068,
                      name: "bids",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2036,
                      src: "4414:4:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.Bid memory[] memory",
                      },
                    },
                    id: 2073,
                    indexExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 2072,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 2069,
                          name: "bids",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2036,
                          src: "4419:4:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory[] memory",
                          },
                        },
                        id: 2070,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "length",
                        nodeType: "MemberAccess",
                        src: "4419:11:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "31",
                        id: 2071,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4433:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "4419:15:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "4414:21:11",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                      typeString: "struct NFTMarket.Bid memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4390:45:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 2080,
                          name: "highestBid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2067,
                          src: "4466:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory",
                          },
                        },
                        id: 2081,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "bid",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1722,
                        src: "4466:14:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        expression: {
                          id: 2075,
                          name: "item",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2043,
                          src: "4445:4:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_memory_ptr",
                            typeString: "struct NFTMarket.MarketItem memory",
                          },
                        },
                        id: 2078,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "seller",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1707,
                        src: "4445:11:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 2079,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "4445:20:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 2082,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4445:36:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2083,
                  nodeType: "ExpressionStatement",
                  src: "4445:36:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 2091,
                            name: "this",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967268,
                            src: "4551:4:11",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          ],
                          id: 2090,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "4543:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 2089,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "4543:7:11",
                            typeDescriptions: {},
                          },
                        },
                        id: 2092,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4543:13:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 2093,
                          name: "highestBid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2067,
                          src: "4570:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory",
                          },
                        },
                        id: 2094,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "buyer",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1724,
                        src: "4570:16:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 2095,
                          name: "item",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2043,
                          src: "4600:4:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_memory_ptr",
                            typeString: "struct NFTMarket.MarketItem memory",
                          },
                        },
                        id: 2096,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1703,
                        src: "4600:12:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            expression: {
                              id: 2085,
                              name: "item",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2043,
                              src: "4499:4:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_memory_ptr",
                                typeString:
                                  "struct NFTMarket.MarketItem memory",
                              },
                            },
                            id: 2086,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "nftContract",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1701,
                            src: "4499:16:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2084,
                          name: "IERC721",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 986,
                          src: "4491:7:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_type$_t_contract$_IERC721_$986_$",
                            typeString: "type(contract IERC721)",
                          },
                        },
                        id: 2087,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4491:25:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC721_$986",
                          typeString: "contract IERC721",
                        },
                      },
                      id: 2088,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transferFrom",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 939,
                      src: "4491:38:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256) external",
                      },
                    },
                    id: 2097,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4491:131:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2098,
                  nodeType: "ExpressionStatement",
                  src: "4491:131:11",
                },
                {
                  expression: {
                    id: 2108,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 2099,
                          name: "idToMarketItem",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1730,
                          src: "4632:14:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                          },
                        },
                        id: 2101,
                        indexExpression: {
                          id: 2100,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2029,
                          src: "4647:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "4632:22:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                          typeString: "struct NFTMarket.MarketItem storage ref",
                        },
                      },
                      id: 2102,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "owner",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1709,
                      src: "4632:28:11",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          expression: {
                            id: 2105,
                            name: "highestBid",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2067,
                            src: "4671:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                              typeString: "struct NFTMarket.Bid memory",
                            },
                          },
                          id: 2106,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "buyer",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 1724,
                          src: "4671:16:11",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 2104,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "4663:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_payable_$",
                          typeString: "type(address payable)",
                        },
                        typeName: {
                          id: 2103,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "4663:8:11",
                          stateMutability: "payable",
                          typeDescriptions: {},
                        },
                      },
                      id: 2107,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4663:25:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "4632:56:11",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 2109,
                  nodeType: "ExpressionStatement",
                  src: "4632:56:11",
                },
                {
                  expression: {
                    id: 2115,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 2110,
                          name: "idToMarketItem",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1730,
                          src: "4698:14:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                          },
                        },
                        id: 2112,
                        indexExpression: {
                          id: 2111,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2029,
                          src: "4713:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "4698:22:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                          typeString: "struct NFTMarket.MarketItem storage ref",
                        },
                      },
                      id: 2113,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "sold",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1717,
                      src: "4698:27:11",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "74727565",
                      id: 2114,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4728:4:11",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    src: "4698:34:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2116,
                  nodeType: "ExpressionStatement",
                  src: "4698:34:11",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 2117,
                        name: "_itemsSold",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1680,
                        src: "4742:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 2119,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "increment",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1382,
                      src: "4742:20:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_struct$_Counter_$1356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer)",
                      },
                    },
                    id: 2120,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4742:22:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2121,
                  nodeType: "ExpressionStatement",
                  src: "4742:22:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2127,
                        name: "listingPrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1685,
                        src: "4798:12:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 2124,
                            name: "owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1682,
                            src: "4782:5:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          ],
                          id: 2123,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "4774:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 2122,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "4774:8:11",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 2125,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4774:14:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 2126,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "4774:23:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 2128,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4774:37:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2129,
                  nodeType: "ExpressionStatement",
                  src: "4774:37:11",
                },
                {
                  body: {
                    id: 2160,
                    nodeType: "Block",
                    src: "4913:111:11",
                    statements: [
                      {
                        assignments: [2145],
                        declarations: [
                          {
                            constant: false,
                            id: 2145,
                            mutability: "mutable",
                            name: "currBid",
                            nameLocation: "4938:7:11",
                            nodeType: "VariableDeclaration",
                            scope: 2160,
                            src: "4927:18:11",
                            stateVariable: false,
                            storageLocation: "memory",
                            typeDescriptions: {
                              typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                              typeString: "struct NFTMarket.Bid",
                            },
                            typeName: {
                              id: 2144,
                              nodeType: "UserDefinedTypeName",
                              pathNode: {
                                id: 2143,
                                name: "Bid",
                                nodeType: "IdentifierPath",
                                referencedDeclaration: 1725,
                                src: "4927:3:11",
                              },
                              referencedDeclaration: 1725,
                              src: "4927:3:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_Bid_$1725_storage_ptr",
                                typeString: "struct NFTMarket.Bid",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 2149,
                        initialValue: {
                          baseExpression: {
                            id: 2146,
                            name: "bids",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2036,
                            src: "4948:4:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                              typeString:
                                "struct NFTMarket.Bid memory[] memory",
                            },
                          },
                          id: 2148,
                          indexExpression: {
                            id: 2147,
                            name: "i",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2131,
                            src: "4953:1:11",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4948:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "4927:28:11",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                id: 2156,
                                name: "currBid",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2145,
                                src: "5001:7:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_Bid_$1725_memory_ptr",
                                  typeString: "struct NFTMarket.Bid memory",
                                },
                              },
                              id: 2157,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "bid",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 1722,
                              src: "5001:11:11",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              arguments: [
                                {
                                  expression: {
                                    id: 2152,
                                    name: "currBid",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2145,
                                    src: "4977:7:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_Bid_$1725_memory_ptr",
                                      typeString: "struct NFTMarket.Bid memory",
                                    },
                                  },
                                  id: 2153,
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "buyer",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 1724,
                                  src: "4977:13:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                ],
                                id: 2151,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: "ElementaryTypeNameExpression",
                                src: "4969:8:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_type$_t_address_payable_$",
                                  typeString: "type(address payable)",
                                },
                                typeName: {
                                  id: 2150,
                                  name: "address",
                                  nodeType: "ElementaryTypeName",
                                  src: "4969:8:11",
                                  stateMutability: "payable",
                                  typeDescriptions: {},
                                },
                              },
                              id: 2154,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "typeConversion",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "4969:22:11",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            id: 2155,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "transfer",
                            nodeType: "MemberAccess",
                            src: "4969:31:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              typeString: "function (uint256)",
                            },
                          },
                          id: 2158,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4969:44:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2159,
                        nodeType: "ExpressionStatement",
                        src: "4969:44:11",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2139,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2134,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2131,
                      src: "4887:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 2138,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 2135,
                          name: "bids",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2036,
                          src: "4891:4:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory[] memory",
                          },
                        },
                        id: 2136,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "length",
                        nodeType: "MemberAccess",
                        src: "4891:11:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "32",
                        id: 2137,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4905:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_2_by_1",
                          typeString: "int_const 2",
                        },
                        value: "2",
                      },
                      src: "4891:15:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4887:19:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2161,
                  initializationExpression: {
                    assignments: [2131],
                    declarations: [
                      {
                        constant: false,
                        id: 2131,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "4880:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2161,
                        src: "4872:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2130,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "4872:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2133,
                    initialValue: {
                      hexValue: "30",
                      id: 2132,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4884:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "4872:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2141,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "4908:3:11",
                      subExpression: {
                        id: 2140,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2131,
                        src: "4908:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2142,
                    nodeType: "ExpressionStatement",
                    src: "4908:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "4867:157:11",
                },
              ],
            },
            functionSelector: "951fe563",
            id: 2163,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "createBidSale",
            nameLocation: "4069:13:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2030,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2029,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "4091:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 2163,
                  src: "4083:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2028,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "4083:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4082:16:11",
            },
            returnParameters: {
              id: 2031,
              nodeType: "ParameterList",
              parameters: [],
              src: "4106:0:11",
            },
            scope: 2486,
            src: "4060:970:11",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2176,
              nodeType: "Block",
              src: "5106:39:11",
              statements: [
                {
                  expression: {
                    baseExpression: {
                      id: 2172,
                      name: "idToBid",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1736,
                      src: "5123:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                      },
                    },
                    id: 2174,
                    indexExpression: {
                      id: 2173,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2165,
                      src: "5131:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "5123:15:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                      typeString:
                        "struct NFTMarket.Bid storage ref[] storage ref",
                    },
                  },
                  functionReturnParameters: 2171,
                  id: 2175,
                  nodeType: "Return",
                  src: "5116:22:11",
                },
              ],
            },
            functionSelector: "7f95c99f",
            id: 2177,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "fetchBids",
            nameLocation: "5045:9:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2166,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2165,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "5063:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 2177,
                  src: "5055:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2164,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5055:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5054:16:11",
            },
            returnParameters: {
              id: 2171,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2170,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2177,
                  src: "5092:12:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.Bid[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2168,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 2167,
                        name: "Bid",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1725,
                        src: "5092:3:11",
                      },
                      referencedDeclaration: 1725,
                      src: "5092:3:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                        typeString: "struct NFTMarket.Bid",
                      },
                    },
                    id: 2169,
                    nodeType: "ArrayTypeName",
                    src: "5092:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.Bid[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5091:14:11",
            },
            scope: 2486,
            src: "5036:109:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2266,
              nodeType: "Block",
              src: "5263:600:11",
              statements: [
                {
                  assignments: [2185],
                  declarations: [
                    {
                      constant: false,
                      id: 2185,
                      mutability: "mutable",
                      name: "itemCount",
                      nameLocation: "5281:9:11",
                      nodeType: "VariableDeclaration",
                      scope: 2266,
                      src: "5273:17:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2184,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5273:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2189,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 2186,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "5293:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 2187,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1368,
                      src: "5293:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 2188,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5293:18:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5273:38:11",
                },
                {
                  assignments: [2191],
                  declarations: [
                    {
                      constant: false,
                      id: 2191,
                      mutability: "mutable",
                      name: "unsoldItemCount",
                      nameLocation: "5329:15:11",
                      nodeType: "VariableDeclaration",
                      scope: 2266,
                      src: "5321:23:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2190,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5321:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2199,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2198,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 2192,
                          name: "_itemIds",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1677,
                          src: "5347:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$1356_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 2193,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "current",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1368,
                        src: "5347:16:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer) view returns (uint256)",
                        },
                      },
                      id: 2194,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5347:18:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 2195,
                          name: "_itemsSold",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1680,
                          src: "5368:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$1356_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 2196,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "current",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1368,
                        src: "5368:18:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer) view returns (uint256)",
                        },
                      },
                      id: 2197,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5368:20:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5347:41:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5321:67:11",
                },
                {
                  assignments: [2201],
                  declarations: [
                    {
                      constant: false,
                      id: 2201,
                      mutability: "mutable",
                      name: "currentIndex",
                      nameLocation: "5406:12:11",
                      nodeType: "VariableDeclaration",
                      scope: 2266,
                      src: "5398:20:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2200,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5398:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2203,
                  initialValue: {
                    hexValue: "30",
                    id: 2202,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "5421:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5398:24:11",
                },
                {
                  assignments: [2208],
                  declarations: [
                    {
                      constant: false,
                      id: 2208,
                      mutability: "mutable",
                      name: "items",
                      nameLocation: "5453:5:11",
                      nodeType: "VariableDeclaration",
                      scope: 2266,
                      src: "5433:25:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2206,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2205,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "5433:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "5433:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2207,
                        nodeType: "ArrayTypeName",
                        src: "5433:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2215,
                  initialValue: {
                    arguments: [
                      {
                        id: 2213,
                        name: "unsoldItemCount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2191,
                        src: "5478:15:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2212,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "5461:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256) pure returns (struct NFTMarket.MarketItem memory[] memory)",
                      },
                      typeName: {
                        baseType: {
                          id: 2210,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2209,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "5465:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "5465:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2211,
                        nodeType: "ArrayTypeName",
                        src: "5465:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                    },
                    id: 2214,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5461:33:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5433:61:11",
                },
                {
                  body: {
                    id: 2262,
                    nodeType: "Block",
                    src: "5544:291:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2236,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2226,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "5562:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2230,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2229,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2227,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2217,
                                  src: "5577:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2228,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "5581:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "5577:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "5562:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2231,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "owner",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1709,
                            src: "5562:27:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 2234,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "5601:1:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 2233,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "5593:7:11",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 2232,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "5593:7:11",
                                typeDescriptions: {},
                              },
                            },
                            id: 2235,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "5593:10:11",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "5562:41:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2261,
                        nodeType: "IfStatement",
                        src: "5558:267:11",
                        trueBody: {
                          id: 2260,
                          nodeType: "Block",
                          src: "5605:220:11",
                          statements: [
                            {
                              assignments: [2238],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2238,
                                  mutability: "mutable",
                                  name: "currentId",
                                  nameLocation: "5631:9:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2260,
                                  src: "5623:17:11",
                                  stateVariable: false,
                                  storageLocation: "default",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  typeName: {
                                    id: 2237,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "5623:7:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2242,
                              initialValue: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2241,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2239,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2217,
                                  src: "5643:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2240,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "5647:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "5643:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "5623:25:11",
                            },
                            {
                              assignments: [2245],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2245,
                                  mutability: "mutable",
                                  name: "currentItem",
                                  nameLocation: "5685:11:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2260,
                                  src: "5666:30:11",
                                  stateVariable: false,
                                  storageLocation: "storage",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString: "struct NFTMarket.MarketItem",
                                  },
                                  typeName: {
                                    id: 2244,
                                    nodeType: "UserDefinedTypeName",
                                    pathNode: {
                                      id: 2243,
                                      name: "MarketItem",
                                      nodeType: "IdentifierPath",
                                      referencedDeclaration: 1718,
                                      src: "5666:10:11",
                                    },
                                    referencedDeclaration: 1718,
                                    src: "5666:10:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_MarketItem_$1718_storage_ptr",
                                      typeString: "struct NFTMarket.MarketItem",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2249,
                              initialValue: {
                                baseExpression: {
                                  id: 2246,
                                  name: "idToMarketItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 1730,
                                  src: "5699:14:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                  },
                                },
                                id: 2248,
                                indexExpression: {
                                  id: 2247,
                                  name: "currentId",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2238,
                                  src: "5714:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "5699:25:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_storage",
                                  typeString:
                                    "struct NFTMarket.MarketItem storage ref",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "5666:58:11",
                            },
                            {
                              expression: {
                                id: 2254,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  baseExpression: {
                                    id: 2250,
                                    name: "items",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2208,
                                    src: "5742:5:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                                      typeString:
                                        "struct NFTMarket.MarketItem memory[] memory",
                                    },
                                  },
                                  id: 2252,
                                  indexExpression: {
                                    id: 2251,
                                    name: "currentIndex",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2201,
                                    src: "5748:12:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: true,
                                  nodeType: "IndexAccess",
                                  src: "5742:19:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_memory_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem memory",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "=",
                                rightHandSide: {
                                  id: 2253,
                                  name: "currentItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2245,
                                  src: "5764:11:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem storage pointer",
                                  },
                                },
                                src: "5742:33:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_memory_ptr",
                                  typeString:
                                    "struct NFTMarket.MarketItem memory",
                                },
                              },
                              id: 2255,
                              nodeType: "ExpressionStatement",
                              src: "5742:33:11",
                            },
                            {
                              expression: {
                                id: 2258,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2256,
                                  name: "currentIndex",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2201,
                                  src: "5793:12:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2257,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "5809:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "5793:17:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2259,
                              nodeType: "ExpressionStatement",
                              src: "5793:17:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2222,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2220,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2217,
                      src: "5524:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2221,
                      name: "itemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2185,
                      src: "5528:9:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5524:13:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2263,
                  initializationExpression: {
                    assignments: [2217],
                    declarations: [
                      {
                        constant: false,
                        id: 2217,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "5517:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2263,
                        src: "5509:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2216,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "5509:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2219,
                    initialValue: {
                      hexValue: "30",
                      id: 2218,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5521:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "5509:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2224,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "5539:3:11",
                      subExpression: {
                        id: 2223,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2217,
                        src: "5539:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2225,
                    nodeType: "ExpressionStatement",
                    src: "5539:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "5504:331:11",
                },
                {
                  expression: {
                    id: 2264,
                    name: "items",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2208,
                    src: "5851:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  functionReturnParameters: 2183,
                  id: 2265,
                  nodeType: "Return",
                  src: "5844:12:11",
                },
              ],
            },
            functionSelector: "0f08efe0",
            id: 2267,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "fetchMarketItems",
            nameLocation: "5202:16:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2178,
              nodeType: "ParameterList",
              parameters: [],
              src: "5218:2:11",
            },
            returnParameters: {
              id: 2183,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2182,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2267,
                  src: "5242:19:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.MarketItem[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2180,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 2179,
                        name: "MarketItem",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1718,
                        src: "5242:10:11",
                      },
                      referencedDeclaration: 1718,
                      src: "5242:10:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_struct$_MarketItem_$1718_storage_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                    },
                    id: 2181,
                    nodeType: "ArrayTypeName",
                    src: "5242:12:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.MarketItem[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5241:21:11",
            },
            scope: 2486,
            src: "5193:670:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2375,
              nodeType: "Block",
              src: "5990:731:11",
              statements: [
                {
                  assignments: [2275],
                  declarations: [
                    {
                      constant: false,
                      id: 2275,
                      mutability: "mutable",
                      name: "totalItemCount",
                      nameLocation: "6008:14:11",
                      nodeType: "VariableDeclaration",
                      scope: 2375,
                      src: "6000:22:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2274,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6000:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2279,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 2276,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "6025:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 2277,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1368,
                      src: "6025:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 2278,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6025:18:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6000:43:11",
                },
                {
                  assignments: [2281],
                  declarations: [
                    {
                      constant: false,
                      id: 2281,
                      mutability: "mutable",
                      name: "itemCount",
                      nameLocation: "6061:9:11",
                      nodeType: "VariableDeclaration",
                      scope: 2375,
                      src: "6053:17:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2280,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6053:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2283,
                  initialValue: {
                    hexValue: "30",
                    id: 2282,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "6073:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6053:21:11",
                },
                {
                  assignments: [2285],
                  declarations: [
                    {
                      constant: false,
                      id: 2285,
                      mutability: "mutable",
                      name: "currentIndex",
                      nameLocation: "6092:12:11",
                      nodeType: "VariableDeclaration",
                      scope: 2375,
                      src: "6084:20:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2284,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6084:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2287,
                  initialValue: {
                    hexValue: "30",
                    id: 2286,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "6107:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6084:24:11",
                },
                {
                  body: {
                    id: 2313,
                    nodeType: "Block",
                    src: "6164:118:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2306,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2298,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "6182:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2302,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2301,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2299,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2289,
                                  src: "6197:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2300,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6201:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6197:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "6182:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2303,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "owner",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1709,
                            src: "6182:27:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              id: 2304,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "6213:3:11",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 2305,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "6213:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "6182:41:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2312,
                        nodeType: "IfStatement",
                        src: "6178:94:11",
                        trueBody: {
                          id: 2311,
                          nodeType: "Block",
                          src: "6225:47:11",
                          statements: [
                            {
                              expression: {
                                id: 2309,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2307,
                                  name: "itemCount",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2281,
                                  src: "6243:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2308,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6256:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6243:14:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2310,
                              nodeType: "ExpressionStatement",
                              src: "6243:14:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2294,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2292,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2289,
                      src: "6139:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2293,
                      name: "totalItemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2275,
                      src: "6143:14:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6139:18:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2314,
                  initializationExpression: {
                    assignments: [2289],
                    declarations: [
                      {
                        constant: false,
                        id: 2289,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "6132:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2314,
                        src: "6124:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2288,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "6124:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2291,
                    initialValue: {
                      hexValue: "30",
                      id: 2290,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "6136:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "6124:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2296,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "6159:3:11",
                      subExpression: {
                        id: 2295,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2289,
                        src: "6159:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2297,
                    nodeType: "ExpressionStatement",
                    src: "6159:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "6119:163:11",
                },
                {
                  assignments: [2319],
                  declarations: [
                    {
                      constant: false,
                      id: 2319,
                      mutability: "mutable",
                      name: "items",
                      nameLocation: "6312:5:11",
                      nodeType: "VariableDeclaration",
                      scope: 2375,
                      src: "6292:25:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2317,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2316,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "6292:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "6292:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2318,
                        nodeType: "ArrayTypeName",
                        src: "6292:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2326,
                  initialValue: {
                    arguments: [
                      {
                        id: 2324,
                        name: "itemCount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2281,
                        src: "6337:9:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2323,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "6320:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256) pure returns (struct NFTMarket.MarketItem memory[] memory)",
                      },
                      typeName: {
                        baseType: {
                          id: 2321,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2320,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "6324:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "6324:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2322,
                        nodeType: "ArrayTypeName",
                        src: "6324:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                    },
                    id: 2325,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6320:27:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6292:55:11",
                },
                {
                  body: {
                    id: 2371,
                    nodeType: "Block",
                    src: "6402:291:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2345,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2337,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "6420:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2341,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2340,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2338,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2328,
                                  src: "6435:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2339,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6439:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6435:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "6420:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2342,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "owner",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1709,
                            src: "6420:27:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              id: 2343,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "6451:3:11",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 2344,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "6451:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "6420:41:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2370,
                        nodeType: "IfStatement",
                        src: "6416:267:11",
                        trueBody: {
                          id: 2369,
                          nodeType: "Block",
                          src: "6463:220:11",
                          statements: [
                            {
                              assignments: [2347],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2347,
                                  mutability: "mutable",
                                  name: "currentId",
                                  nameLocation: "6489:9:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2369,
                                  src: "6481:17:11",
                                  stateVariable: false,
                                  storageLocation: "default",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  typeName: {
                                    id: 2346,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "6481:7:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2351,
                              initialValue: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2350,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2348,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2328,
                                  src: "6501:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2349,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6505:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6501:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "6481:25:11",
                            },
                            {
                              assignments: [2354],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2354,
                                  mutability: "mutable",
                                  name: "currentItem",
                                  nameLocation: "6543:11:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2369,
                                  src: "6524:30:11",
                                  stateVariable: false,
                                  storageLocation: "storage",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString: "struct NFTMarket.MarketItem",
                                  },
                                  typeName: {
                                    id: 2353,
                                    nodeType: "UserDefinedTypeName",
                                    pathNode: {
                                      id: 2352,
                                      name: "MarketItem",
                                      nodeType: "IdentifierPath",
                                      referencedDeclaration: 1718,
                                      src: "6524:10:11",
                                    },
                                    referencedDeclaration: 1718,
                                    src: "6524:10:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_MarketItem_$1718_storage_ptr",
                                      typeString: "struct NFTMarket.MarketItem",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2358,
                              initialValue: {
                                baseExpression: {
                                  id: 2355,
                                  name: "idToMarketItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 1730,
                                  src: "6557:14:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                  },
                                },
                                id: 2357,
                                indexExpression: {
                                  id: 2356,
                                  name: "currentId",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2347,
                                  src: "6572:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "6557:25:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_storage",
                                  typeString:
                                    "struct NFTMarket.MarketItem storage ref",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "6524:58:11",
                            },
                            {
                              expression: {
                                id: 2363,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  baseExpression: {
                                    id: 2359,
                                    name: "items",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2319,
                                    src: "6600:5:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                                      typeString:
                                        "struct NFTMarket.MarketItem memory[] memory",
                                    },
                                  },
                                  id: 2361,
                                  indexExpression: {
                                    id: 2360,
                                    name: "currentIndex",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2285,
                                    src: "6606:12:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: true,
                                  nodeType: "IndexAccess",
                                  src: "6600:19:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_memory_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem memory",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "=",
                                rightHandSide: {
                                  id: 2362,
                                  name: "currentItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2354,
                                  src: "6622:11:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem storage pointer",
                                  },
                                },
                                src: "6600:33:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_memory_ptr",
                                  typeString:
                                    "struct NFTMarket.MarketItem memory",
                                },
                              },
                              id: 2364,
                              nodeType: "ExpressionStatement",
                              src: "6600:33:11",
                            },
                            {
                              expression: {
                                id: 2367,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2365,
                                  name: "currentIndex",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2285,
                                  src: "6651:12:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2366,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6667:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6651:17:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2368,
                              nodeType: "ExpressionStatement",
                              src: "6651:17:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2333,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2331,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2328,
                      src: "6377:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2332,
                      name: "totalItemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2275,
                      src: "6381:14:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6377:18:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2372,
                  initializationExpression: {
                    assignments: [2328],
                    declarations: [
                      {
                        constant: false,
                        id: 2328,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "6370:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2372,
                        src: "6362:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2327,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "6362:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2330,
                    initialValue: {
                      hexValue: "30",
                      id: 2329,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "6374:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "6362:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2335,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "6397:3:11",
                      subExpression: {
                        id: 2334,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2328,
                        src: "6397:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2336,
                    nodeType: "ExpressionStatement",
                    src: "6397:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "6357:336:11",
                },
                {
                  expression: {
                    id: 2373,
                    name: "items",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2319,
                    src: "6709:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  functionReturnParameters: 2273,
                  id: 2374,
                  nodeType: "Return",
                  src: "6702:12:11",
                },
              ],
            },
            functionSelector: "202e3740",
            id: 2376,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "fetchMyNFTs",
            nameLocation: "5934:11:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2268,
              nodeType: "ParameterList",
              parameters: [],
              src: "5945:2:11",
            },
            returnParameters: {
              id: 2273,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2272,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2376,
                  src: "5969:19:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.MarketItem[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2270,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 2269,
                        name: "MarketItem",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1718,
                        src: "5969:10:11",
                      },
                      referencedDeclaration: 1718,
                      src: "5969:10:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_struct$_MarketItem_$1718_storage_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                    },
                    id: 2271,
                    nodeType: "ArrayTypeName",
                    src: "5969:12:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.MarketItem[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5968:21:11",
            },
            scope: 2486,
            src: "5925:796:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2484,
              nodeType: "Block",
              src: "6846:733:11",
              statements: [
                {
                  assignments: [2384],
                  declarations: [
                    {
                      constant: false,
                      id: 2384,
                      mutability: "mutable",
                      name: "totalItemCount",
                      nameLocation: "6864:14:11",
                      nodeType: "VariableDeclaration",
                      scope: 2484,
                      src: "6856:22:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2383,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6856:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2388,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 2385,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "6881:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 2386,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1368,
                      src: "6881:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 2387,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6881:18:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6856:43:11",
                },
                {
                  assignments: [2390],
                  declarations: [
                    {
                      constant: false,
                      id: 2390,
                      mutability: "mutable",
                      name: "itemCount",
                      nameLocation: "6917:9:11",
                      nodeType: "VariableDeclaration",
                      scope: 2484,
                      src: "6909:17:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2389,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6909:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2392,
                  initialValue: {
                    hexValue: "30",
                    id: 2391,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "6929:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6909:21:11",
                },
                {
                  assignments: [2394],
                  declarations: [
                    {
                      constant: false,
                      id: 2394,
                      mutability: "mutable",
                      name: "currentIndex",
                      nameLocation: "6948:12:11",
                      nodeType: "VariableDeclaration",
                      scope: 2484,
                      src: "6940:20:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2393,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6940:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2396,
                  initialValue: {
                    hexValue: "30",
                    id: 2395,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "6963:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6940:24:11",
                },
                {
                  body: {
                    id: 2422,
                    nodeType: "Block",
                    src: "7020:119:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2415,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2407,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "7038:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2411,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2410,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2408,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2398,
                                  src: "7053:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2409,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7057:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7053:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "7038:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2412,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "seller",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1707,
                            src: "7038:28:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              id: 2413,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "7070:3:11",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 2414,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "7070:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "7038:42:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2421,
                        nodeType: "IfStatement",
                        src: "7034:95:11",
                        trueBody: {
                          id: 2420,
                          nodeType: "Block",
                          src: "7082:47:11",
                          statements: [
                            {
                              expression: {
                                id: 2418,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2416,
                                  name: "itemCount",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2390,
                                  src: "7100:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2417,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7113:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7100:14:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2419,
                              nodeType: "ExpressionStatement",
                              src: "7100:14:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2403,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2401,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2398,
                      src: "6995:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2402,
                      name: "totalItemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2384,
                      src: "6999:14:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6995:18:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2423,
                  initializationExpression: {
                    assignments: [2398],
                    declarations: [
                      {
                        constant: false,
                        id: 2398,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "6988:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2423,
                        src: "6980:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2397,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "6980:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2400,
                    initialValue: {
                      hexValue: "30",
                      id: 2399,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "6992:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "6980:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2405,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "7015:3:11",
                      subExpression: {
                        id: 2404,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2398,
                        src: "7015:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2406,
                    nodeType: "ExpressionStatement",
                    src: "7015:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "6975:164:11",
                },
                {
                  assignments: [2428],
                  declarations: [
                    {
                      constant: false,
                      id: 2428,
                      mutability: "mutable",
                      name: "items",
                      nameLocation: "7169:5:11",
                      nodeType: "VariableDeclaration",
                      scope: 2484,
                      src: "7149:25:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2426,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2425,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "7149:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "7149:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2427,
                        nodeType: "ArrayTypeName",
                        src: "7149:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2435,
                  initialValue: {
                    arguments: [
                      {
                        id: 2433,
                        name: "itemCount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2390,
                        src: "7194:9:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2432,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "7177:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256) pure returns (struct NFTMarket.MarketItem memory[] memory)",
                      },
                      typeName: {
                        baseType: {
                          id: 2430,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2429,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "7181:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "7181:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2431,
                        nodeType: "ArrayTypeName",
                        src: "7181:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                    },
                    id: 2434,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7177:27:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "7149:55:11",
                },
                {
                  body: {
                    id: 2480,
                    nodeType: "Block",
                    src: "7259:292:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2454,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2446,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "7277:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2450,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2449,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2447,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2437,
                                  src: "7292:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2448,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7296:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7292:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "7277:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2451,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "seller",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1707,
                            src: "7277:28:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              id: 2452,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "7309:3:11",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 2453,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "7309:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "7277:42:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2479,
                        nodeType: "IfStatement",
                        src: "7273:268:11",
                        trueBody: {
                          id: 2478,
                          nodeType: "Block",
                          src: "7321:220:11",
                          statements: [
                            {
                              assignments: [2456],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2456,
                                  mutability: "mutable",
                                  name: "currentId",
                                  nameLocation: "7347:9:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2478,
                                  src: "7339:17:11",
                                  stateVariable: false,
                                  storageLocation: "default",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  typeName: {
                                    id: 2455,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "7339:7:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2460,
                              initialValue: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2459,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2457,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2437,
                                  src: "7359:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2458,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7363:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7359:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "7339:25:11",
                            },
                            {
                              assignments: [2463],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2463,
                                  mutability: "mutable",
                                  name: "currentItem",
                                  nameLocation: "7401:11:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2478,
                                  src: "7382:30:11",
                                  stateVariable: false,
                                  storageLocation: "storage",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString: "struct NFTMarket.MarketItem",
                                  },
                                  typeName: {
                                    id: 2462,
                                    nodeType: "UserDefinedTypeName",
                                    pathNode: {
                                      id: 2461,
                                      name: "MarketItem",
                                      nodeType: "IdentifierPath",
                                      referencedDeclaration: 1718,
                                      src: "7382:10:11",
                                    },
                                    referencedDeclaration: 1718,
                                    src: "7382:10:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_MarketItem_$1718_storage_ptr",
                                      typeString: "struct NFTMarket.MarketItem",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2467,
                              initialValue: {
                                baseExpression: {
                                  id: 2464,
                                  name: "idToMarketItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 1730,
                                  src: "7415:14:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                  },
                                },
                                id: 2466,
                                indexExpression: {
                                  id: 2465,
                                  name: "currentId",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2456,
                                  src: "7430:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "7415:25:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_storage",
                                  typeString:
                                    "struct NFTMarket.MarketItem storage ref",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "7382:58:11",
                            },
                            {
                              expression: {
                                id: 2472,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  baseExpression: {
                                    id: 2468,
                                    name: "items",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2428,
                                    src: "7458:5:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                                      typeString:
                                        "struct NFTMarket.MarketItem memory[] memory",
                                    },
                                  },
                                  id: 2470,
                                  indexExpression: {
                                    id: 2469,
                                    name: "currentIndex",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2394,
                                    src: "7464:12:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: true,
                                  nodeType: "IndexAccess",
                                  src: "7458:19:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_memory_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem memory",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "=",
                                rightHandSide: {
                                  id: 2471,
                                  name: "currentItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2463,
                                  src: "7480:11:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem storage pointer",
                                  },
                                },
                                src: "7458:33:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_memory_ptr",
                                  typeString:
                                    "struct NFTMarket.MarketItem memory",
                                },
                              },
                              id: 2473,
                              nodeType: "ExpressionStatement",
                              src: "7458:33:11",
                            },
                            {
                              expression: {
                                id: 2476,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2474,
                                  name: "currentIndex",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2394,
                                  src: "7509:12:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2475,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7525:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7509:17:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2477,
                              nodeType: "ExpressionStatement",
                              src: "7509:17:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2442,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2440,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2437,
                      src: "7234:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2441,
                      name: "totalItemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2384,
                      src: "7238:14:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "7234:18:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2481,
                  initializationExpression: {
                    assignments: [2437],
                    declarations: [
                      {
                        constant: false,
                        id: 2437,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "7227:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2481,
                        src: "7219:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2436,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "7219:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2439,
                    initialValue: {
                      hexValue: "30",
                      id: 2438,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "7231:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "7219:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2444,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "7254:3:11",
                      subExpression: {
                        id: 2443,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2437,
                        src: "7254:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2445,
                    nodeType: "ExpressionStatement",
                    src: "7254:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "7214:337:11",
                },
                {
                  expression: {
                    id: 2482,
                    name: "items",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2428,
                    src: "7567:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  functionReturnParameters: 2382,
                  id: 2483,
                  nodeType: "Return",
                  src: "7560:12:11",
                },
              ],
            },
            functionSelector: "f064c32e",
            id: 2485,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "fetchItemsCreated",
            nameLocation: "6784:17:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2377,
              nodeType: "ParameterList",
              parameters: [],
              src: "6801:2:11",
            },
            returnParameters: {
              id: 2382,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2381,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2485,
                  src: "6825:19:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.MarketItem[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2379,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 2378,
                        name: "MarketItem",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1718,
                        src: "6825:10:11",
                      },
                      referencedDeclaration: 1718,
                      src: "6825:10:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_struct$_MarketItem_$1718_storage_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                    },
                    id: 2380,
                    nodeType: "ArrayTypeName",
                    src: "6825:12:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.MarketItem[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6824:21:11",
            },
            scope: 2486,
            src: "6775:804:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 2487,
        src: "246:7335:11",
      },
    ],
    src: "46:7536:11",
  },
  legacyAST: {
    absolutePath: "project:/contracts/NFTMarket.sol",
    exportedSymbols: {
      Address: [1328],
      Context: [1350],
      Counters: [1424],
      ERC165: [1651],
      ERC721: [870],
      IERC165: [1663],
      IERC721: [986],
      IERC721Metadata: [1031],
      IERC721Receiver: [1004],
      NFTMarket: [2486],
      ReentrancyGuard: [39],
      Strings: [1627],
    },
    id: 2487,
    license: "MIT OR Apache-2.0",
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 1665,
        literals: ["solidity", "^", "0.8", ".3"],
        nodeType: "PragmaDirective",
        src: "46:23:11",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/Counters.sol",
        file: "@openzeppelin/contracts/utils/Counters.sol",
        id: 1666,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 2487,
        sourceUnit: 1425,
        src: "71:52:11",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        file: "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        id: 1667,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 2487,
        sourceUnit: 40,
        src: "124:62:11",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        file: "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        id: 1668,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 2487,
        sourceUnit: 871,
        src: "187:57:11",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 1669,
              name: "ReentrancyGuard",
              nodeType: "IdentifierPath",
              referencedDeclaration: 39,
              src: "268:15:11",
            },
            id: 1670,
            nodeType: "InheritanceSpecifier",
            src: "268:15:11",
          },
        ],
        contractDependencies: [39],
        contractKind: "contract",
        fullyImplemented: true,
        id: 2486,
        linearizedBaseContracts: [2486, 39],
        name: "NFTMarket",
        nameLocation: "255:9:11",
        nodeType: "ContractDefinition",
        nodes: [
          {
            id: 1674,
            libraryName: {
              id: 1671,
              name: "Counters",
              nodeType: "IdentifierPath",
              referencedDeclaration: 1424,
              src: "296:8:11",
            },
            nodeType: "UsingForDirective",
            src: "290:36:11",
            typeName: {
              id: 1673,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 1672,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 1356,
                src: "309:16:11",
              },
              referencedDeclaration: 1356,
              src: "309:16:11",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$1356_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
          },
          {
            constant: false,
            id: 1677,
            mutability: "mutable",
            name: "_itemIds",
            nameLocation: "356:8:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "331:33:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$1356_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 1676,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 1675,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 1356,
                src: "331:16:11",
              },
              referencedDeclaration: 1356,
              src: "331:16:11",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$1356_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            id: 1680,
            mutability: "mutable",
            name: "_itemsSold",
            nameLocation: "395:10:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "370:35:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_struct$_Counter_$1356_storage",
              typeString: "struct Counters.Counter",
            },
            typeName: {
              id: 1679,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 1678,
                name: "Counters.Counter",
                nodeType: "IdentifierPath",
                referencedDeclaration: 1356,
                src: "370:16:11",
              },
              referencedDeclaration: 1356,
              src: "370:16:11",
              typeDescriptions: {
                typeIdentifier: "t_struct$_Counter_$1356_storage_ptr",
                typeString: "struct Counters.Counter",
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            id: 1682,
            mutability: "mutable",
            name: "owner",
            nameLocation: "428:5:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "412:21:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address_payable",
              typeString: "address payable",
            },
            typeName: {
              id: 1681,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "412:15:11",
              stateMutability: "payable",
              typeDescriptions: {
                typeIdentifier: "t_address_payable",
                typeString: "address payable",
              },
            },
            visibility: "internal",
          },
          {
            constant: false,
            id: 1685,
            mutability: "mutable",
            name: "listingPrice",
            nameLocation: "447:12:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "439:34:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 1683,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "439:7:11",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "302e303235",
              id: 1684,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "462:11:11",
              subdenomination: "ether",
              typeDescriptions: {
                typeIdentifier: "t_rational_25000000000000000_by_1",
                typeString: "int_const 25000000000000000",
              },
              value: "0.025",
            },
            visibility: "internal",
          },
          {
            body: {
              id: 1696,
              nodeType: "Block",
              src: "494:44:11",
              statements: [
                {
                  expression: {
                    id: 1694,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 1688,
                      name: "owner",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1682,
                      src: "504:5:11",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          expression: {
                            id: 1691,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "520:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1692,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "520:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 1690,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "512:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_payable_$",
                          typeString: "type(address payable)",
                        },
                        typeName: {
                          id: 1689,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "512:8:11",
                          stateMutability: "payable",
                          typeDescriptions: {},
                        },
                      },
                      id: 1693,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "512:19:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "504:27:11",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 1695,
                  nodeType: "ExpressionStatement",
                  src: "504:27:11",
                },
              ],
            },
            id: 1697,
            implemented: true,
            kind: "constructor",
            modifiers: [],
            name: "",
            nameLocation: "-1:-1:-1",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1686,
              nodeType: "ParameterList",
              parameters: [],
              src: "491:2:11",
            },
            returnParameters: {
              id: 1687,
              nodeType: "ParameterList",
              parameters: [],
              src: "494:0:11",
            },
            scope: 2486,
            src: "480:58:11",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            canonicalName: "NFTMarket.MarketItem",
            id: 1718,
            members: [
              {
                constant: false,
                id: 1699,
                mutability: "mutable",
                name: "itemId",
                nameLocation: "580:6:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "572:14:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1698,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "572:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1701,
                mutability: "mutable",
                name: "nftContract",
                nameLocation: "604:11:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "596:19:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
                typeName: {
                  id: 1700,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "596:7:11",
                  stateMutability: "nonpayable",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1703,
                mutability: "mutable",
                name: "tokenId",
                nameLocation: "633:7:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "625:15:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1702,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "625:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1705,
                mutability: "mutable",
                name: "sellerId",
                nameLocation: "658:8:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "650:16:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1704,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "650:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1707,
                mutability: "mutable",
                name: "seller",
                nameLocation: "692:6:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "676:22:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address_payable",
                  typeString: "address payable",
                },
                typeName: {
                  id: 1706,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "676:15:11",
                  stateMutability: "payable",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1709,
                mutability: "mutable",
                name: "owner",
                nameLocation: "724:5:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "708:21:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address_payable",
                  typeString: "address payable",
                },
                typeName: {
                  id: 1708,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "708:15:11",
                  stateMutability: "payable",
                  typeDescriptions: {
                    typeIdentifier: "t_address_payable",
                    typeString: "address payable",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1711,
                mutability: "mutable",
                name: "price",
                nameLocation: "747:5:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "739:13:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1710,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "739:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1713,
                mutability: "mutable",
                name: "isAuction",
                nameLocation: "767:9:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "762:14:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
                typeName: {
                  id: 1712,
                  name: "bool",
                  nodeType: "ElementaryTypeName",
                  src: "762:4:11",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1715,
                mutability: "mutable",
                name: "sellDate",
                nameLocation: "794:8:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "786:16:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1714,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "786:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1717,
                mutability: "mutable",
                name: "sold",
                nameLocation: "817:4:11",
                nodeType: "VariableDeclaration",
                scope: 1718,
                src: "812:9:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
                typeName: {
                  id: 1716,
                  name: "bool",
                  nodeType: "ElementaryTypeName",
                  src: "812:4:11",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "MarketItem",
            nameLocation: "551:10:11",
            nodeType: "StructDefinition",
            scope: 2486,
            src: "544:284:11",
            visibility: "public",
          },
          {
            canonicalName: "NFTMarket.Bid",
            id: 1725,
            members: [
              {
                constant: false,
                id: 1720,
                mutability: "mutable",
                name: "itemId",
                nameLocation: "863:6:11",
                nodeType: "VariableDeclaration",
                scope: 1725,
                src: "855:14:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1719,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "855:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1722,
                mutability: "mutable",
                name: "bid",
                nameLocation: "887:3:11",
                nodeType: "VariableDeclaration",
                scope: 1725,
                src: "879:11:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 1721,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "879:7:11",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 1724,
                mutability: "mutable",
                name: "buyer",
                nameLocation: "908:5:11",
                nodeType: "VariableDeclaration",
                scope: 1725,
                src: "900:13:11",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
                typeName: {
                  id: 1723,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "900:7:11",
                  stateMutability: "nonpayable",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "Bid",
            nameLocation: "841:3:11",
            nodeType: "StructDefinition",
            scope: 2486,
            src: "834:86:11",
            visibility: "public",
          },
          {
            constant: false,
            id: 1730,
            mutability: "mutable",
            name: "idToMarketItem",
            nameLocation: "965:14:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "926:53:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier:
                "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
              typeString: "mapping(uint256 => struct NFTMarket.MarketItem)",
            },
            typeName: {
              id: 1729,
              keyType: {
                id: 1726,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "934:7:11",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "926:30:11",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                typeString: "mapping(uint256 => struct NFTMarket.MarketItem)",
              },
              valueType: {
                id: 1728,
                nodeType: "UserDefinedTypeName",
                pathNode: {
                  id: 1727,
                  name: "MarketItem",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 1718,
                  src: "945:10:11",
                },
                referencedDeclaration: 1718,
                src: "945:10:11",
                typeDescriptions: {
                  typeIdentifier: "t_struct$_MarketItem_$1718_storage_ptr",
                  typeString: "struct NFTMarket.MarketItem",
                },
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            id: 1736,
            mutability: "mutable",
            name: "idToBid",
            nameLocation: "1020:7:11",
            nodeType: "VariableDeclaration",
            scope: 2486,
            src: "986:41:11",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier:
                "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
              typeString: "mapping(uint256 => struct NFTMarket.Bid[])",
            },
            typeName: {
              id: 1735,
              keyType: {
                id: 1731,
                name: "uint256",
                nodeType: "ElementaryTypeName",
                src: "994:7:11",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
              },
              nodeType: "Mapping",
              src: "986:25:11",
              typeDescriptions: {
                typeIdentifier:
                  "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                typeString: "mapping(uint256 => struct NFTMarket.Bid[])",
              },
              valueType: {
                baseType: {
                  id: 1733,
                  nodeType: "UserDefinedTypeName",
                  pathNode: {
                    id: 1732,
                    name: "Bid",
                    nodeType: "IdentifierPath",
                    referencedDeclaration: 1725,
                    src: "1005:3:11",
                  },
                  referencedDeclaration: 1725,
                  src: "1005:3:11",
                  typeDescriptions: {
                    typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                    typeString: "struct NFTMarket.Bid",
                  },
                },
                id: 1734,
                nodeType: "ArrayTypeName",
                src: "1005:5:11",
                typeDescriptions: {
                  typeIdentifier:
                    "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                  typeString: "struct NFTMarket.Bid[]",
                },
              },
            },
            visibility: "private",
          },
          {
            anonymous: false,
            id: 1754,
            name: "MarketItemCreated",
            nameLocation: "1040:17:11",
            nodeType: "EventDefinition",
            parameters: {
              id: 1753,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1738,
                  indexed: true,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "1083:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1067:22:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1737,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1067:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1740,
                  indexed: true,
                  mutability: "mutable",
                  name: "nftContract",
                  nameLocation: "1115:11:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1099:27:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1739,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1099:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1742,
                  indexed: true,
                  mutability: "mutable",
                  name: "tokenId",
                  nameLocation: "1152:7:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1136:23:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1741,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1136:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1744,
                  indexed: false,
                  mutability: "mutable",
                  name: "sellerId",
                  nameLocation: "1177:8:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1169:16:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1743,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1169:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1746,
                  indexed: false,
                  mutability: "mutable",
                  name: "seller",
                  nameLocation: "1203:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1195:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1745,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1195:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1748,
                  indexed: false,
                  mutability: "mutable",
                  name: "owner",
                  nameLocation: "1227:5:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1219:13:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1747,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1219:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1750,
                  indexed: false,
                  mutability: "mutable",
                  name: "price",
                  nameLocation: "1250:5:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1242:13:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1749,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1242:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1752,
                  indexed: false,
                  mutability: "mutable",
                  name: "sold",
                  nameLocation: "1270:4:11",
                  nodeType: "VariableDeclaration",
                  scope: 1754,
                  src: "1265:9:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 1751,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "1265:4:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1057:223:11",
            },
            src: "1034:247:11",
          },
          {
            body: {
              id: 1761,
              nodeType: "Block",
              src: "1396:36:11",
              statements: [
                {
                  expression: {
                    id: 1759,
                    name: "listingPrice",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 1685,
                    src: "1413:12:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 1758,
                  id: 1760,
                  nodeType: "Return",
                  src: "1406:19:11",
                },
              ],
            },
            functionSelector: "12e85585",
            id: 1762,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "getListingPrice",
            nameLocation: "1348:15:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1755,
              nodeType: "ParameterList",
              parameters: [],
              src: "1363:2:11",
            },
            returnParameters: {
              id: 1758,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1757,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1762,
                  src: "1387:7:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1756,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1387:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1386:9:11",
            },
            scope: 2486,
            src: "1339:93:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1860,
              nodeType: "Block",
              src: "1704:851:11",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1782,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          id: 1780,
                          name: "price",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1768,
                          src: "1722:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">",
                        rightExpression: {
                          hexValue: "30",
                          id: 1781,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "1730:1:11",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_0_by_1",
                            typeString: "int_const 0",
                          },
                          value: "0",
                        },
                        src: "1722:9:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "5072696365206d757374206265206174206c65617374203120776569",
                        id: 1783,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1733:30:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                          typeString:
                            'literal_string "Price must be at least 1 wei"',
                        },
                        value: "Price must be at least 1 wei",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
                          typeString:
                            'literal_string "Price must be at least 1 wei"',
                        },
                      ],
                      id: 1779,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "1714:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1784,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1714:50:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1785,
                  nodeType: "ExpressionStatement",
                  src: "1714:50:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1790,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 1787,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "1795:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1788,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "1795:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          id: 1789,
                          name: "listingPrice",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1685,
                          src: "1808:12:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "1795:25:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "5072696365206d75737420626520657175616c20746f206c697374696e67207072696365",
                        id: 1791,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1834:38:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1",
                          typeString:
                            'literal_string "Price must be equal to listing price"',
                        },
                        value: "Price must be equal to listing price",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1",
                          typeString:
                            'literal_string "Price must be equal to listing price"',
                        },
                      ],
                      id: 1786,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "1774:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1792,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1774:108:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1793,
                  nodeType: "ExpressionStatement",
                  src: "1774:108:11",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 1794,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "1893:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 1796,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "increment",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1382,
                      src: "1893:18:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_struct$_Counter_$1356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer)",
                      },
                    },
                    id: 1797,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1893:20:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1798,
                  nodeType: "ExpressionStatement",
                  src: "1893:20:11",
                },
                {
                  assignments: [1800],
                  declarations: [
                    {
                      constant: false,
                      id: 1800,
                      mutability: "mutable",
                      name: "itemId",
                      nameLocation: "1931:6:11",
                      nodeType: "VariableDeclaration",
                      scope: 1860,
                      src: "1923:14:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 1799,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "1923:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1804,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 1801,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "1940:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 1802,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1368,
                      src: "1940:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 1803,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1940:18:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "1923:35:11",
                },
                {
                  expression: {
                    id: 1830,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 1805,
                        name: "idToMarketItem",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1730,
                        src: "1969:14:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                          typeString:
                            "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                        },
                      },
                      id: 1807,
                      indexExpression: {
                        id: 1806,
                        name: "itemId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1800,
                        src: "1984:6:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "1969:22:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                        typeString: "struct NFTMarket.MarketItem storage ref",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          id: 1809,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1800,
                          src: "2018:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          id: 1810,
                          name: "nftContract",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1764,
                          src: "2038:11:11",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        {
                          id: 1811,
                          name: "tokenId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1766,
                          src: "2063:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          id: 1812,
                          name: "sellerId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1770,
                          src: "2084:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          arguments: [
                            {
                              expression: {
                                id: 1815,
                                name: "msg",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 4294967281,
                                src: "2114:3:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_magic_message",
                                  typeString: "msg",
                                },
                              },
                              id: 1816,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sender",
                              nodeType: "MemberAccess",
                              src: "2114:10:11",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            id: 1814,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "2106:8:11",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_payable_$",
                              typeString: "type(address payable)",
                            },
                            typeName: {
                              id: 1813,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "2106:8:11",
                              stateMutability: "payable",
                              typeDescriptions: {},
                            },
                          },
                          id: 1817,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2106:19:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                        {
                          arguments: [
                            {
                              arguments: [
                                {
                                  hexValue: "30",
                                  id: 1822,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "2155:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_0_by_1",
                                    typeString: "int_const 0",
                                  },
                                  value: "0",
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_rational_0_by_1",
                                    typeString: "int_const 0",
                                  },
                                ],
                                id: 1821,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: "ElementaryTypeNameExpression",
                                src: "2147:7:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_type$_t_address_$",
                                  typeString: "type(address)",
                                },
                                typeName: {
                                  id: 1820,
                                  name: "address",
                                  nodeType: "ElementaryTypeName",
                                  src: "2147:7:11",
                                  typeDescriptions: {},
                                },
                              },
                              id: 1823,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "typeConversion",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "2147:10:11",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            id: 1819,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "2139:8:11",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_payable_$",
                              typeString: "type(address payable)",
                            },
                            typeName: {
                              id: 1818,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "2139:8:11",
                              stateMutability: "payable",
                              typeDescriptions: {},
                            },
                          },
                          id: 1824,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "typeConversion",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2139:19:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                        },
                        {
                          id: 1825,
                          name: "price",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1768,
                          src: "2172:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          id: 1826,
                          name: "isAuction",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1772,
                          src: "2191:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        {
                          id: 1827,
                          name: "sellDate",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1774,
                          src: "2214:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          hexValue: "66616c7365",
                          id: 1828,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "bool",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "2236:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          value: "false",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                          {
                            typeIdentifier: "t_address_payable",
                            typeString: "address payable",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        ],
                        id: 1808,
                        name: "MarketItem",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1718,
                        src: "1994:10:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_struct$_MarketItem_$1718_storage_ptr_$",
                          typeString:
                            "type(struct NFTMarket.MarketItem storage pointer)",
                        },
                      },
                      id: 1829,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "structConstructorCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "1994:257:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem memory",
                      },
                    },
                    src: "1969:282:11",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                      typeString: "struct NFTMarket.MarketItem storage ref",
                    },
                  },
                  id: 1831,
                  nodeType: "ExpressionStatement",
                  src: "1969:282:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 1836,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "2296:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1837,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "2296:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        arguments: [
                          {
                            id: 1840,
                            name: "this",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967268,
                            src: "2316:4:11",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          ],
                          id: 1839,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "2308:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 1838,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "2308:7:11",
                            typeDescriptions: {},
                          },
                        },
                        id: 1841,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "2308:13:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1842,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1766,
                        src: "2323:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 1833,
                            name: "nftContract",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1764,
                            src: "2270:11:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 1832,
                          name: "IERC721",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 986,
                          src: "2262:7:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_type$_t_contract$_IERC721_$986_$",
                            typeString: "type(contract IERC721)",
                          },
                        },
                        id: 1834,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "2262:20:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC721_$986",
                          typeString: "contract IERC721",
                        },
                      },
                      id: 1835,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transferFrom",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 939,
                      src: "2262:33:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256) external",
                      },
                    },
                    id: 1843,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2262:69:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1844,
                  nodeType: "ExpressionStatement",
                  src: "2262:69:11",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 1846,
                        name: "itemId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1800,
                        src: "2378:6:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 1847,
                        name: "nftContract",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1764,
                        src: "2398:11:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1848,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1766,
                        src: "2423:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        id: 1849,
                        name: "sellerId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1770,
                        src: "2444:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 1850,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "2466:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1851,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "2466:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        arguments: [
                          {
                            hexValue: "30",
                            id: 1854,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "2498:1:11",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                            value: "0",
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_rational_0_by_1",
                              typeString: "int_const 0",
                            },
                          ],
                          id: 1853,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "2490:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 1852,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "2490:7:11",
                            typeDescriptions: {},
                          },
                        },
                        id: 1855,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "2490:10:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1856,
                        name: "price",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1768,
                        src: "2514:5:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        hexValue: "66616c7365",
                        id: 1857,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "bool",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2533:5:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        value: "false",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      ],
                      id: 1845,
                      name: "MarketItemCreated",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1754,
                      src: "2347:17:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        typeString:
                          "function (uint256,address,uint256,uint256,address,address,uint256,bool)",
                      },
                    },
                    id: 1858,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2347:201:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1859,
                  nodeType: "EmitStatement",
                  src: "2342:206:11",
                },
              ],
            },
            functionSelector: "144d149c",
            id: 1861,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 1777,
                kind: "modifierInvocation",
                modifierName: {
                  id: 1776,
                  name: "nonReentrant",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 38,
                  src: "1691:12:11",
                },
                nodeType: "ModifierInvocation",
                src: "1691:12:11",
              },
            ],
            name: "createMarketItem",
            nameLocation: "1500:16:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1775,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1764,
                  mutability: "mutable",
                  name: "nftContract",
                  nameLocation: "1534:11:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1526:19:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1763,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1526:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1766,
                  mutability: "mutable",
                  name: "tokenId",
                  nameLocation: "1563:7:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1555:15:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1765,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1555:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1768,
                  mutability: "mutable",
                  name: "price",
                  nameLocation: "1588:5:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1580:13:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1767,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1580:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1770,
                  mutability: "mutable",
                  name: "sellerId",
                  nameLocation: "1611:8:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1603:16:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1769,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1603:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1772,
                  mutability: "mutable",
                  name: "isAuction",
                  nameLocation: "1634:9:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1629:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 1771,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "1629:4:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1774,
                  mutability: "mutable",
                  name: "sellDate",
                  nameLocation: "1661:8:11",
                  nodeType: "VariableDeclaration",
                  scope: 1861,
                  src: "1653:16:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1773,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1653:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1516:159:11",
            },
            returnParameters: {
              id: 1778,
              nodeType: "ParameterList",
              parameters: [],
              src: "1704:0:11",
            },
            scope: 2486,
            src: "1491:1064:11",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1945,
              nodeType: "Block",
              src: "2805:580:11",
              statements: [
                {
                  assignments: [1871],
                  declarations: [
                    {
                      constant: false,
                      id: 1871,
                      mutability: "mutable",
                      name: "price",
                      nameLocation: "2823:5:11",
                      nodeType: "VariableDeclaration",
                      scope: 1945,
                      src: "2815:13:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 1870,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2815:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1876,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 1872,
                        name: "idToMarketItem",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1730,
                        src: "2831:14:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                          typeString:
                            "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                        },
                      },
                      id: 1874,
                      indexExpression: {
                        id: 1873,
                        name: "itemId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1865,
                        src: "2846:6:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "2831:22:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                        typeString: "struct NFTMarket.MarketItem storage ref",
                      },
                    },
                    id: 1875,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "price",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 1711,
                    src: "2831:28:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2815:44:11",
                },
                {
                  assignments: [1878],
                  declarations: [
                    {
                      constant: false,
                      id: 1878,
                      mutability: "mutable",
                      name: "tokenId",
                      nameLocation: "2877:7:11",
                      nodeType: "VariableDeclaration",
                      scope: 1945,
                      src: "2869:15:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 1877,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "2869:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1883,
                  initialValue: {
                    expression: {
                      baseExpression: {
                        id: 1879,
                        name: "idToMarketItem",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1730,
                        src: "2887:14:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                          typeString:
                            "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                        },
                      },
                      id: 1881,
                      indexExpression: {
                        id: 1880,
                        name: "itemId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1865,
                        src: "2902:6:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "IndexAccess",
                      src: "2887:22:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                        typeString: "struct NFTMarket.MarketItem storage ref",
                      },
                    },
                    id: 1882,
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    memberName: "tokenId",
                    nodeType: "MemberAccess",
                    referencedDeclaration: 1703,
                    src: "2887:30:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "2869:48:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1888,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 1885,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "2948:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1886,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "2948:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          id: 1887,
                          name: "price",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1871,
                          src: "2961:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "2948:18:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "506c65617365207375626d6974207468652061736b696e6720707269636520696e206f7264657220746f20636f6d706c65746520746865207075726368617365",
                        id: 1889,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2980:66:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564",
                          typeString:
                            'literal_string "Please submit the asking price in order to complete the purchase"',
                        },
                        value:
                          "Please submit the asking price in order to complete the purchase",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564",
                          typeString:
                            'literal_string "Please submit the asking price in order to complete the purchase"',
                        },
                      ],
                      id: 1884,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "2927:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1890,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2927:129:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1891,
                  nodeType: "ExpressionStatement",
                  src: "2927:129:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 1897,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "3106:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1898,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "value",
                        nodeType: "MemberAccess",
                        src: "3106:9:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        expression: {
                          baseExpression: {
                            id: 1892,
                            name: "idToMarketItem",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1730,
                            src: "3067:14:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                              typeString:
                                "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                            },
                          },
                          id: 1894,
                          indexExpression: {
                            id: 1893,
                            name: "itemId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1865,
                            src: "3082:6:11",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "3067:22:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage",
                            typeString:
                              "struct NFTMarket.MarketItem storage ref",
                          },
                        },
                        id: 1895,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "seller",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1707,
                        src: "3067:29:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 1896,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "3067:38:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 1899,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3067:49:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1900,
                  nodeType: "ExpressionStatement",
                  src: "3067:49:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 1907,
                            name: "this",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967268,
                            src: "3168:4:11",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          ],
                          id: 1906,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "3160:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 1905,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "3160:7:11",
                            typeDescriptions: {},
                          },
                        },
                        id: 1908,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3160:13:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 1909,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 4294967281,
                          src: "3175:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 1910,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "3175:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1911,
                        name: "tokenId",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1878,
                        src: "3187:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 1902,
                            name: "nftContract",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1863,
                            src: "3134:11:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 1901,
                          name: "IERC721",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 986,
                          src: "3126:7:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_type$_t_contract$_IERC721_$986_$",
                            typeString: "type(contract IERC721)",
                          },
                        },
                        id: 1903,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3126:20:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC721_$986",
                          typeString: "contract IERC721",
                        },
                      },
                      id: 1904,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transferFrom",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 939,
                      src: "3126:33:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256) external",
                      },
                    },
                    id: 1912,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3126:69:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1913,
                  nodeType: "ExpressionStatement",
                  src: "3126:69:11",
                },
                {
                  expression: {
                    id: 1923,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 1914,
                          name: "idToMarketItem",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1730,
                          src: "3205:14:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                          },
                        },
                        id: 1916,
                        indexExpression: {
                          id: 1915,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1865,
                          src: "3220:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3205:22:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                          typeString: "struct NFTMarket.MarketItem storage ref",
                        },
                      },
                      id: 1917,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "owner",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1709,
                      src: "3205:28:11",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          expression: {
                            id: 1920,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "3244:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1921,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sender",
                          nodeType: "MemberAccess",
                          src: "3244:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 1919,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "3236:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_payable_$",
                          typeString: "type(address payable)",
                        },
                        typeName: {
                          id: 1918,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "3236:8:11",
                          stateMutability: "payable",
                          typeDescriptions: {},
                        },
                      },
                      id: 1922,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "3236:19:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "3205:50:11",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 1924,
                  nodeType: "ExpressionStatement",
                  src: "3205:50:11",
                },
                {
                  expression: {
                    id: 1930,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 1925,
                          name: "idToMarketItem",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1730,
                          src: "3265:14:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                          },
                        },
                        id: 1927,
                        indexExpression: {
                          id: 1926,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1865,
                          src: "3280:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3265:22:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                          typeString: "struct NFTMarket.MarketItem storage ref",
                        },
                      },
                      id: 1928,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "sold",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1717,
                      src: "3265:27:11",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "74727565",
                      id: 1929,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3295:4:11",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    src: "3265:34:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 1931,
                  nodeType: "ExpressionStatement",
                  src: "3265:34:11",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 1932,
                        name: "_itemsSold",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1680,
                        src: "3309:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 1934,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "increment",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1382,
                      src: "3309:20:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_struct$_Counter_$1356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer)",
                      },
                    },
                    id: 1935,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3309:22:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1936,
                  nodeType: "ExpressionStatement",
                  src: "3309:22:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 1942,
                        name: "listingPrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1685,
                        src: "3365:12:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 1939,
                            name: "owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1682,
                            src: "3349:5:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          ],
                          id: 1938,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "3341:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 1937,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "3341:8:11",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 1940,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3341:14:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 1941,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "3341:23:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 1943,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3341:37:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1944,
                  nodeType: "ExpressionStatement",
                  src: "3341:37:11",
                },
              ],
            },
            functionSelector: "c23b139e",
            id: 1946,
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 1868,
                kind: "modifierInvocation",
                modifierName: {
                  id: 1867,
                  name: "nonReentrant",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 38,
                  src: "2788:12:11",
                },
                nodeType: "ModifierInvocation",
                src: "2788:12:11",
              },
            ],
            name: "createMarketSale",
            nameLocation: "2695:16:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1866,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1863,
                  mutability: "mutable",
                  name: "nftContract",
                  nameLocation: "2720:11:11",
                  nodeType: "VariableDeclaration",
                  scope: 1946,
                  src: "2712:19:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1862,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "2712:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1865,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "2741:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 1946,
                  src: "2733:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1864,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2733:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2711:37:11",
            },
            returnParameters: {
              id: 1869,
              nodeType: "ParameterList",
              parameters: [],
              src: "2805:0:11",
            },
            scope: 2486,
            src: "2686:699:11",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2026,
              nodeType: "Block",
              src: "3522:532:11",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1963,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 1960,
                            name: "msg",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967281,
                            src: "3540:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_message",
                              typeString: "msg",
                            },
                          },
                          id: 1961,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "value",
                          nodeType: "MemberAccess",
                          src: "3540:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          id: 1962,
                          name: "bid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1950,
                          src: "3553:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "3540:16:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "56616c7565206973206c657373207468616e207468652062696464696e67207072696365",
                        id: 1964,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3558:38:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae",
                          typeString:
                            'literal_string "Value is less than the bidding price"',
                        },
                        value: "Value is less than the bidding price",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_39c4b394225d659c2d409e6d79b94527fd3e1eeadac2ebfe5e58ca7bd43b7bae",
                          typeString:
                            'literal_string "Value is less than the bidding price"',
                        },
                      ],
                      id: 1959,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "3532:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1965,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3532:65:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1966,
                  nodeType: "ExpressionStatement",
                  src: "3532:65:11",
                },
                {
                  assignments: [1971],
                  declarations: [
                    {
                      constant: false,
                      id: 1971,
                      mutability: "mutable",
                      name: "bids",
                      nameLocation: "3620:4:11",
                      nodeType: "VariableDeclaration",
                      scope: 2026,
                      src: "3607:17:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.Bid[]",
                      },
                      typeName: {
                        baseType: {
                          id: 1969,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 1968,
                            name: "Bid",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1725,
                            src: "3607:3:11",
                          },
                          referencedDeclaration: 1725,
                          src: "3607:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                            typeString: "struct NFTMarket.Bid",
                          },
                        },
                        id: 1970,
                        nodeType: "ArrayTypeName",
                        src: "3607:5:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.Bid[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1975,
                  initialValue: {
                    baseExpression: {
                      id: 1972,
                      name: "idToBid",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1736,
                      src: "3627:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                      },
                    },
                    id: 1974,
                    indexExpression: {
                      id: 1973,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1948,
                      src: "3635:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "3627:15:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                      typeString:
                        "struct NFTMarket.Bid storage ref[] storage ref",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3607:35:11",
                },
                {
                  assignments: [1978],
                  declarations: [
                    {
                      constant: false,
                      id: 1978,
                      mutability: "mutable",
                      name: "item",
                      nameLocation: "3670:4:11",
                      nodeType: "VariableDeclaration",
                      scope: 2026,
                      src: "3652:22:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                      typeName: {
                        id: 1977,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 1976,
                          name: "MarketItem",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 1718,
                          src: "3652:10:11",
                        },
                        referencedDeclaration: 1718,
                        src: "3652:10:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_MarketItem_$1718_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1982,
                  initialValue: {
                    baseExpression: {
                      id: 1979,
                      name: "idToMarketItem",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1730,
                      src: "3677:14:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                      },
                    },
                    id: 1981,
                    indexExpression: {
                      id: 1980,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1948,
                      src: "3692:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "3677:22:11",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                      typeString: "struct NFTMarket.MarketItem storage ref",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3652:47:11",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 1986,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 1983,
                        name: "bids",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1971,
                        src: "3713:4:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                          typeString: "struct NFTMarket.Bid memory[] memory",
                        },
                      },
                      id: 1984,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "length",
                      nodeType: "MemberAccess",
                      src: "3713:11:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: ">",
                    rightExpression: {
                      hexValue: "30",
                      id: 1985,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "3727:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    src: "3713:15:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  falseBody: {
                    id: 2009,
                    nodeType: "Block",
                    src: "3877:82:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 2005,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                id: 2002,
                                name: "bid",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1950,
                                src: "3899:3:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: ">=",
                              rightExpression: {
                                expression: {
                                  id: 2003,
                                  name: "item",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 1978,
                                  src: "3906:4:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_memory_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem memory",
                                  },
                                },
                                id: 2004,
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "price",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 1711,
                                src: "3906:10:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "3899:17:11",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                            {
                              hexValue:
                                "426964206973206c657373207468616e206d696e2e207072696365",
                              id: 2006,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "3918:29:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831",
                                typeString:
                                  'literal_string "Bid is less than min. price"',
                              },
                              value: "Bid is less than min. price",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_d61702c92e0c8841af0645830ed5d0cf63e726d059fc09aa3dc5eff3218eb831",
                                typeString:
                                  'literal_string "Bid is less than min. price"',
                              },
                            ],
                            id: 2001,
                            name: "require",
                            nodeType: "Identifier",
                            overloadedDeclarations: [4294967278, 4294967278],
                            referencedDeclaration: 4294967278,
                            src: "3891:7:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              typeString: "function (bool,string memory) pure",
                            },
                          },
                          id: 2007,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3891:57:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2008,
                        nodeType: "ExpressionStatement",
                        src: "3891:57:11",
                      },
                    ],
                  },
                  id: 2010,
                  nodeType: "IfStatement",
                  src: "3709:250:11",
                  trueBody: {
                    id: 2000,
                    nodeType: "Block",
                    src: "3730:141:11",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 1996,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                id: 1988,
                                name: "bid",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1950,
                                src: "3769:3:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: ">",
                              rightExpression: {
                                expression: {
                                  baseExpression: {
                                    id: 1989,
                                    name: "bids",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 1971,
                                    src: "3775:4:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                                      typeString:
                                        "struct NFTMarket.Bid memory[] memory",
                                    },
                                  },
                                  id: 1994,
                                  indexExpression: {
                                    commonType: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    id: 1993,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    leftExpression: {
                                      expression: {
                                        id: 1990,
                                        name: "bids",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 1971,
                                        src: "3780:4:11",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                                          typeString:
                                            "struct NFTMarket.Bid memory[] memory",
                                        },
                                      },
                                      id: 1991,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      memberName: "length",
                                      nodeType: "MemberAccess",
                                      src: "3780:11:11",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                    nodeType: "BinaryOperation",
                                    operator: "-",
                                    rightExpression: {
                                      hexValue: "31",
                                      id: 1992,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      kind: "number",
                                      lValueRequested: false,
                                      nodeType: "Literal",
                                      src: "3794:1:11",
                                      typeDescriptions: {
                                        typeIdentifier: "t_rational_1_by_1",
                                        typeString: "int_const 1",
                                      },
                                      value: "1",
                                    },
                                    src: "3780:15:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: false,
                                  nodeType: "IndexAccess",
                                  src: "3775:21:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_Bid_$1725_memory_ptr",
                                    typeString: "struct NFTMarket.Bid memory",
                                  },
                                },
                                id: 1995,
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "bid",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 1722,
                                src: "3775:25:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              src: "3769:31:11",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                            {
                              hexValue:
                                "426964206973206c657373207468616e206c617374206269642e",
                              id: 1997,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "3818:28:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274",
                                typeString:
                                  'literal_string "Bid is less than last bid."',
                              },
                              value: "Bid is less than last bid.",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_983c84b8e38ede5f9c2152b85acf850e293a294e3ebda96aa8444a1205365274",
                                typeString:
                                  'literal_string "Bid is less than last bid."',
                              },
                            ],
                            id: 1987,
                            name: "require",
                            nodeType: "Identifier",
                            overloadedDeclarations: [4294967278, 4294967278],
                            referencedDeclaration: 4294967278,
                            src: "3744:7:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              typeString: "function (bool,string memory) pure",
                            },
                          },
                          id: 1998,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3744:116:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 1999,
                        nodeType: "ExpressionStatement",
                        src: "3744:116:11",
                      },
                    ],
                  },
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 2016,
                            name: "itemId",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1948,
                            src: "3994:6:11",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          {
                            id: 2017,
                            name: "bid",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1950,
                            src: "4002:3:11",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          {
                            id: 2018,
                            name: "buyer",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1952,
                            src: "4007:5:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2015,
                          name: "Bid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1725,
                          src: "3990:3:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_type$_t_struct$_Bid_$1725_storage_ptr_$",
                            typeString:
                              "type(struct NFTMarket.Bid storage pointer)",
                          },
                        },
                        id: 2019,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "structConstructorCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3990:23:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                          typeString: "struct NFTMarket.Bid memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                          typeString: "struct NFTMarket.Bid memory",
                        },
                      ],
                      expression: {
                        baseExpression: {
                          id: 2011,
                          name: "idToBid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1736,
                          src: "3969:7:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                          },
                        },
                        id: 2013,
                        indexExpression: {
                          id: 2012,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1948,
                          src: "3977:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "3969:15:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                          typeString:
                            "struct NFTMarket.Bid storage ref[] storage ref",
                        },
                      },
                      id: 2014,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "push",
                      nodeType: "MemberAccess",
                      src: "3969:20:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_arraypush_nonpayable$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr_$_t_struct$_Bid_$1725_storage_$returns$__$bound_to$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr_$",
                        typeString:
                          "function (struct NFTMarket.Bid storage ref[] storage pointer,struct NFTMarket.Bid storage ref)",
                      },
                    },
                    id: 2020,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3969:45:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2021,
                  nodeType: "ExpressionStatement",
                  src: "3969:45:11",
                },
                {
                  expression: {
                    baseExpression: {
                      id: 2022,
                      name: "idToBid",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1736,
                      src: "4032:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                      },
                    },
                    id: 2024,
                    indexExpression: {
                      id: 2023,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1948,
                      src: "4040:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "4032:15:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                      typeString:
                        "struct NFTMarket.Bid storage ref[] storage ref",
                    },
                  },
                  functionReturnParameters: 1958,
                  id: 2025,
                  nodeType: "Return",
                  src: "4025:22:11",
                },
              ],
            },
            functionSelector: "c2d3c07b",
            id: 2027,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "createBid",
            nameLocation: "3400:9:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1953,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1948,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "3427:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 2027,
                  src: "3419:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1947,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3419:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1950,
                  mutability: "mutable",
                  name: "bid",
                  nameLocation: "3451:3:11",
                  nodeType: "VariableDeclaration",
                  scope: 2027,
                  src: "3443:11:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1949,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "3443:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1952,
                  mutability: "mutable",
                  name: "buyer",
                  nameLocation: "3472:5:11",
                  nodeType: "VariableDeclaration",
                  scope: 2027,
                  src: "3464:13:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1951,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3464:7:11",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3409:74:11",
            },
            returnParameters: {
              id: 1958,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1957,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2027,
                  src: "3508:12:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.Bid[]",
                  },
                  typeName: {
                    baseType: {
                      id: 1955,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 1954,
                        name: "Bid",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1725,
                        src: "3508:3:11",
                      },
                      referencedDeclaration: 1725,
                      src: "3508:3:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                        typeString: "struct NFTMarket.Bid",
                      },
                    },
                    id: 1956,
                    nodeType: "ArrayTypeName",
                    src: "3508:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.Bid[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3507:14:11",
            },
            scope: 2486,
            src: "3391:663:11",
            stateMutability: "payable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2162,
              nodeType: "Block",
              src: "4106:924:11",
              statements: [
                {
                  assignments: [2036],
                  declarations: [
                    {
                      constant: false,
                      id: 2036,
                      mutability: "mutable",
                      name: "bids",
                      nameLocation: "4129:4:11",
                      nodeType: "VariableDeclaration",
                      scope: 2162,
                      src: "4116:17:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.Bid[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2034,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2033,
                            name: "Bid",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1725,
                            src: "4116:3:11",
                          },
                          referencedDeclaration: 1725,
                          src: "4116:3:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                            typeString: "struct NFTMarket.Bid",
                          },
                        },
                        id: 2035,
                        nodeType: "ArrayTypeName",
                        src: "4116:5:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.Bid[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2040,
                  initialValue: {
                    baseExpression: {
                      id: 2037,
                      name: "idToBid",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1736,
                      src: "4136:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                      },
                    },
                    id: 2039,
                    indexExpression: {
                      id: 2038,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2029,
                      src: "4144:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "4136:15:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                      typeString:
                        "struct NFTMarket.Bid storage ref[] storage ref",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4116:35:11",
                },
                {
                  assignments: [2043],
                  declarations: [
                    {
                      constant: false,
                      id: 2043,
                      mutability: "mutable",
                      name: "item",
                      nameLocation: "4179:4:11",
                      nodeType: "VariableDeclaration",
                      scope: 2162,
                      src: "4161:22:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_MarketItem_$1718_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                      typeName: {
                        id: 2042,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 2041,
                          name: "MarketItem",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 1718,
                          src: "4161:10:11",
                        },
                        referencedDeclaration: 1718,
                        src: "4161:10:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_MarketItem_$1718_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2047,
                  initialValue: {
                    baseExpression: {
                      id: 2044,
                      name: "idToMarketItem",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1730,
                      src: "4186:14:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                      },
                    },
                    id: 2046,
                    indexExpression: {
                      id: 2045,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2029,
                      src: "4201:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "4186:22:11",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                      typeString: "struct NFTMarket.MarketItem storage ref",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4161:47:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 2052,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 2049,
                            name: "item",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2043,
                            src: "4226:4:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_MarketItem_$1718_memory_ptr",
                              typeString: "struct NFTMarket.MarketItem memory",
                            },
                          },
                          id: 2050,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sold",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 1717,
                          src: "4226:9:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "==",
                        rightExpression: {
                          hexValue: "66616c7365",
                          id: 2051,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "bool",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "4239:5:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                          value: "false",
                        },
                        src: "4226:18:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue: "4974656d20616c726561647920736f6c64",
                        id: 2053,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4246:19:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
                          typeString: 'literal_string "Item already sold"',
                        },
                        value: "Item already sold",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f",
                          typeString: 'literal_string "Item already sold"',
                        },
                      ],
                      id: 2048,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4218:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2054,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4218:48:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2055,
                  nodeType: "ExpressionStatement",
                  src: "4218:48:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 2061,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 2057,
                            name: "item",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2043,
                            src: "4284:4:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_MarketItem_$1718_memory_ptr",
                              typeString: "struct NFTMarket.MarketItem memory",
                            },
                          },
                          id: 2058,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "sellDate",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 1715,
                          src: "4284:13:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">=",
                        rightExpression: {
                          expression: {
                            id: 2059,
                            name: "block",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967292,
                            src: "4301:5:11",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_block",
                              typeString: "block",
                            },
                          },
                          id: 2060,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "timestamp",
                          nodeType: "MemberAccess",
                          src: "4301:15:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4284:32:11",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "41756374696f6e20686173206e6f7420656e64656420796574",
                        id: 2062,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4318:27:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1",
                          typeString:
                            'literal_string "Auction has not ended yet"',
                        },
                        value: "Auction has not ended yet",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_725f0491ddb487e31b399445581da08c1c8303b163fd81d4b0d87af68d5232c1",
                          typeString:
                            'literal_string "Auction has not ended yet"',
                        },
                      ],
                      id: 2056,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4276:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 2063,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4276:70:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2064,
                  nodeType: "ExpressionStatement",
                  src: "4276:70:11",
                },
                {
                  assignments: [2067],
                  declarations: [
                    {
                      constant: false,
                      id: 2067,
                      mutability: "mutable",
                      name: "highestBid",
                      nameLocation: "4401:10:11",
                      nodeType: "VariableDeclaration",
                      scope: 2162,
                      src: "4390:21:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                        typeString: "struct NFTMarket.Bid",
                      },
                      typeName: {
                        id: 2066,
                        nodeType: "UserDefinedTypeName",
                        pathNode: {
                          id: 2065,
                          name: "Bid",
                          nodeType: "IdentifierPath",
                          referencedDeclaration: 1725,
                          src: "4390:3:11",
                        },
                        referencedDeclaration: 1725,
                        src: "4390:3:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                          typeString: "struct NFTMarket.Bid",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2074,
                  initialValue: {
                    baseExpression: {
                      id: 2068,
                      name: "bids",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2036,
                      src: "4414:4:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.Bid memory[] memory",
                      },
                    },
                    id: 2073,
                    indexExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 2072,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 2069,
                          name: "bids",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2036,
                          src: "4419:4:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory[] memory",
                          },
                        },
                        id: 2070,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "length",
                        nodeType: "MemberAccess",
                        src: "4419:11:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "31",
                        id: 2071,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4433:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1_by_1",
                          typeString: "int_const 1",
                        },
                        value: "1",
                      },
                      src: "4419:15:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "4414:21:11",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                      typeString: "struct NFTMarket.Bid memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4390:45:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 2080,
                          name: "highestBid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2067,
                          src: "4466:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory",
                          },
                        },
                        id: 2081,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "bid",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1722,
                        src: "4466:14:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        expression: {
                          id: 2075,
                          name: "item",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2043,
                          src: "4445:4:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_memory_ptr",
                            typeString: "struct NFTMarket.MarketItem memory",
                          },
                        },
                        id: 2078,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "seller",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1707,
                        src: "4445:11:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 2079,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "4445:20:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 2082,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4445:36:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2083,
                  nodeType: "ExpressionStatement",
                  src: "4445:36:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 2091,
                            name: "this",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967268,
                            src: "4551:4:11",
                            typeDescriptions: {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_contract$_NFTMarket_$2486",
                              typeString: "contract NFTMarket",
                            },
                          ],
                          id: 2090,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "4543:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_$",
                            typeString: "type(address)",
                          },
                          typeName: {
                            id: 2089,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "4543:7:11",
                            typeDescriptions: {},
                          },
                        },
                        id: 2092,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4543:13:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 2093,
                          name: "highestBid",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2067,
                          src: "4570:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory",
                          },
                        },
                        id: 2094,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "buyer",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1724,
                        src: "4570:16:11",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 2095,
                          name: "item",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2043,
                          src: "4600:4:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_memory_ptr",
                            typeString: "struct NFTMarket.MarketItem memory",
                          },
                        },
                        id: 2096,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1703,
                        src: "4600:12:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            expression: {
                              id: 2085,
                              name: "item",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 2043,
                              src: "4499:4:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_memory_ptr",
                                typeString:
                                  "struct NFTMarket.MarketItem memory",
                              },
                            },
                            id: 2086,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "nftContract",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1701,
                            src: "4499:16:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 2084,
                          name: "IERC721",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 986,
                          src: "4491:7:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_type$_t_contract$_IERC721_$986_$",
                            typeString: "type(contract IERC721)",
                          },
                        },
                        id: 2087,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4491:25:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IERC721_$986",
                          typeString: "contract IERC721",
                        },
                      },
                      id: 2088,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transferFrom",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 939,
                      src: "4491:38:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,uint256) external",
                      },
                    },
                    id: 2097,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4491:131:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2098,
                  nodeType: "ExpressionStatement",
                  src: "4491:131:11",
                },
                {
                  expression: {
                    id: 2108,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 2099,
                          name: "idToMarketItem",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1730,
                          src: "4632:14:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                          },
                        },
                        id: 2101,
                        indexExpression: {
                          id: 2100,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2029,
                          src: "4647:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "4632:22:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                          typeString: "struct NFTMarket.MarketItem storage ref",
                        },
                      },
                      id: 2102,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "owner",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1709,
                      src: "4632:28:11",
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          expression: {
                            id: 2105,
                            name: "highestBid",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2067,
                            src: "4671:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                              typeString: "struct NFTMarket.Bid memory",
                            },
                          },
                          id: 2106,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberName: "buyer",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 1724,
                          src: "4671:16:11",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 2104,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        nodeType: "ElementaryTypeNameExpression",
                        src: "4663:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_type$_t_address_payable_$",
                          typeString: "type(address payable)",
                        },
                        typeName: {
                          id: 2103,
                          name: "address",
                          nodeType: "ElementaryTypeName",
                          src: "4663:8:11",
                          stateMutability: "payable",
                          typeDescriptions: {},
                        },
                      },
                      id: 2107,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "4663:25:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_address_payable",
                        typeString: "address payable",
                      },
                    },
                    src: "4632:56:11",
                    typeDescriptions: {
                      typeIdentifier: "t_address_payable",
                      typeString: "address payable",
                    },
                  },
                  id: 2109,
                  nodeType: "ExpressionStatement",
                  src: "4632:56:11",
                },
                {
                  expression: {
                    id: 2115,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      expression: {
                        baseExpression: {
                          id: 2110,
                          name: "idToMarketItem",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1730,
                          src: "4698:14:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                            typeString:
                              "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                          },
                        },
                        id: 2112,
                        indexExpression: {
                          id: 2111,
                          name: "itemId",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2029,
                          src: "4713:6:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "IndexAccess",
                        src: "4698:22:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_MarketItem_$1718_storage",
                          typeString: "struct NFTMarket.MarketItem storage ref",
                        },
                      },
                      id: 2113,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      memberName: "sold",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1717,
                      src: "4698:27:11",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "74727565",
                      id: 2114,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4728:4:11",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    src: "4698:34:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2116,
                  nodeType: "ExpressionStatement",
                  src: "4698:34:11",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 2117,
                        name: "_itemsSold",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1680,
                        src: "4742:10:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 2119,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "increment",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1382,
                      src: "4742:20:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_struct$_Counter_$1356_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer)",
                      },
                    },
                    id: 2120,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4742:22:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2121,
                  nodeType: "ExpressionStatement",
                  src: "4742:22:11",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 2127,
                        name: "listingPrice",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1685,
                        src: "4798:12:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        arguments: [
                          {
                            id: 2124,
                            name: "owner",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1682,
                            src: "4782:5:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          ],
                          id: 2123,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          nodeType: "ElementaryTypeNameExpression",
                          src: "4774:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_type$_t_address_payable_$",
                            typeString: "type(address payable)",
                          },
                          typeName: {
                            id: 2122,
                            name: "address",
                            nodeType: "ElementaryTypeName",
                            src: "4774:8:11",
                            stateMutability: "payable",
                            typeDescriptions: {},
                          },
                        },
                        id: 2125,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "typeConversion",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4774:14:11",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_address_payable",
                          typeString: "address payable",
                        },
                      },
                      id: 2126,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "transfer",
                      nodeType: "MemberAccess",
                      src: "4774:23:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        typeString: "function (uint256)",
                      },
                    },
                    id: 2128,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4774:37:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 2129,
                  nodeType: "ExpressionStatement",
                  src: "4774:37:11",
                },
                {
                  body: {
                    id: 2160,
                    nodeType: "Block",
                    src: "4913:111:11",
                    statements: [
                      {
                        assignments: [2145],
                        declarations: [
                          {
                            constant: false,
                            id: 2145,
                            mutability: "mutable",
                            name: "currBid",
                            nameLocation: "4938:7:11",
                            nodeType: "VariableDeclaration",
                            scope: 2160,
                            src: "4927:18:11",
                            stateVariable: false,
                            storageLocation: "memory",
                            typeDescriptions: {
                              typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                              typeString: "struct NFTMarket.Bid",
                            },
                            typeName: {
                              id: 2144,
                              nodeType: "UserDefinedTypeName",
                              pathNode: {
                                id: 2143,
                                name: "Bid",
                                nodeType: "IdentifierPath",
                                referencedDeclaration: 1725,
                                src: "4927:3:11",
                              },
                              referencedDeclaration: 1725,
                              src: "4927:3:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_Bid_$1725_storage_ptr",
                                typeString: "struct NFTMarket.Bid",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 2149,
                        initialValue: {
                          baseExpression: {
                            id: 2146,
                            name: "bids",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2036,
                            src: "4948:4:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                              typeString:
                                "struct NFTMarket.Bid memory[] memory",
                            },
                          },
                          id: 2148,
                          indexExpression: {
                            id: 2147,
                            name: "i",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 2131,
                            src: "4953:1:11",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4948:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Bid_$1725_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "4927:28:11",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                id: 2156,
                                name: "currBid",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 2145,
                                src: "5001:7:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_Bid_$1725_memory_ptr",
                                  typeString: "struct NFTMarket.Bid memory",
                                },
                              },
                              id: 2157,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "bid",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 1722,
                              src: "5001:11:11",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            ],
                            expression: {
                              arguments: [
                                {
                                  expression: {
                                    id: 2152,
                                    name: "currBid",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2145,
                                    src: "4977:7:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_Bid_$1725_memory_ptr",
                                      typeString: "struct NFTMarket.Bid memory",
                                    },
                                  },
                                  id: 2153,
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberName: "buyer",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 1724,
                                  src: "4977:13:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                ],
                                id: 2151,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: "ElementaryTypeNameExpression",
                                src: "4969:8:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_type$_t_address_payable_$",
                                  typeString: "type(address payable)",
                                },
                                typeName: {
                                  id: 2150,
                                  name: "address",
                                  nodeType: "ElementaryTypeName",
                                  src: "4969:8:11",
                                  stateMutability: "payable",
                                  typeDescriptions: {},
                                },
                              },
                              id: 2154,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "typeConversion",
                              lValueRequested: false,
                              names: [],
                              nodeType: "FunctionCall",
                              src: "4969:22:11",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_address_payable",
                                typeString: "address payable",
                              },
                            },
                            id: 2155,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "transfer",
                            nodeType: "MemberAccess",
                            src: "4969:31:11",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              typeString: "function (uint256)",
                            },
                          },
                          id: 2158,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4969:44:11",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 2159,
                        nodeType: "ExpressionStatement",
                        src: "4969:44:11",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2139,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2134,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2131,
                      src: "4887:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 2138,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 2135,
                          name: "bids",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 2036,
                          src: "4891:4:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                            typeString: "struct NFTMarket.Bid memory[] memory",
                          },
                        },
                        id: 2136,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "length",
                        nodeType: "MemberAccess",
                        src: "4891:11:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "-",
                      rightExpression: {
                        hexValue: "32",
                        id: 2137,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4905:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_2_by_1",
                          typeString: "int_const 2",
                        },
                        value: "2",
                      },
                      src: "4891:15:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4887:19:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2161,
                  initializationExpression: {
                    assignments: [2131],
                    declarations: [
                      {
                        constant: false,
                        id: 2131,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "4880:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2161,
                        src: "4872:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2130,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "4872:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2133,
                    initialValue: {
                      hexValue: "30",
                      id: 2132,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4884:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "4872:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2141,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "4908:3:11",
                      subExpression: {
                        id: 2140,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2131,
                        src: "4908:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2142,
                    nodeType: "ExpressionStatement",
                    src: "4908:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "4867:157:11",
                },
              ],
            },
            functionSelector: "951fe563",
            id: 2163,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "createBidSale",
            nameLocation: "4069:13:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2030,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2029,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "4091:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 2163,
                  src: "4083:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2028,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "4083:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4082:16:11",
            },
            returnParameters: {
              id: 2031,
              nodeType: "ParameterList",
              parameters: [],
              src: "4106:0:11",
            },
            scope: 2486,
            src: "4060:970:11",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2176,
              nodeType: "Block",
              src: "5106:39:11",
              statements: [
                {
                  expression: {
                    baseExpression: {
                      id: 2172,
                      name: "idToBid",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1736,
                      src: "5123:7:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_$",
                        typeString:
                          "mapping(uint256 => struct NFTMarket.Bid storage ref[] storage ref)",
                      },
                    },
                    id: 2174,
                    indexExpression: {
                      id: 2173,
                      name: "itemId",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2165,
                      src: "5131:6:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    isConstant: false,
                    isLValue: true,
                    isPure: false,
                    lValueRequested: false,
                    nodeType: "IndexAccess",
                    src: "5123:15:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage",
                      typeString:
                        "struct NFTMarket.Bid storage ref[] storage ref",
                    },
                  },
                  functionReturnParameters: 2171,
                  id: 2175,
                  nodeType: "Return",
                  src: "5116:22:11",
                },
              ],
            },
            functionSelector: "7f95c99f",
            id: 2177,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "fetchBids",
            nameLocation: "5045:9:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2166,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2165,
                  mutability: "mutable",
                  name: "itemId",
                  nameLocation: "5063:6:11",
                  nodeType: "VariableDeclaration",
                  scope: 2177,
                  src: "5055:14:11",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 2164,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5055:7:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5054:16:11",
            },
            returnParameters: {
              id: 2171,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2170,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2177,
                  src: "5092:12:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_Bid_$1725_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.Bid[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2168,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 2167,
                        name: "Bid",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1725,
                        src: "5092:3:11",
                      },
                      referencedDeclaration: 1725,
                      src: "5092:3:11",
                      typeDescriptions: {
                        typeIdentifier: "t_struct$_Bid_$1725_storage_ptr",
                        typeString: "struct NFTMarket.Bid",
                      },
                    },
                    id: 2169,
                    nodeType: "ArrayTypeName",
                    src: "5092:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_Bid_$1725_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.Bid[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5091:14:11",
            },
            scope: 2486,
            src: "5036:109:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2266,
              nodeType: "Block",
              src: "5263:600:11",
              statements: [
                {
                  assignments: [2185],
                  declarations: [
                    {
                      constant: false,
                      id: 2185,
                      mutability: "mutable",
                      name: "itemCount",
                      nameLocation: "5281:9:11",
                      nodeType: "VariableDeclaration",
                      scope: 2266,
                      src: "5273:17:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2184,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5273:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2189,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 2186,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "5293:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 2187,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1368,
                      src: "5293:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 2188,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5293:18:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5273:38:11",
                },
                {
                  assignments: [2191],
                  declarations: [
                    {
                      constant: false,
                      id: 2191,
                      mutability: "mutable",
                      name: "unsoldItemCount",
                      nameLocation: "5329:15:11",
                      nodeType: "VariableDeclaration",
                      scope: 2266,
                      src: "5321:23:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2190,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5321:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2199,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2198,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 2192,
                          name: "_itemIds",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1677,
                          src: "5347:8:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$1356_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 2193,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "current",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1368,
                        src: "5347:16:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer) view returns (uint256)",
                        },
                      },
                      id: 2194,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5347:18:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      arguments: [],
                      expression: {
                        argumentTypes: [],
                        expression: {
                          id: 2195,
                          name: "_itemsSold",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1680,
                          src: "5368:10:11",
                          typeDescriptions: {
                            typeIdentifier: "t_struct$_Counter_$1356_storage",
                            typeString: "struct Counters.Counter storage ref",
                          },
                        },
                        id: 2196,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "current",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 1368,
                        src: "5368:18:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                          typeString:
                            "function (struct Counters.Counter storage pointer) view returns (uint256)",
                        },
                      },
                      id: 2197,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5368:20:11",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5347:41:11",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5321:67:11",
                },
                {
                  assignments: [2201],
                  declarations: [
                    {
                      constant: false,
                      id: 2201,
                      mutability: "mutable",
                      name: "currentIndex",
                      nameLocation: "5406:12:11",
                      nodeType: "VariableDeclaration",
                      scope: 2266,
                      src: "5398:20:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2200,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "5398:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2203,
                  initialValue: {
                    hexValue: "30",
                    id: 2202,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "5421:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5398:24:11",
                },
                {
                  assignments: [2208],
                  declarations: [
                    {
                      constant: false,
                      id: 2208,
                      mutability: "mutable",
                      name: "items",
                      nameLocation: "5453:5:11",
                      nodeType: "VariableDeclaration",
                      scope: 2266,
                      src: "5433:25:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2206,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2205,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "5433:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "5433:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2207,
                        nodeType: "ArrayTypeName",
                        src: "5433:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2215,
                  initialValue: {
                    arguments: [
                      {
                        id: 2213,
                        name: "unsoldItemCount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2191,
                        src: "5478:15:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2212,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "5461:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256) pure returns (struct NFTMarket.MarketItem memory[] memory)",
                      },
                      typeName: {
                        baseType: {
                          id: 2210,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2209,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "5465:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "5465:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2211,
                        nodeType: "ArrayTypeName",
                        src: "5465:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                    },
                    id: 2214,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5461:33:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "5433:61:11",
                },
                {
                  body: {
                    id: 2262,
                    nodeType: "Block",
                    src: "5544:291:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2236,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2226,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "5562:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2230,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2229,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2227,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2217,
                                  src: "5577:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2228,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "5581:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "5577:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "5562:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2231,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "owner",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1709,
                            src: "5562:27:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 2234,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "5601:1:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 2233,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "5593:7:11",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 2232,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "5593:7:11",
                                typeDescriptions: {},
                              },
                            },
                            id: 2235,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "5593:10:11",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "5562:41:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2261,
                        nodeType: "IfStatement",
                        src: "5558:267:11",
                        trueBody: {
                          id: 2260,
                          nodeType: "Block",
                          src: "5605:220:11",
                          statements: [
                            {
                              assignments: [2238],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2238,
                                  mutability: "mutable",
                                  name: "currentId",
                                  nameLocation: "5631:9:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2260,
                                  src: "5623:17:11",
                                  stateVariable: false,
                                  storageLocation: "default",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  typeName: {
                                    id: 2237,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "5623:7:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2242,
                              initialValue: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2241,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2239,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2217,
                                  src: "5643:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2240,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "5647:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "5643:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "5623:25:11",
                            },
                            {
                              assignments: [2245],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2245,
                                  mutability: "mutable",
                                  name: "currentItem",
                                  nameLocation: "5685:11:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2260,
                                  src: "5666:30:11",
                                  stateVariable: false,
                                  storageLocation: "storage",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString: "struct NFTMarket.MarketItem",
                                  },
                                  typeName: {
                                    id: 2244,
                                    nodeType: "UserDefinedTypeName",
                                    pathNode: {
                                      id: 2243,
                                      name: "MarketItem",
                                      nodeType: "IdentifierPath",
                                      referencedDeclaration: 1718,
                                      src: "5666:10:11",
                                    },
                                    referencedDeclaration: 1718,
                                    src: "5666:10:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_MarketItem_$1718_storage_ptr",
                                      typeString: "struct NFTMarket.MarketItem",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2249,
                              initialValue: {
                                baseExpression: {
                                  id: 2246,
                                  name: "idToMarketItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 1730,
                                  src: "5699:14:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                  },
                                },
                                id: 2248,
                                indexExpression: {
                                  id: 2247,
                                  name: "currentId",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2238,
                                  src: "5714:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "5699:25:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_storage",
                                  typeString:
                                    "struct NFTMarket.MarketItem storage ref",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "5666:58:11",
                            },
                            {
                              expression: {
                                id: 2254,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  baseExpression: {
                                    id: 2250,
                                    name: "items",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2208,
                                    src: "5742:5:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                                      typeString:
                                        "struct NFTMarket.MarketItem memory[] memory",
                                    },
                                  },
                                  id: 2252,
                                  indexExpression: {
                                    id: 2251,
                                    name: "currentIndex",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2201,
                                    src: "5748:12:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: true,
                                  nodeType: "IndexAccess",
                                  src: "5742:19:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_memory_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem memory",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "=",
                                rightHandSide: {
                                  id: 2253,
                                  name: "currentItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2245,
                                  src: "5764:11:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem storage pointer",
                                  },
                                },
                                src: "5742:33:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_memory_ptr",
                                  typeString:
                                    "struct NFTMarket.MarketItem memory",
                                },
                              },
                              id: 2255,
                              nodeType: "ExpressionStatement",
                              src: "5742:33:11",
                            },
                            {
                              expression: {
                                id: 2258,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2256,
                                  name: "currentIndex",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2201,
                                  src: "5793:12:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2257,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "5809:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "5793:17:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2259,
                              nodeType: "ExpressionStatement",
                              src: "5793:17:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2222,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2220,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2217,
                      src: "5524:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2221,
                      name: "itemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2185,
                      src: "5528:9:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5524:13:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2263,
                  initializationExpression: {
                    assignments: [2217],
                    declarations: [
                      {
                        constant: false,
                        id: 2217,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "5517:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2263,
                        src: "5509:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2216,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "5509:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2219,
                    initialValue: {
                      hexValue: "30",
                      id: 2218,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5521:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "5509:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2224,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "5539:3:11",
                      subExpression: {
                        id: 2223,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2217,
                        src: "5539:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2225,
                    nodeType: "ExpressionStatement",
                    src: "5539:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "5504:331:11",
                },
                {
                  expression: {
                    id: 2264,
                    name: "items",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2208,
                    src: "5851:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  functionReturnParameters: 2183,
                  id: 2265,
                  nodeType: "Return",
                  src: "5844:12:11",
                },
              ],
            },
            functionSelector: "0f08efe0",
            id: 2267,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "fetchMarketItems",
            nameLocation: "5202:16:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2178,
              nodeType: "ParameterList",
              parameters: [],
              src: "5218:2:11",
            },
            returnParameters: {
              id: 2183,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2182,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2267,
                  src: "5242:19:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.MarketItem[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2180,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 2179,
                        name: "MarketItem",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1718,
                        src: "5242:10:11",
                      },
                      referencedDeclaration: 1718,
                      src: "5242:10:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_struct$_MarketItem_$1718_storage_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                    },
                    id: 2181,
                    nodeType: "ArrayTypeName",
                    src: "5242:12:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.MarketItem[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5241:21:11",
            },
            scope: 2486,
            src: "5193:670:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2375,
              nodeType: "Block",
              src: "5990:731:11",
              statements: [
                {
                  assignments: [2275],
                  declarations: [
                    {
                      constant: false,
                      id: 2275,
                      mutability: "mutable",
                      name: "totalItemCount",
                      nameLocation: "6008:14:11",
                      nodeType: "VariableDeclaration",
                      scope: 2375,
                      src: "6000:22:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2274,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6000:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2279,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 2276,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "6025:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 2277,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1368,
                      src: "6025:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 2278,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6025:18:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6000:43:11",
                },
                {
                  assignments: [2281],
                  declarations: [
                    {
                      constant: false,
                      id: 2281,
                      mutability: "mutable",
                      name: "itemCount",
                      nameLocation: "6061:9:11",
                      nodeType: "VariableDeclaration",
                      scope: 2375,
                      src: "6053:17:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2280,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6053:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2283,
                  initialValue: {
                    hexValue: "30",
                    id: 2282,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "6073:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6053:21:11",
                },
                {
                  assignments: [2285],
                  declarations: [
                    {
                      constant: false,
                      id: 2285,
                      mutability: "mutable",
                      name: "currentIndex",
                      nameLocation: "6092:12:11",
                      nodeType: "VariableDeclaration",
                      scope: 2375,
                      src: "6084:20:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2284,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6084:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2287,
                  initialValue: {
                    hexValue: "30",
                    id: 2286,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "6107:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6084:24:11",
                },
                {
                  body: {
                    id: 2313,
                    nodeType: "Block",
                    src: "6164:118:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2306,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2298,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "6182:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2302,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2301,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2299,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2289,
                                  src: "6197:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2300,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6201:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6197:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "6182:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2303,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "owner",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1709,
                            src: "6182:27:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              id: 2304,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "6213:3:11",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 2305,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "6213:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "6182:41:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2312,
                        nodeType: "IfStatement",
                        src: "6178:94:11",
                        trueBody: {
                          id: 2311,
                          nodeType: "Block",
                          src: "6225:47:11",
                          statements: [
                            {
                              expression: {
                                id: 2309,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2307,
                                  name: "itemCount",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2281,
                                  src: "6243:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2308,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6256:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6243:14:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2310,
                              nodeType: "ExpressionStatement",
                              src: "6243:14:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2294,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2292,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2289,
                      src: "6139:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2293,
                      name: "totalItemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2275,
                      src: "6143:14:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6139:18:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2314,
                  initializationExpression: {
                    assignments: [2289],
                    declarations: [
                      {
                        constant: false,
                        id: 2289,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "6132:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2314,
                        src: "6124:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2288,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "6124:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2291,
                    initialValue: {
                      hexValue: "30",
                      id: 2290,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "6136:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "6124:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2296,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "6159:3:11",
                      subExpression: {
                        id: 2295,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2289,
                        src: "6159:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2297,
                    nodeType: "ExpressionStatement",
                    src: "6159:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "6119:163:11",
                },
                {
                  assignments: [2319],
                  declarations: [
                    {
                      constant: false,
                      id: 2319,
                      mutability: "mutable",
                      name: "items",
                      nameLocation: "6312:5:11",
                      nodeType: "VariableDeclaration",
                      scope: 2375,
                      src: "6292:25:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2317,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2316,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "6292:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "6292:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2318,
                        nodeType: "ArrayTypeName",
                        src: "6292:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2326,
                  initialValue: {
                    arguments: [
                      {
                        id: 2324,
                        name: "itemCount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2281,
                        src: "6337:9:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2323,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "6320:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256) pure returns (struct NFTMarket.MarketItem memory[] memory)",
                      },
                      typeName: {
                        baseType: {
                          id: 2321,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2320,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "6324:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "6324:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2322,
                        nodeType: "ArrayTypeName",
                        src: "6324:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                    },
                    id: 2325,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6320:27:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6292:55:11",
                },
                {
                  body: {
                    id: 2371,
                    nodeType: "Block",
                    src: "6402:291:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2345,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2337,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "6420:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2341,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2340,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2338,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2328,
                                  src: "6435:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2339,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6439:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6435:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "6420:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2342,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "owner",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1709,
                            src: "6420:27:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              id: 2343,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "6451:3:11",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 2344,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "6451:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "6420:41:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2370,
                        nodeType: "IfStatement",
                        src: "6416:267:11",
                        trueBody: {
                          id: 2369,
                          nodeType: "Block",
                          src: "6463:220:11",
                          statements: [
                            {
                              assignments: [2347],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2347,
                                  mutability: "mutable",
                                  name: "currentId",
                                  nameLocation: "6489:9:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2369,
                                  src: "6481:17:11",
                                  stateVariable: false,
                                  storageLocation: "default",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  typeName: {
                                    id: 2346,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "6481:7:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2351,
                              initialValue: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2350,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2348,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2328,
                                  src: "6501:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2349,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6505:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6501:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "6481:25:11",
                            },
                            {
                              assignments: [2354],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2354,
                                  mutability: "mutable",
                                  name: "currentItem",
                                  nameLocation: "6543:11:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2369,
                                  src: "6524:30:11",
                                  stateVariable: false,
                                  storageLocation: "storage",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString: "struct NFTMarket.MarketItem",
                                  },
                                  typeName: {
                                    id: 2353,
                                    nodeType: "UserDefinedTypeName",
                                    pathNode: {
                                      id: 2352,
                                      name: "MarketItem",
                                      nodeType: "IdentifierPath",
                                      referencedDeclaration: 1718,
                                      src: "6524:10:11",
                                    },
                                    referencedDeclaration: 1718,
                                    src: "6524:10:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_MarketItem_$1718_storage_ptr",
                                      typeString: "struct NFTMarket.MarketItem",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2358,
                              initialValue: {
                                baseExpression: {
                                  id: 2355,
                                  name: "idToMarketItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 1730,
                                  src: "6557:14:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                  },
                                },
                                id: 2357,
                                indexExpression: {
                                  id: 2356,
                                  name: "currentId",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2347,
                                  src: "6572:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "6557:25:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_storage",
                                  typeString:
                                    "struct NFTMarket.MarketItem storage ref",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "6524:58:11",
                            },
                            {
                              expression: {
                                id: 2363,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  baseExpression: {
                                    id: 2359,
                                    name: "items",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2319,
                                    src: "6600:5:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                                      typeString:
                                        "struct NFTMarket.MarketItem memory[] memory",
                                    },
                                  },
                                  id: 2361,
                                  indexExpression: {
                                    id: 2360,
                                    name: "currentIndex",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2285,
                                    src: "6606:12:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: true,
                                  nodeType: "IndexAccess",
                                  src: "6600:19:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_memory_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem memory",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "=",
                                rightHandSide: {
                                  id: 2362,
                                  name: "currentItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2354,
                                  src: "6622:11:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem storage pointer",
                                  },
                                },
                                src: "6600:33:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_memory_ptr",
                                  typeString:
                                    "struct NFTMarket.MarketItem memory",
                                },
                              },
                              id: 2364,
                              nodeType: "ExpressionStatement",
                              src: "6600:33:11",
                            },
                            {
                              expression: {
                                id: 2367,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2365,
                                  name: "currentIndex",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2285,
                                  src: "6651:12:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2366,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "6667:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "6651:17:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2368,
                              nodeType: "ExpressionStatement",
                              src: "6651:17:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2333,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2331,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2328,
                      src: "6377:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2332,
                      name: "totalItemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2275,
                      src: "6381:14:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6377:18:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2372,
                  initializationExpression: {
                    assignments: [2328],
                    declarations: [
                      {
                        constant: false,
                        id: 2328,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "6370:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2372,
                        src: "6362:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2327,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "6362:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2330,
                    initialValue: {
                      hexValue: "30",
                      id: 2329,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "6374:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "6362:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2335,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "6397:3:11",
                      subExpression: {
                        id: 2334,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2328,
                        src: "6397:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2336,
                    nodeType: "ExpressionStatement",
                    src: "6397:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "6357:336:11",
                },
                {
                  expression: {
                    id: 2373,
                    name: "items",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2319,
                    src: "6709:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  functionReturnParameters: 2273,
                  id: 2374,
                  nodeType: "Return",
                  src: "6702:12:11",
                },
              ],
            },
            functionSelector: "202e3740",
            id: 2376,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "fetchMyNFTs",
            nameLocation: "5934:11:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2268,
              nodeType: "ParameterList",
              parameters: [],
              src: "5945:2:11",
            },
            returnParameters: {
              id: 2273,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2272,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2376,
                  src: "5969:19:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.MarketItem[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2270,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 2269,
                        name: "MarketItem",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1718,
                        src: "5969:10:11",
                      },
                      referencedDeclaration: 1718,
                      src: "5969:10:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_struct$_MarketItem_$1718_storage_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                    },
                    id: 2271,
                    nodeType: "ArrayTypeName",
                    src: "5969:12:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.MarketItem[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5968:21:11",
            },
            scope: 2486,
            src: "5925:796:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 2484,
              nodeType: "Block",
              src: "6846:733:11",
              statements: [
                {
                  assignments: [2384],
                  declarations: [
                    {
                      constant: false,
                      id: 2384,
                      mutability: "mutable",
                      name: "totalItemCount",
                      nameLocation: "6864:14:11",
                      nodeType: "VariableDeclaration",
                      scope: 2484,
                      src: "6856:22:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2383,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6856:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2388,
                  initialValue: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 2385,
                        name: "_itemIds",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1677,
                        src: "6881:8:11",
                        typeDescriptions: {
                          typeIdentifier: "t_struct$_Counter_$1356_storage",
                          typeString: "struct Counters.Counter storage ref",
                        },
                      },
                      id: 2386,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "current",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 1368,
                      src: "6881:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_struct$_Counter_$1356_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1356_storage_ptr_$",
                        typeString:
                          "function (struct Counters.Counter storage pointer) view returns (uint256)",
                      },
                    },
                    id: 2387,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6881:18:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6856:43:11",
                },
                {
                  assignments: [2390],
                  declarations: [
                    {
                      constant: false,
                      id: 2390,
                      mutability: "mutable",
                      name: "itemCount",
                      nameLocation: "6917:9:11",
                      nodeType: "VariableDeclaration",
                      scope: 2484,
                      src: "6909:17:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2389,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6909:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2392,
                  initialValue: {
                    hexValue: "30",
                    id: 2391,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "6929:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6909:21:11",
                },
                {
                  assignments: [2394],
                  declarations: [
                    {
                      constant: false,
                      id: 2394,
                      mutability: "mutable",
                      name: "currentIndex",
                      nameLocation: "6948:12:11",
                      nodeType: "VariableDeclaration",
                      scope: 2484,
                      src: "6940:20:11",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 2393,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6940:7:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2396,
                  initialValue: {
                    hexValue: "30",
                    id: 2395,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "6963:1:11",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_0_by_1",
                      typeString: "int_const 0",
                    },
                    value: "0",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6940:24:11",
                },
                {
                  body: {
                    id: 2422,
                    nodeType: "Block",
                    src: "7020:119:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2415,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2407,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "7038:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2411,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2410,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2408,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2398,
                                  src: "7053:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2409,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7057:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7053:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "7038:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2412,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "seller",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1707,
                            src: "7038:28:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              id: 2413,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "7070:3:11",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 2414,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "7070:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "7038:42:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2421,
                        nodeType: "IfStatement",
                        src: "7034:95:11",
                        trueBody: {
                          id: 2420,
                          nodeType: "Block",
                          src: "7082:47:11",
                          statements: [
                            {
                              expression: {
                                id: 2418,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2416,
                                  name: "itemCount",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2390,
                                  src: "7100:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2417,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7113:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7100:14:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2419,
                              nodeType: "ExpressionStatement",
                              src: "7100:14:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2403,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2401,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2398,
                      src: "6995:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2402,
                      name: "totalItemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2384,
                      src: "6999:14:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "6995:18:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2423,
                  initializationExpression: {
                    assignments: [2398],
                    declarations: [
                      {
                        constant: false,
                        id: 2398,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "6988:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2423,
                        src: "6980:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2397,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "6980:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2400,
                    initialValue: {
                      hexValue: "30",
                      id: 2399,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "6992:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "6980:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2405,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "7015:3:11",
                      subExpression: {
                        id: 2404,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2398,
                        src: "7015:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2406,
                    nodeType: "ExpressionStatement",
                    src: "7015:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "6975:164:11",
                },
                {
                  assignments: [2428],
                  declarations: [
                    {
                      constant: false,
                      id: 2428,
                      mutability: "mutable",
                      name: "items",
                      nameLocation: "7169:5:11",
                      nodeType: "VariableDeclaration",
                      scope: 2484,
                      src: "7149:25:11",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                        typeString: "struct NFTMarket.MarketItem[]",
                      },
                      typeName: {
                        baseType: {
                          id: 2426,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2425,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "7149:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "7149:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2427,
                        nodeType: "ArrayTypeName",
                        src: "7149:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 2435,
                  initialValue: {
                    arguments: [
                      {
                        id: 2433,
                        name: "itemCount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2390,
                        src: "7194:9:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 2432,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "NewExpression",
                      src: "7177:16:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256) pure returns (struct NFTMarket.MarketItem memory[] memory)",
                      },
                      typeName: {
                        baseType: {
                          id: 2430,
                          nodeType: "UserDefinedTypeName",
                          pathNode: {
                            id: 2429,
                            name: "MarketItem",
                            nodeType: "IdentifierPath",
                            referencedDeclaration: 1718,
                            src: "7181:10:11",
                          },
                          referencedDeclaration: 1718,
                          src: "7181:10:11",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_MarketItem_$1718_storage_ptr",
                            typeString: "struct NFTMarket.MarketItem",
                          },
                        },
                        id: 2431,
                        nodeType: "ArrayTypeName",
                        src: "7181:12:11",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                          typeString: "struct NFTMarket.MarketItem[]",
                        },
                      },
                    },
                    id: 2434,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7177:27:11",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "7149:55:11",
                },
                {
                  body: {
                    id: 2480,
                    nodeType: "Block",
                    src: "7259:292:11",
                    statements: [
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 2454,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              baseExpression: {
                                id: 2446,
                                name: "idToMarketItem",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1730,
                                src: "7277:14:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                  typeString:
                                    "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                },
                              },
                              id: 2450,
                              indexExpression: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2449,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2447,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2437,
                                  src: "7292:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2448,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7296:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7292:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "7277:21:11",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_MarketItem_$1718_storage",
                                typeString:
                                  "struct NFTMarket.MarketItem storage ref",
                              },
                            },
                            id: 2451,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "seller",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 1707,
                            src: "7277:28:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address_payable",
                              typeString: "address payable",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              id: 2452,
                              name: "msg",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 4294967281,
                              src: "7309:3:11",
                              typeDescriptions: {
                                typeIdentifier: "t_magic_message",
                                typeString: "msg",
                              },
                            },
                            id: 2453,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberName: "sender",
                            nodeType: "MemberAccess",
                            src: "7309:10:11",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "7277:42:11",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 2479,
                        nodeType: "IfStatement",
                        src: "7273:268:11",
                        trueBody: {
                          id: 2478,
                          nodeType: "Block",
                          src: "7321:220:11",
                          statements: [
                            {
                              assignments: [2456],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2456,
                                  mutability: "mutable",
                                  name: "currentId",
                                  nameLocation: "7347:9:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2478,
                                  src: "7339:17:11",
                                  stateVariable: false,
                                  storageLocation: "default",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                  typeName: {
                                    id: 2455,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "7339:7:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2460,
                              initialValue: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 2459,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  id: 2457,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2437,
                                  src: "7359:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "31",
                                  id: 2458,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7363:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7359:5:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "7339:25:11",
                            },
                            {
                              assignments: [2463],
                              declarations: [
                                {
                                  constant: false,
                                  id: 2463,
                                  mutability: "mutable",
                                  name: "currentItem",
                                  nameLocation: "7401:11:11",
                                  nodeType: "VariableDeclaration",
                                  scope: 2478,
                                  src: "7382:30:11",
                                  stateVariable: false,
                                  storageLocation: "storage",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString: "struct NFTMarket.MarketItem",
                                  },
                                  typeName: {
                                    id: 2462,
                                    nodeType: "UserDefinedTypeName",
                                    pathNode: {
                                      id: 2461,
                                      name: "MarketItem",
                                      nodeType: "IdentifierPath",
                                      referencedDeclaration: 1718,
                                      src: "7382:10:11",
                                    },
                                    referencedDeclaration: 1718,
                                    src: "7382:10:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_MarketItem_$1718_storage_ptr",
                                      typeString: "struct NFTMarket.MarketItem",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              id: 2467,
                              initialValue: {
                                baseExpression: {
                                  id: 2464,
                                  name: "idToMarketItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 1730,
                                  src: "7415:14:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_mapping$_t_uint256_$_t_struct$_MarketItem_$1718_storage_$",
                                    typeString:
                                      "mapping(uint256 => struct NFTMarket.MarketItem storage ref)",
                                  },
                                },
                                id: 2466,
                                indexExpression: {
                                  id: 2465,
                                  name: "currentId",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2456,
                                  src: "7430:9:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "7415:25:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_storage",
                                  typeString:
                                    "struct NFTMarket.MarketItem storage ref",
                                },
                              },
                              nodeType: "VariableDeclarationStatement",
                              src: "7382:58:11",
                            },
                            {
                              expression: {
                                id: 2472,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  baseExpression: {
                                    id: 2468,
                                    name: "items",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2428,
                                    src: "7458:5:11",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                                      typeString:
                                        "struct NFTMarket.MarketItem memory[] memory",
                                    },
                                  },
                                  id: 2470,
                                  indexExpression: {
                                    id: 2469,
                                    name: "currentIndex",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 2394,
                                    src: "7464:12:11",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: true,
                                  nodeType: "IndexAccess",
                                  src: "7458:19:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_memory_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem memory",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "=",
                                rightHandSide: {
                                  id: 2471,
                                  name: "currentItem",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2463,
                                  src: "7480:11:11",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_MarketItem_$1718_storage_ptr",
                                    typeString:
                                      "struct NFTMarket.MarketItem storage pointer",
                                  },
                                },
                                src: "7458:33:11",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_MarketItem_$1718_memory_ptr",
                                  typeString:
                                    "struct NFTMarket.MarketItem memory",
                                },
                              },
                              id: 2473,
                              nodeType: "ExpressionStatement",
                              src: "7458:33:11",
                            },
                            {
                              expression: {
                                id: 2476,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftHandSide: {
                                  id: 2474,
                                  name: "currentIndex",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 2394,
                                  src: "7509:12:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "Assignment",
                                operator: "+=",
                                rightHandSide: {
                                  hexValue: "31",
                                  id: 2475,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7525:1:11",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_1_by_1",
                                    typeString: "int_const 1",
                                  },
                                  value: "1",
                                },
                                src: "7509:17:11",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 2477,
                              nodeType: "ExpressionStatement",
                              src: "7509:17:11",
                            },
                          ],
                        },
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 2442,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 2440,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2437,
                      src: "7234:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      id: 2441,
                      name: "totalItemCount",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 2384,
                      src: "7238:14:11",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "7234:18:11",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 2481,
                  initializationExpression: {
                    assignments: [2437],
                    declarations: [
                      {
                        constant: false,
                        id: 2437,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "7227:1:11",
                        nodeType: "VariableDeclaration",
                        scope: 2481,
                        src: "7219:9:11",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 2436,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "7219:7:11",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 2439,
                    initialValue: {
                      hexValue: "30",
                      id: 2438,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "7231:1:11",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "7219:13:11",
                  },
                  loopExpression: {
                    expression: {
                      id: 2444,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "7254:3:11",
                      subExpression: {
                        id: 2443,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 2437,
                        src: "7254:1:11",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 2445,
                    nodeType: "ExpressionStatement",
                    src: "7254:3:11",
                  },
                  nodeType: "ForStatement",
                  src: "7214:337:11",
                },
                {
                  expression: {
                    id: 2482,
                    name: "items",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 2428,
                    src: "7567:5:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                      typeString: "struct NFTMarket.MarketItem memory[] memory",
                    },
                  },
                  functionReturnParameters: 2382,
                  id: 2483,
                  nodeType: "Return",
                  src: "7560:12:11",
                },
              ],
            },
            functionSelector: "f064c32e",
            id: 2485,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "fetchItemsCreated",
            nameLocation: "6784:17:11",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 2377,
              nodeType: "ParameterList",
              parameters: [],
              src: "6801:2:11",
            },
            returnParameters: {
              id: 2382,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 2381,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 2485,
                  src: "6825:19:11",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier:
                      "t_array$_t_struct$_MarketItem_$1718_memory_ptr_$dyn_memory_ptr",
                    typeString: "struct NFTMarket.MarketItem[]",
                  },
                  typeName: {
                    baseType: {
                      id: 2379,
                      nodeType: "UserDefinedTypeName",
                      pathNode: {
                        id: 2378,
                        name: "MarketItem",
                        nodeType: "IdentifierPath",
                        referencedDeclaration: 1718,
                        src: "6825:10:11",
                      },
                      referencedDeclaration: 1718,
                      src: "6825:10:11",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_struct$_MarketItem_$1718_storage_ptr",
                        typeString: "struct NFTMarket.MarketItem",
                      },
                    },
                    id: 2380,
                    nodeType: "ArrayTypeName",
                    src: "6825:12:11",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_struct$_MarketItem_$1718_storage_$dyn_storage_ptr",
                      typeString: "struct NFTMarket.MarketItem[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6824:21:11",
            },
            scope: 2486,
            src: "6775:804:11",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
        ],
        scope: 2487,
        src: "246:7335:11",
      },
    ],
    src: "46:7536:11",
  },
  compiler: {
    name: "solc",
    version: "0.8.3+commit.8d00100c.Emscripten.clang",
  },
  networks: {
    1337: {
      events: {},
      links: {},
      address: "0x14118696b71d116BeC94A614eBB3c3f1f1BAA7Df",
      transactionHash:
        "0xbd44380a978ecdfe909eb9b46e0f854c2d956cf95730e343afa78c38280a45a0",
    },
    80001: {
      events: {
        "0x79f8c05bb09c0956360a67fcd99d7cd58b143c2e5965443ccf2238950961eac5": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "itemId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "nftContract",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "sellerId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "sold",
              type: "bool",
            },
          ],
          name: "MarketItemCreated",
          type: "event",
        },
      },
      links: {},
      address: "0xC0020314F1A5aE0b6B6afe28Cb8e0573C75Dfc45",
      transactionHash:
        "0xc44790bff892a9c1fd7d43980c7dfdb163aa2951b9bda4e897af3acdbe91ff06",
    },
  },
  schemaVersion: "3.4.3",
  updatedAt: "2021-12-06T09:27:26.641Z",
  networkType: "ethereum",
  devdoc: {
    kind: "dev",
    methods: {},
    version: 1,
  },
  userdoc: {
    kind: "user",
    methods: {},
    version: 1,
  },
};
Moralis.Cloud.define("clearBids", async (request) => {
  const web3 = Moralis.web3ByChain("0x13881");

  const chainId = parseInt("0x13881", 16);

  const contract = new web3.eth.Contract(
    NFTMarketContract.abi,
    NFTMarketContract.networks["80001"].address
  );
  const data = await contract.methods.fetchMarketItems().call();
  const result = [];
  await Promise.all(
    data.map(async (i) => {
      if (i.isAuction) {
        if (new Date(parseInt(i.sellDate)).getTime() < new Date().getTime()) {
          result.push(i.itemId);
          await contract.methods.createBidSale(i.itemId);
        }
      }
    })
  );
  return result;
});
